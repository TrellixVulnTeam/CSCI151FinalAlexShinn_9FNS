{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78","program":"/Users/staniya/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","img_hash","/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=0e426519412fde7d","-C","extra-filename=-0e426519412fde7d","--out-dir","/Users/staniya/PycharmProjects/texture-synthesis/target/rls/debug/deps","-L","dependency=/Users/staniya/PycharmProjects/texture-synthesis/target/rls/debug/deps","--extern","bit_vec=/Users/staniya/PycharmProjects/texture-synthesis/target/rls/debug/deps/libbit_vec-3e586836a441a460.rmeta","--extern","rustc_serialize=/Users/staniya/PycharmProjects/texture-synthesis/target/rls/debug/deps/librustc_serialize-f9ef611bdb98558f.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/staniya/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/staniya/PycharmProjects/texture-synthesis/target/rls/debug/deps/libimg_hash-0e426519412fde7d.rmeta"},"prelude":{"crate_id":{"name":"img_hash","disambiguator":[17740494794098944298,6555174759395248947]},"crate_root":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src","external_crates":[{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[9176452395873514981,10525323411957323785]}},{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[15010738070622620763,9605760616786660431]}},{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[8211843569075862794,5370502913999467694]}},{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[5168977417888994485,12129851499920233632]}},{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[9254821246596336482,1562696929571001984]}},{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[4867494102928472883,16549916413327868340]}},{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[12208796569805280475,9421298070223625802]}},{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[16776259526442764164,2692171601035033462]}},{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[8506315589905780113,7752550639658555424]}},{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[6004073670142137807,10055010459345902388]}},{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[13812981793209371227,10465105188798852626]}},{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[12279896640040761358,16819944754252654372]}},{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[502125910674001101,4874613814734389117]}},{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[6964077277237141888,7151316435171244180]}},{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","num":15,"id":{"name":"panic_unwind","disambiguator":[5505266058476155326,9550778519957076375]}},{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","num":16,"id":{"name":"bit_vec","disambiguator":[17806758782393487255,11395090799504331081]}},{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","num":17,"id":{"name":"rustc_serialize","disambiguator":[9966952559906760631,9577248222975153179]}}],"span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":362,"byte_end":24097,"line_start":8,"line_end":775,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":17,"index":2427},"span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":1812,"byte_end":1827,"line_start":51,"line_end":51,"column_start":28,"column_end":43},"alias_span":null,"name":"FromBase64Error","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":54},"span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":1992,"byte_end":2013,"line_start":66,"line_end":66,"column_start":14,"column_end":35},"alias_span":null,"name":"precompute_dct_matrix","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":362,"byte_end":24097,"line_start":8,"line_end":775,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":69},{"krate":0,"index":98},{"krate":0,"index":197},{"krate":0,"index":210},{"krate":0,"index":211},{"krate":0,"index":207},{"krate":0,"index":208},{"krate":0,"index":204},{"krate":0,"index":202},{"krate":0,"index":200},{"krate":0,"index":99},{"krate":0,"index":111},{"krate":0,"index":214},{"krate":0,"index":217},{"krate":0,"index":112},{"krate":0,"index":115},{"krate":0,"index":117},{"krate":0,"index":119},{"krate":0,"index":120},{"krate":0,"index":122},{"krate":0,"index":218},{"krate":0,"index":247},{"krate":0,"index":246},{"krate":0,"index":244},{"krate":0,"index":241},{"krate":0,"index":237},{"krate":0,"index":238},{"krate":0,"index":234},{"krate":0,"index":235},{"krate":0,"index":125},{"krate":0,"index":133},{"krate":0,"index":137},{"krate":0,"index":138},{"krate":0,"index":143},{"krate":0,"index":149},{"krate":0,"index":153},{"krate":0,"index":158},{"krate":0,"index":163},{"krate":0,"index":168},{"krate":0,"index":170},{"krate":0,"index":172},{"krate":0,"index":174},{"krate":0,"index":183},{"krate":0,"index":185}],"decl_id":null,"docs":" A crate that provides several perceptual hashing algorithms for images.\n Supports images opened with the [image][1] crate from Piston.","sig":null,"attributes":[{"value":"/ A crate that provides several perceptual hashing algorithms for images.","span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":362,"byte_end":437,"line_start":8,"line_end":8,"column_start":1,"column_end":76}},{"value":"/ Supports images opened with the [image][1] crate from Piston.","span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":438,"byte_end":503,"line_start":9,"line_end":9,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":504,"byte_end":507,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":508,"byte_end":511,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ ### Example","span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":512,"byte_end":527,"line_start":12,"line_end":12,"column_start":1,"column_end":16}},{"value":"/ Hash two images, then compute their percentage difference.","span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":528,"byte_end":590,"line_start":13,"line_end":13,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":591,"byte_end":594,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":595,"byte_end":613,"line_start":15,"line_end":15,"column_start":1,"column_end":19}},{"value":"/ extern crate image;","span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":614,"byte_end":637,"line_start":16,"line_end":16,"column_start":1,"column_end":24}},{"value":"/ extern crate img_hash;","span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":638,"byte_end":664,"line_start":17,"line_end":17,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":665,"byte_end":668,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ use img_hash::{ImageHash, HashType};","span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":669,"byte_end":709,"line_start":19,"line_end":19,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":710,"byte_end":713,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":714,"byte_end":729,"line_start":21,"line_end":21,"column_start":1,"column_end":16}},{"value":"/     let image1 = image::open(\"image1.png\").unwrap();","span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":730,"byte_end":786,"line_start":22,"line_end":22,"column_start":1,"column_end":57}},{"value":"/     let image2 = image::open(\"image2.png\").unwrap();","span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":787,"byte_end":843,"line_start":23,"line_end":23,"column_start":1,"column_end":57}},{"value":"/     ","span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":844,"byte_end":852,"line_start":24,"line_end":24,"column_start":1,"column_end":9}},{"value":"/     // These two lines produce hashes with 64 bits (8 ** 2),","span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":853,"byte_end":917,"line_start":25,"line_end":25,"column_start":1,"column_end":65}},{"value":"/     // using the Gradient hash, a good middle ground between","span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":918,"byte_end":982,"line_start":26,"line_end":26,"column_start":1,"column_end":65}},{"value":"/     // the performance of Mean and the accuracy of DCT.","span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":983,"byte_end":1042,"line_start":27,"line_end":27,"column_start":1,"column_end":60}},{"value":"/     let hash1 = ImageHash::hash(&image1, 8, HashType::Gradient);","span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":1043,"byte_end":1111,"line_start":28,"line_end":28,"column_start":1,"column_end":69}},{"value":"/     let hash2 = ImageHash::hash(&image2, 8, HashType::Gradient);","span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":1112,"byte_end":1180,"line_start":29,"line_end":29,"column_start":1,"column_end":69}},{"value":"/     ","span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":1181,"byte_end":1189,"line_start":30,"line_end":30,"column_start":1,"column_end":9}},{"value":"/     println!(\"Image1 hash: {}\", hash1.to_base64());","span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":1190,"byte_end":1245,"line_start":31,"line_end":31,"column_start":1,"column_end":56}},{"value":"/     println!(\"Image2 hash: {}\", hash2.to_base64());","span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":1246,"byte_end":1301,"line_start":32,"line_end":32,"column_start":1,"column_end":56}},{"value":"/     ","span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":1302,"byte_end":1310,"line_start":33,"line_end":33,"column_start":1,"column_end":9}},{"value":"/     println!(\"% Difference: {}\", hash1.dist_ratio(&hash2));","span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":1311,"byte_end":1374,"line_start":34,"line_end":34,"column_start":1,"column_end":64}},{"value":"/ }","span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":1375,"byte_end":1380,"line_start":35,"line_end":35,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":1381,"byte_end":1388,"line_start":36,"line_end":36,"column_start":1,"column_end":8}},{"value":"/ [1]: https://github.com/PistonDevelopers/image","span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":1389,"byte_end":1439,"line_start":37,"line_end":37,"column_start":1,"column_end":51}},{"value":"deny(missing_docs)","span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":1440,"byte_end":1462,"line_start":38,"line_end":38,"column_start":1,"column_end":23}}]},{"kind":"Function","id":{"krate":0,"index":54},"span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/dct.rs","byte_start":26820,"byte_end":26841,"line_start":91,"line_end":91,"column_start":8,"column_end":29},"name":"precompute_dct_matrix","qualname":"::dct::precompute_dct_matrix","value":"pub fn precompute_dct_matrix(u32)","parent":null,"children":[],"decl_id":null,"docs":" Precompute the DCT matrix for a given hash size and memoize it in thread-local\n storage.","sig":null,"attributes":[{"value":"/ Precompute the DCT matrix for a given hash size and memoize it in thread-local","span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/dct.rs","byte_start":25904,"byte_end":25986,"line_start":72,"line_end":72,"column_start":1,"column_end":83}},{"value":"/ storage.","span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/dct.rs","byte_start":25987,"byte_end":25999,"line_start":73,"line_end":73,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/dct.rs","byte_start":26000,"byte_end":26003,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/dct.rs","byte_start":26004,"byte_end":26007,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ If a precomputed matrix was already stored, even of the same length, it will be overwritten.","span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/dct.rs","byte_start":26008,"byte_end":26104,"line_start":76,"line_end":76,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/dct.rs","byte_start":26105,"byte_end":26108,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ This can produce a significant runtime savings (an order of magnitude on the author's machine)","span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/dct.rs","byte_start":26109,"byte_end":26207,"line_start":78,"line_end":78,"column_start":1,"column_end":99}},{"value":"/ when performing multiple hashing runs with the same hash size, as compared to not performing","span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/dct.rs","byte_start":26208,"byte_end":26304,"line_start":79,"line_end":79,"column_start":1,"column_end":97}},{"value":"/ this step.","span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/dct.rs","byte_start":26305,"byte_end":26319,"line_start":80,"line_end":80,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/dct.rs","byte_start":26320,"byte_end":26323,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ ## Note","span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/dct.rs","byte_start":26324,"byte_end":26335,"line_start":82,"line_end":82,"column_start":1,"column_end":12}},{"value":"/ This only affects the built-in DCT hash (`HashType::DCT`). It also includes","span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/dct.rs","byte_start":26336,"byte_end":26415,"line_start":83,"line_end":83,"column_start":1,"column_end":80}},{"value":"/ the hash size multiplier applied by the DCT hash algorithm, so just pass the same","span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/dct.rs","byte_start":26416,"byte_end":26501,"line_start":84,"line_end":84,"column_start":1,"column_end":86}},{"value":"/ hash size that you would to `ImageHash::hash()`.","span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/dct.rs","byte_start":26502,"byte_end":26554,"line_start":85,"line_end":85,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/dct.rs","byte_start":26555,"byte_end":26558,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ ## Note: Thread-Local","span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/dct.rs","byte_start":26559,"byte_end":26584,"line_start":87,"line_end":87,"column_start":1,"column_end":26}},{"value":"/ Because this uses thread-local storage, this will need to be called on every thread","span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/dct.rs","byte_start":26585,"byte_end":26672,"line_start":88,"line_end":88,"column_start":1,"column_end":88}},{"value":"/ that will be using the DCT hash for the runtime benefit. You can also","span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/dct.rs","byte_start":26673,"byte_end":26746,"line_start":89,"line_end":89,"column_start":1,"column_end":74}},{"value":"/ have precomputed matrices of different sizes for each thread.","span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/dct.rs","byte_start":26747,"byte_end":26812,"line_start":90,"line_end":90,"column_start":1,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":197},"span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":2265,"byte_end":2274,"line_start":73,"line_end":73,"column_start":12,"column_end":21},"name":"ImageHash","qualname":"::ImageHash","value":"ImageHash { bitv, hash_type }","parent":null,"children":[{"krate":0,"index":198},{"krate":0,"index":199}],"decl_id":null,"docs":" A struct representing an image processed by a perceptual hash.\n For efficiency, does not retain a copy of the image data after hashing.","sig":null,"attributes":[{"value":"/ A struct representing an image processed by a perceptual hash.","span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":2016,"byte_end":2082,"line_start":68,"line_end":68,"column_start":1,"column_end":67}},{"value":"/ For efficiency, does not retain a copy of the image data after hashing.","span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":2083,"byte_end":2158,"line_start":69,"line_end":69,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":2159,"byte_end":2162,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ Get an instance with `ImageHash::hash()`.","span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":2163,"byte_end":2208,"line_start":71,"line_end":71,"column_start":1,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":198},"span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":2314,"byte_end":2318,"line_start":75,"line_end":75,"column_start":9,"column_end":13},"name":"bitv","qualname":"::ImageHash::bitv","value":"bit_vec::BitVec","parent":{"krate":0,"index":197},"children":[],"decl_id":null,"docs":" The bits of the hash\n","sig":null,"attributes":[{"value":"/ The bits of the hash","span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":2281,"byte_end":2305,"line_start":74,"line_end":74,"column_start":5,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":199},"span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":2365,"byte_end":2374,"line_start":77,"line_end":77,"column_start":9,"column_end":18},"name":"hash_type","qualname":"::ImageHash::hash_type","value":"HashType","parent":{"krate":0,"index":197},"children":[],"decl_id":null,"docs":" The type of the hash\n","sig":null,"attributes":[{"value":"/ The type of the hash","span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":2332,"byte_end":2356,"line_start":76,"line_end":76,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":100},"span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":2602,"byte_end":2606,"line_start":84,"line_end":84,"column_start":12,"column_end":16},"name":"hash","qualname":"<ImageHash>::hash","value":"pub fn hash<I: HashImage>(&I, u32, HashType) -> ImageHash","parent":null,"children":[],"decl_id":null,"docs":" Create a hash of `img` with a length of `hash_size * hash_size`\n (`* 2` when using `HashType::DoubleGradient`)\n using the hash algorithm described by `hash_type`.\n","sig":null,"attributes":[{"value":"/ Create a hash of `img` with a length of `hash_size * hash_size`","span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":2410,"byte_end":2477,"line_start":81,"line_end":81,"column_start":5,"column_end":72}},{"value":"/ (`* 2` when using `HashType::DoubleGradient`)","span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":2482,"byte_end":2531,"line_start":82,"line_end":82,"column_start":5,"column_end":54}},{"value":"/ using the hash algorithm described by `hash_type`.","span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":2536,"byte_end":2590,"line_start":83,"line_end":83,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":102},"span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":3171,"byte_end":3175,"line_start":100,"line_end":100,"column_start":12,"column_end":16},"name":"dist","qualname":"<ImageHash>::dist","value":"pub fn dist(&Self, &ImageHash) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Calculate the Hamming distance between this and `other`.\n Equivalent to counting the 1-bits of the XOR of the two `BitVec`.","sig":null,"attributes":[{"value":"/ Calculate the Hamming distance between this and `other`.","span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":2822,"byte_end":2882,"line_start":93,"line_end":93,"column_start":5,"column_end":65}},{"value":"/ Equivalent to counting the 1-bits of the XOR of the two `BitVec`.","span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":2887,"byte_end":2956,"line_start":94,"line_end":94,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":2961,"byte_end":2964,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ Essential to determining the perceived difference between `self` and `other`.","span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":2969,"byte_end":3050,"line_start":96,"line_end":96,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":3055,"byte_end":3058,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ ###Panics","span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":3063,"byte_end":3076,"line_start":98,"line_end":98,"column_start":5,"column_end":18}},{"value":"/ If `self` and `other` have differing `bitv` lengths or `hash_type` values.","span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":3081,"byte_end":3159,"line_start":99,"line_end":99,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":3990,"byte_end":4000,"line_start":125,"line_end":125,"column_start":12,"column_end":22},"name":"dist_ratio","qualname":"<ImageHash>::dist_ratio","value":"pub fn dist_ratio(&Self, &ImageHash) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Calculate the Hamming distance between `self` and `other`,\n then normalize it to `[0, 1]`, as a fraction of the total bits.","sig":null,"attributes":[{"value":"/ Calculate the Hamming distance between `self` and `other`,","span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":3690,"byte_end":3752,"line_start":118,"line_end":118,"column_start":5,"column_end":67}},{"value":"/ then normalize it to `[0, 1]`, as a fraction of the total bits.","span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":3757,"byte_end":3824,"line_start":119,"line_end":119,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":3829,"byte_end":3832,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ Roughly equivalent to the % difference between the two images,","span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":3837,"byte_end":3903,"line_start":121,"line_end":121,"column_start":5,"column_end":71}},{"value":"/ represented as a decimal.","span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":3908,"byte_end":3937,"line_start":122,"line_end":122,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":3942,"byte_end":3945,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ See `ImageHash::dist()`.","span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":3950,"byte_end":3978,"line_start":124,"line_end":124,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":105},"span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":4198,"byte_end":4202,"line_start":129,"line_end":129,"column_start":12,"column_end":16},"name":"size","qualname":"<ImageHash>::size","value":"pub fn size(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Get the hash size of this image. Should be equal to the number of bits in the hash.\n","sig":null,"attributes":[{"value":"/ Get the hash size of this image. Should be equal to the number of bits in the hash.","span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":4099,"byte_end":4186,"line_start":128,"line_end":128,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":106},"span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":4335,"byte_end":4344,"line_start":134,"line_end":134,"column_start":12,"column_end":21},"name":"hash_type","qualname":"<ImageHash>::hash_type","value":"pub fn hash_type(&Self) -> HashType","parent":null,"children":[],"decl_id":null,"docs":" Get the `HashType` that this `ImageHash` was created with.\n","sig":null,"attributes":[{"value":"/ Get the `HashType` that this `ImageHash` was created with.","span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":4261,"byte_end":4323,"line_start":133,"line_end":133,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":107},"span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":4544,"byte_end":4552,"line_start":140,"line_end":140,"column_start":12,"column_end":20},"name":"to_bytes","qualname":"<ImageHash>::to_bytes","value":"pub fn to_bytes(&Self) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Build a grayscale image using the bits of the hash,\n setting pixels to white (`0xff`) for `0` and black (`0x00`) for `1`.\n","sig":null,"attributes":[{"value":"/ Build a grayscale image using the bits of the hash,","span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":4400,"byte_end":4455,"line_start":138,"line_end":138,"column_start":5,"column_end":60}},{"value":"/ setting pixels to white (`0xff`) for `0` and black (`0x00`) for `1`.","span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":4460,"byte_end":4532,"line_start":139,"line_end":139,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":109},"span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":5038,"byte_end":5049,"line_start":151,"line_end":151,"column_start":12,"column_end":23},"name":"from_base64","qualname":"<ImageHash>::from_base64","value":"pub fn from_base64(&str) -> Result<ImageHash, FromBase64Error>","parent":null,"children":[],"decl_id":null,"docs":" Create an `ImageHash` instance from the given Base64-encoded string.\n ## Note:\n **Not** compatible with Base64-encoded strings created before `HashType` was added.","sig":null,"attributes":[{"value":"/ Create an `ImageHash` instance from the given Base64-encoded string.","span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":4649,"byte_end":4721,"line_start":144,"line_end":144,"column_start":5,"column_end":77}},{"value":"/ ## Note:","span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":4726,"byte_end":4738,"line_start":145,"line_end":145,"column_start":5,"column_end":17}},{"value":"/ **Not** compatible with Base64-encoded strings created before `HashType` was added.","span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":4743,"byte_end":4830,"line_start":146,"line_end":146,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":4835,"byte_end":4838,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ Does **not** preserve the internal value of `HashType::UserDCT`.","span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":4843,"byte_end":4911,"line_start":148,"line_end":148,"column_start":5,"column_end":73}},{"value":"/ ## Errors:","span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":4916,"byte_end":4930,"line_start":149,"line_end":149,"column_start":5,"column_end":19}},{"value":"/ Returns a FromBase64Error::InvalidBase64Length when trying to hash a zero-length string","span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":4935,"byte_end":5026,"line_start":150,"line_end":150,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":110},"span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":5849,"byte_end":5858,"line_start":174,"line_end":174,"column_start":12,"column_end":21},"name":"to_base64","qualname":"<ImageHash>::to_base64","value":"pub fn to_base64(&Self) -> String","parent":null,"children":[],"decl_id":null,"docs":" Get a Base64 string representing the bits of this hash.","sig":null,"attributes":[{"value":"/ Get a Base64 string representing the bits of this hash.","span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":5729,"byte_end":5788,"line_start":171,"line_end":171,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":5793,"byte_end":5796,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ Mostly for printing convenience.","span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":5801,"byte_end":5837,"line_start":173,"line_end":173,"column_start":5,"column_end":41}}]},{"kind":"Type","id":{"krate":0,"index":111},"span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":6707,"byte_end":6716,"line_start":197,"line_end":197,"column_start":10,"column_end":19},"name":"Rowstride","qualname":"::Rowstride","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" The length of a row in a 2D matrix when packed into a 1D array.\n","sig":null,"attributes":[{"value":"/ The length of a row in a 2D matrix when packed into a 1D array.","span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":6630,"byte_end":6697,"line_start":196,"line_end":196,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":214},"span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":7298,"byte_end":7307,"line_start":216,"line_end":216,"column_start":12,"column_end":21},"name":"DCT2DFunc","qualname":"::DCT2DFunc","value":"","parent":null,"children":[],"decl_id":null,"docs":" A 2-dimensional Discrete Cosine Transform function that receives\n and returns 1-dimensional packed data.","sig":null,"attributes":[{"value":"/ A 2-dimensional Discrete Cosine Transform function that receives","span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":6727,"byte_end":6795,"line_start":199,"line_end":199,"column_start":1,"column_end":69}},{"value":"/ and returns 1-dimensional packed data.","span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":6796,"byte_end":6838,"line_start":200,"line_end":200,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":6839,"byte_end":6842,"line_start":201,"line_end":201,"column_start":1,"column_end":4}},{"value":"/ The function will be provided the pre-hash data as a 1D-packed vector,","span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":6843,"byte_end":6917,"line_start":202,"line_end":202,"column_start":1,"column_end":75}},{"value":"/ which should be interpreted as a 2D matrix with a given rowstride:","span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":6918,"byte_end":6988,"line_start":203,"line_end":203,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":6989,"byte_end":6992,"line_start":204,"line_end":204,"column_start":1,"column_end":4}},{"value":"/ ```notest","span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":6993,"byte_end":7006,"line_start":205,"line_end":205,"column_start":1,"column_end":14}},{"value":"/ Pre-hash data:","span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":7007,"byte_end":7025,"line_start":206,"line_end":206,"column_start":1,"column_end":19}},{"value":"/ [ 1.0 2.0 3.0 ]","span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":7026,"byte_end":7045,"line_start":207,"line_end":207,"column_start":1,"column_end":20}},{"value":"/ [ 4.0 5.0 6.0 ]","span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":7046,"byte_end":7065,"line_start":208,"line_end":208,"column_start":1,"column_end":20}},{"value":"/ [ 7.0 8.0 9.0 ]","span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":7066,"byte_end":7085,"line_start":209,"line_end":209,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":7086,"byte_end":7089,"line_start":210,"line_end":210,"column_start":1,"column_end":4}},{"value":"/ Packed: [1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0] (rowstride 3)","span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":7090,"byte_end":7161,"line_start":211,"line_end":211,"column_start":1,"column_end":72}},{"value":"/ ```","span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":7162,"byte_end":7169,"line_start":212,"line_end":212,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":7170,"byte_end":7173,"line_start":213,"line_end":213,"column_start":1,"column_end":4}},{"value":"/ The function should then return a new 1D vector of the DCT values packed in the same manner.","span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":7174,"byte_end":7270,"line_start":214,"line_end":214,"column_start":1,"column_end":97}}]},{"kind":"Field","id":{"krate":0,"index":216},"span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":7308,"byte_end":7345,"line_start":216,"line_end":216,"column_start":22,"column_end":59},"name":"0","qualname":"::DCT2DFunc::0","value":"for<'r> fn(&'r [f64], usize) -> std::vec::Vec<f64>","parent":{"krate":0,"index":214},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":219},"span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":8746,"byte_end":8750,"line_start":267,"line_end":267,"column_start":5,"column_end":9},"name":"Mean","qualname":"::HashType::Mean","value":"HashType::Mean","parent":{"krate":0,"index":218},"children":[],"decl_id":null,"docs":" This algorithm first averages the pixels of the reduced-size and color image,\n and then compares each pixel to the average.","sig":null,"attributes":[{"value":"/ This algorithm first averages the pixels of the reduced-size and color image,","span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":8526,"byte_end":8607,"line_start":263,"line_end":263,"column_start":5,"column_end":86}},{"value":"/ and then compares each pixel to the average.","span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":8612,"byte_end":8660,"line_start":264,"line_end":264,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":8665,"byte_end":8668,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ Fast, but inaccurate. Really only useful for finding duplicates.","span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":8673,"byte_end":8741,"line_start":266,"line_end":266,"column_start":5,"column_end":73}}]},{"kind":"TupleVariant","id":{"krate":0,"index":221},"span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":8934,"byte_end":8939,"line_start":272,"line_end":272,"column_start":5,"column_end":10},"name":"Block","qualname":"::HashType::Block","value":"HashType::Block","parent":{"krate":0,"index":218},"children":[],"decl_id":null,"docs":" The [Blockhash.io](http://blockhash.io) algorithm.","sig":null,"attributes":[{"value":"/ The [Blockhash.io](http://blockhash.io) algorithm.","span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":8756,"byte_end":8810,"line_start":268,"line_end":268,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":8815,"byte_end":8818,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ Faster than `Mean` but also prone to more collisions and suitable only for finding","span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":8823,"byte_end":8909,"line_start":270,"line_end":270,"column_start":5,"column_end":91}},{"value":"/ duplicates.","span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":8914,"byte_end":8929,"line_start":271,"line_end":271,"column_start":5,"column_end":20}}]},{"kind":"TupleVariant","id":{"krate":0,"index":223},"span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":9161,"byte_end":9169,"line_start":277,"line_end":277,"column_start":5,"column_end":13},"name":"Gradient","qualname":"::HashType::Gradient","value":"HashType::Gradient","parent":{"krate":0,"index":218},"children":[],"decl_id":null,"docs":" This algorithm compares each pixel in a row to its neighbor and registers changes in\n gradients (e.g. edges and color boundaries).","sig":null,"attributes":[{"value":"/ This algorithm compares each pixel in a row to its neighbor and registers changes in","span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":8945,"byte_end":9033,"line_start":273,"line_end":273,"column_start":5,"column_end":93}},{"value":"/ gradients (e.g. edges and color boundaries).","span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":9038,"byte_end":9086,"line_start":274,"line_end":274,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":9091,"byte_end":9094,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ More accurate than `Mean` but much faster than `DCT`.","span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":9099,"byte_end":9156,"line_start":276,"line_end":276,"column_start":5,"column_end":62}}]},{"kind":"TupleVariant","id":{"krate":0,"index":225},"span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":9404,"byte_end":9418,"line_start":282,"line_end":282,"column_start":5,"column_end":19},"name":"DoubleGradient","qualname":"::HashType::DoubleGradient","value":"HashType::DoubleGradient","parent":{"krate":0,"index":218},"children":[],"decl_id":null,"docs":" A version of `Gradient` that adds an extra hash pass orthogonal to the first\n (i.e. on columns in addition to rows).","sig":null,"attributes":[{"value":"/ A version of `Gradient` that adds an extra hash pass orthogonal to the first","span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":9175,"byte_end":9255,"line_start":278,"line_end":278,"column_start":5,"column_end":85}},{"value":"/ (i.e. on columns in addition to rows).","span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":9260,"byte_end":9302,"line_start":279,"line_end":279,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":9307,"byte_end":9310,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ Slower than `Gradient` and produces a double-sized hash, but much more accurate.","span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":9315,"byte_end":9399,"line_start":281,"line_end":281,"column_start":5,"column_end":89}}]},{"kind":"TupleVariant","id":{"krate":0,"index":227},"span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":9891,"byte_end":9894,"line_start":290,"line_end":290,"column_start":5,"column_end":8},"name":"DCT","qualname":"::HashType::DCT","value":"HashType::DCT","parent":{"krate":0,"index":218},"children":[],"decl_id":null,"docs":" This algorithm runs a Discrete Cosine Transform on the reduced-color and size image,\n then compares each datapoint in the transform to the average.","sig":null,"attributes":[{"value":"/ This algorithm runs a Discrete Cosine Transform on the reduced-color and size image,","span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":9424,"byte_end":9512,"line_start":283,"line_end":283,"column_start":5,"column_end":93}},{"value":"/ then compares each datapoint in the transform to the average.","span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":9517,"byte_end":9582,"line_start":284,"line_end":284,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":9587,"byte_end":9590,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ Slowest by far, but can detect changes in color gamut and sometimes relatively significant edits.","span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":9595,"byte_end":9696,"line_start":286,"line_end":286,"column_start":5,"column_end":106}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":9701,"byte_end":9704,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ Call `precompute_dct_matrix()` with your chosen hash size to memoize the DCT matrix for the","span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":9709,"byte_end":9804,"line_start":288,"line_end":288,"column_start":5,"column_end":100}},{"value":"/ given size, which can produce significant speedups in repeated hash runs.","span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":9809,"byte_end":9886,"line_start":289,"line_end":289,"column_start":5,"column_end":82}}]},{"kind":"TupleVariant","id":{"krate":0,"index":229},"span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":10291,"byte_end":10298,"line_start":298,"line_end":298,"column_start":5,"column_end":12},"name":"UserDCT","qualname":"::HashType::UserDCT","value":"HashType::UserDCT(DCT2DFunc)","parent":{"krate":0,"index":218},"children":[],"decl_id":null,"docs":" Equivalent to `DCT`, but allows the user to provide their own 2-dimensional DCT function.\n See the `DCT2DFunc` docs for more info.","sig":null,"attributes":[{"value":"/ Equivalent to `DCT`, but allows the user to provide their own 2-dimensional DCT function.","span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":9900,"byte_end":9993,"line_start":291,"line_end":291,"column_start":5,"column_end":98}},{"value":"/ See the `DCT2DFunc` docs for more info.","span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":9998,"byte_end":10041,"line_start":292,"line_end":292,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":10046,"byte_end":10049,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/ Use this variant if you want a specialized or optimized 2D DCT implementation, such as from","span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":10054,"byte_end":10149,"line_start":294,"line_end":294,"column_start":5,"column_end":100}},{"value":"/ [FFTW][1]. (This cannot be the default implementation because of licensing conflicts.)","span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":10154,"byte_end":10244,"line_start":295,"line_end":295,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":10249,"byte_end":10252,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ [1]: http://www.fftw.org/","span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":10257,"byte_end":10286,"line_start":297,"line_end":297,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":232},"span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":10399,"byte_end":10411,"line_start":301,"line_end":301,"column_start":5,"column_end":17},"name":"__BackCompat","qualname":"::HashType::__BackCompat","value":"HashType::__BackCompat","parent":{"krate":0,"index":218},"children":[],"decl_id":null,"docs":" Discourage complete matches for backwards-compatibility.\n","sig":null,"attributes":[{"value":"/ Discourage complete matches for backwards-compatibility.","span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":10315,"byte_end":10375,"line_start":299,"line_end":299,"column_start":5,"column_end":65}}]},{"kind":"Enum","id":{"krate":0,"index":218},"span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":8511,"byte_end":8519,"line_start":262,"line_end":262,"column_start":10,"column_end":18},"name":"HashType","qualname":"::HashType","value":"pub enum HashType {\n\n    /// This algorithm first averages the pixels of the reduced-size and color image,\n    /// and then compares each pixel to the average.\n    ///\n    /// Fast, but inaccurate. Really only useful for finding duplicates.\n    Mean,\n\n    /// The [Blockhash.io](http://blockhash.io) algorithm.\n    ///\n    /// Faster than `Mean` but also prone to more collisions and suitable only for finding\n    /// duplicates.\n    Block,\n\n    /// This algorithm compares each pixel in a row to its neighbor and registers changes in\n    /// gradients (e.g. edges and color boundaries).\n    ///\n    /// More accurate than `Mean` but much faster than `DCT`.\n    Gradient,\n\n    /// A version of `Gradient` that adds an extra hash pass orthogonal to the first\n    /// (i.e. on columns in addition to rows).\n    ///\n    /// Slower than `Gradient` and produces a double-sized hash, but much more accurate.\n    DoubleGradient,\n\n    /// This algorithm runs a Discrete Cosine Transform on the reduced-color and size image,\n    /// then compares each datapoint in the transform to the average.\n    ///\n    /// Slowest by far, but can detect changes in color gamut and sometimes relatively significant edits.\n    ///\n    /// Call `precompute_dct_matrix()` with your chosen hash size to memoize the DCT matrix for the\n    /// given size, which can produce significant speedups in repeated hash runs.\n    DCT,\n\n    /// Equivalent to `DCT`, but allows the user to provide their own 2-dimensional DCT function.\n    /// See the `DCT2DFunc` docs for more info.\n    ///\n    /// Use this variant if you want a specialized or optimized 2D DCT implementation, such as from\n    /// [FFTW][1]. (This cannot be the default implementation because of licensing conflicts.)\n    ///\n    /// [1]: http://www.fftw.org/\n    UserDCT(DCT2DFunc),\n\n    /// Discourage complete matches for backwards-compatibility.\n    #[doc(hidden)]\n    __BackCompat,\n}","parent":null,"children":[{"krate":0,"index":219},{"krate":0,"index":221},{"krate":0,"index":223},{"krate":0,"index":225},{"krate":0,"index":227},{"krate":0,"index":229},{"krate":0,"index":232}],"decl_id":null,"docs":" An enum describing the hash algorithms that `img_hash` offers.\n","sig":null,"attributes":[{"value":"/ An enum describing the hash algorithms that `img_hash` offers.","span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":8384,"byte_end":8450,"line_start":260,"line_end":260,"column_start":1,"column_end":67}}]},{"kind":"Trait","id":{"krate":0,"index":174},"span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":15413,"byte_end":15422,"line_start":479,"line_end":479,"column_start":11,"column_end":20},"name":"HashImage","qualname":"::HashImage","value":"HashImage","parent":null,"children":[{"krate":0,"index":175},{"krate":0,"index":176},{"krate":0,"index":177},{"krate":0,"index":178},{"krate":0,"index":179},{"krate":0,"index":180},{"krate":0,"index":181}],"decl_id":null,"docs":" A trait for describing an image that can be successfully hashed.","sig":null,"attributes":[{"value":"/ A trait for describing an image that can be successfully hashed.","span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":15287,"byte_end":15355,"line_start":476,"line_end":476,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":15356,"byte_end":15359,"line_start":477,"line_end":477,"column_start":1,"column_end":4}},{"value":"/ Implement this for custom image types.","span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":15360,"byte_end":15402,"line_start":478,"line_end":478,"column_start":1,"column_end":43}}]},{"kind":"Type","id":{"krate":0,"index":175},"span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":15486,"byte_end":15495,"line_start":481,"line_end":481,"column_start":10,"column_end":19},"name":"Grayscale","qualname":"::HashImage::Grayscale","value":"type Grayscale: HashImage;","parent":{"krate":0,"index":174},"children":[],"decl_id":null,"docs":" The image type when converted to grayscale.\n","sig":null,"attributes":[{"value":"/ The image type when converted to grayscale.","span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":15429,"byte_end":15476,"line_start":480,"line_end":480,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":176},"span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":15572,"byte_end":15582,"line_start":484,"line_end":484,"column_start":8,"column_end":18},"name":"dimensions","qualname":"::HashImage::dimensions","value":"pub fn dimensions(&Self) -> (u32, u32)","parent":{"krate":0,"index":174},"children":[],"decl_id":null,"docs":" The dimensions of the image as (width, height).\n","sig":null,"attributes":[{"value":"/ The dimensions of the image as (width, height).","span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":15513,"byte_end":15564,"line_start":483,"line_end":483,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":177},"span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":15664,"byte_end":15670,"line_start":487,"line_end":487,"column_start":8,"column_end":14},"name":"resize","qualname":"::HashImage::resize","value":"pub fn resize(&Self, u32, u32) -> Self","parent":{"krate":0,"index":174},"children":[],"decl_id":null,"docs":" Returns a copy, leaving `self` unmodified.\n","sig":null,"attributes":[{"value":"/ Returns a copy, leaving `self` unmodified.","span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":15610,"byte_end":15656,"line_start":486,"line_end":486,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":178},"span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":15757,"byte_end":15766,"line_start":490,"line_end":490,"column_start":8,"column_end":17},"name":"grayscale","qualname":"::HashImage::grayscale","value":"pub fn grayscale(&Self) -> Self::Grayscale","parent":{"krate":0,"index":174},"children":[],"decl_id":null,"docs":" Convert `self` to grayscale.\n","sig":null,"attributes":[{"value":"/ Convert `self` to grayscale.","span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":15717,"byte_end":15749,"line_start":489,"line_end":489,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":179},"span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":15843,"byte_end":15851,"line_start":493,"line_end":493,"column_start":8,"column_end":16},"name":"to_bytes","qualname":"::HashImage::to_bytes","value":"pub fn to_bytes(Self) -> Vec<u8>","parent":{"krate":0,"index":174},"children":[],"decl_id":null,"docs":" Convert `self` to a byte-vector.\n","sig":null,"attributes":[{"value":"/ Convert `self` to a byte-vector.","span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":15799,"byte_end":15835,"line_start":492,"line_end":492,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":180},"span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":16051,"byte_end":16064,"line_start":501,"line_end":501,"column_start":8,"column_end":21},"name":"channel_count","qualname":"::HashImage::channel_count","value":"pub fn channel_count() -> u8","parent":{"krate":0,"index":174},"children":[],"decl_id":null,"docs":" Get the number of pixel channels in the image:","sig":null,"attributes":[{"value":"/ Get the number of pixel channels in the image:","span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":15875,"byte_end":15925,"line_start":495,"line_end":495,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":15930,"byte_end":15933,"line_start":496,"line_end":496,"column_start":5,"column_end":8}},{"value":"/ * 1 -> Grayscale","span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":15938,"byte_end":15958,"line_start":497,"line_end":497,"column_start":5,"column_end":25}},{"value":"/ * 2 -> Grayscale with Alpha","span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":15963,"byte_end":15994,"line_start":498,"line_end":498,"column_start":5,"column_end":36}},{"value":"/ * 3 -> RGB","span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":15999,"byte_end":16013,"line_start":499,"line_end":499,"column_start":5,"column_end":19}},{"value":"/ * 4 -> RGB with Alpha","span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":16018,"byte_end":16043,"line_start":500,"line_end":500,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":181},"span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":16266,"byte_end":16279,"line_start":506,"line_end":506,"column_start":8,"column_end":21},"name":"foreach_pixel","qualname":"::HashImage::foreach_pixel","value":"pub fn foreach_pixel<F>(&Self, F) where F: FnMut(u32, u32, &[u8]) -> ()","parent":{"krate":0,"index":174},"children":[],"decl_id":null,"docs":" Call `iter_fn` for each pixel in the image, passing `(x, y, [pixel data])`.","sig":null,"attributes":[{"value":"/ Call `iter_fn` for each pixel in the image, passing `(x, y, [pixel data])`.","span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":16079,"byte_end":16158,"line_start":503,"line_end":503,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":16163,"byte_end":16166,"line_start":504,"line_end":504,"column_start":5,"column_end":8}},{"value":"/ The iteration order is unspecified. Implementations should use whatever is optimum.","span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":16171,"byte_end":16258,"line_start":505,"line_end":505,"column_start":5,"column_end":92}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/dct.rs","byte_start":24688,"byte_end":24698,"line_start":20,"line_end":20,"column_start":17,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":34}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/dct.rs","byte_start":24926,"byte_end":24936,"line_start":31,"line_end":31,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":38},{"krate":0,"index":39}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/dct.rs","byte_start":25473,"byte_end":25482,"line_start":53,"line_end":53,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":48},{"krate":0,"index":49}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/dct.rs","byte_start":25661,"byte_end":25670,"line_start":61,"line_end":61,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":53}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":2394,"byte_end":2403,"line_start":80,"line_end":80,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":100},{"krate":0,"index":102},{"krate":0,"index":104},{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":107},{"krate":0,"index":109},{"krate":0,"index":110}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":7354,"byte_end":7363,"line_start":218,"line_end":218,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":113},{"krate":0,"index":114}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":7562,"byte_end":7571,"line_start":228,"line_end":228,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":116}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":7747,"byte_end":7756,"line_start":235,"line_end":235,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":118}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":7958,"byte_end":7967,"line_start":242,"line_end":242,"column_start":13,"column_end":22},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":7992,"byte_end":8001,"line_start":244,"line_end":244,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":121}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":8184,"byte_end":8193,"line_start":250,"line_end":250,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":123}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":10421,"byte_end":10429,"line_start":304,"line_end":304,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":126},{"krate":0,"index":129},{"krate":0,"index":131}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":13004,"byte_end":13011,"line_start":389,"line_end":389,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":152}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":13232,"byte_end":13239,"line_start":400,"line_end":400,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":156},{"krate":0,"index":157}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":13733,"byte_end":13739,"line_start":422,"line_end":422,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":166},{"krate":0,"index":167}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/dct.rs","byte_start":24688,"byte_end":24698,"line_start":20,"line_end":20,"column_start":17,"column_end":27},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":25},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/dct.rs","byte_start":24926,"byte_end":24936,"line_start":31,"line_end":31,"column_start":30,"column_end":40},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":25},"to":{"krate":2,"index":5040}},{"span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/dct.rs","byte_start":25473,"byte_end":25482,"line_start":53,"line_end":53,"column_start":34,"column_end":43},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":40},"to":{"krate":2,"index":2223}},{"span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/dct.rs","byte_start":25661,"byte_end":25670,"line_start":61,"line_end":61,"column_start":37,"column_end":46},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":40},"to":{"krate":2,"index":2227}},{"span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":2394,"byte_end":2403,"line_start":80,"line_end":80,"column_start":6,"column_end":15},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":197},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":7354,"byte_end":7363,"line_start":218,"line_end":218,"column_start":6,"column_end":15},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":214},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":7562,"byte_end":7571,"line_start":228,"line_end":228,"column_start":16,"column_end":25},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":214},"to":{"krate":2,"index":1669}},{"span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":7747,"byte_end":7756,"line_start":235,"line_end":235,"column_start":20,"column_end":29},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":214},"to":{"krate":2,"index":1697}},{"span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":7958,"byte_end":7967,"line_start":242,"line_end":242,"column_start":13,"column_end":22},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":214},"to":{"krate":2,"index":1702}},{"span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":7992,"byte_end":8001,"line_start":244,"line_end":244,"column_start":21,"column_end":30},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":214},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":8184,"byte_end":8193,"line_start":250,"line_end":250,"column_start":21,"column_end":30},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":214},"to":{"krate":2,"index":6503}},{"span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":10421,"byte_end":10429,"line_start":304,"line_end":304,"column_start":6,"column_end":14},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":218},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":13004,"byte_end":13011,"line_start":389,"line_end":389,"column_start":17,"column_end":24},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":143},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":13232,"byte_end":13239,"line_start":400,"line_end":400,"column_start":30,"column_end":37},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":143},"to":{"krate":2,"index":5040}},{"span":{"file_name":"/Users/staniya/.cargo/git/checkouts/img_hash-d8882b318439dc60/c40da78/src/lib.rs","byte_start":13733,"byte_end":13739,"line_start":422,"line_end":422,"column_start":39,"column_end":45},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":158},"to":{"krate":2,"index":2223}}]}