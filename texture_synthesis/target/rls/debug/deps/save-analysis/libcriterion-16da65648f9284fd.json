{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2","program":"/Users/staniya/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","criterion","--edition=2018","/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","-C","metadata=16da65648f9284fd","-C","extra-filename=-16da65648f9284fd","--out-dir","/Users/staniya/PycharmProjects/texture-synthesis/target/rls/debug/deps","-L","dependency=/Users/staniya/PycharmProjects/texture-synthesis/target/rls/debug/deps","--extern","atty=/Users/staniya/PycharmProjects/texture-synthesis/target/rls/debug/deps/libatty-197f5b7a32baa3b5.rmeta","--extern","cast=/Users/staniya/PycharmProjects/texture-synthesis/target/rls/debug/deps/libcast-126956f1ef7ef1a0.rmeta","--extern","clap=/Users/staniya/PycharmProjects/texture-synthesis/target/rls/debug/deps/libclap-7689dec2706031c9.rmeta","--extern","criterion_plot=/Users/staniya/PycharmProjects/texture-synthesis/target/rls/debug/deps/libcriterion_plot-aa1ea847809caed0.rmeta","--extern","csv=/Users/staniya/PycharmProjects/texture-synthesis/target/rls/debug/deps/libcsv-42cacc694273a1a6.rmeta","--extern","itertools=/Users/staniya/PycharmProjects/texture-synthesis/target/rls/debug/deps/libitertools-247ccfe39f9f6b12.rmeta","--extern","lazy_static=/Users/staniya/PycharmProjects/texture-synthesis/target/rls/debug/deps/liblazy_static-3f6d84c026aa0c21.rmeta","--extern","num_traits=/Users/staniya/PycharmProjects/texture-synthesis/target/rls/debug/deps/libnum_traits-bcdd364080cd93d9.rmeta","--extern","oorandom=/Users/staniya/PycharmProjects/texture-synthesis/target/rls/debug/deps/liboorandom-9c8e3c22cc69b5b8.rmeta","--extern","plotters=/Users/staniya/PycharmProjects/texture-synthesis/target/rls/debug/deps/libplotters-859f7ed5a3b25eaa.rmeta","--extern","rayon=/Users/staniya/PycharmProjects/texture-synthesis/target/rls/debug/deps/librayon-99525dce0f3295fc.rmeta","--extern","regex=/Users/staniya/PycharmProjects/texture-synthesis/target/rls/debug/deps/libregex-6874cef1fa418627.rmeta","--extern","serde=/Users/staniya/PycharmProjects/texture-synthesis/target/rls/debug/deps/libserde-e9a0cbe7f5e9c595.rmeta","--extern","serde_derive=/Users/staniya/PycharmProjects/texture-synthesis/target/rls/debug/deps/libserde_derive-1dc54bc0a5a016c4.dylib","--extern","serde_json=/Users/staniya/PycharmProjects/texture-synthesis/target/rls/debug/deps/libserde_json-a4ca5fcea8380317.rmeta","--extern","tinytemplate=/Users/staniya/PycharmProjects/texture-synthesis/target/rls/debug/deps/libtinytemplate-49d151e967f6c6ee.rmeta","--extern","walkdir=/Users/staniya/PycharmProjects/texture-synthesis/target/rls/debug/deps/libwalkdir-dbd59c4d3b84b9d1.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/staniya/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/staniya/PycharmProjects/texture-synthesis/target/rls/debug/deps/libcriterion-16da65648f9284fd.rmeta"},"prelude":{"crate_id":{"name":"criterion","disambiguator":[18432702628286732635,4052478840773013042]},"crate_root":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src","external_crates":[{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[9176452395873514981,10525323411957323785]}},{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[15010738070622620763,9605760616786660431]}},{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[8211843569075862794,5370502913999467694]}},{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[5168977417888994485,12129851499920233632]}},{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[9254821246596336482,1562696929571001984]}},{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[4867494102928472883,16549916413327868340]}},{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[12208796569805280475,9421298070223625802]}},{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[16776259526442764164,2692171601035033462]}},{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[8506315589905780113,7752550639658555424]}},{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[6004073670142137807,10055010459345902388]}},{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[13812981793209371227,10465105188798852626]}},{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[12279896640040761358,16819944754252654372]}},{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[502125910674001101,4874613814734389117]}},{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[6964077277237141888,7151316435171244180]}},{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","num":15,"id":{"name":"panic_unwind","disambiguator":[5505266058476155326,9550778519957076375]}},{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","num":16,"id":{"name":"lazy_static","disambiguator":[10699606976910705946,13251100683905982789]}},{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","num":17,"id":{"name":"serde_derive","disambiguator":[10630198387213128701,2534934264528772788]}},{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","num":18,"id":{"name":"clap","disambiguator":[4003461163007611302,3099946209830085035]}},{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","num":19,"id":{"name":"ansi_term","disambiguator":[14787223849540403442,2867343767070756495]}},{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","num":20,"id":{"name":"atty","disambiguator":[5749635079547475110,746763756012920891]}},{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","num":21,"id":{"name":"libc","disambiguator":[12943089934972546878,6669521311434023020]}},{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","num":22,"id":{"name":"bitflags","disambiguator":[16116468340896408149,12780401407780675886]}},{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","num":23,"id":{"name":"strsim","disambiguator":[10929122586539355594,10509161627304004655]}},{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","num":24,"id":{"name":"textwrap","disambiguator":[3128344943709419551,15583641141467924413]}},{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","num":25,"id":{"name":"unicode_width","disambiguator":[352469227557388373,14137132979859920986]}},{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","num":26,"id":{"name":"vec_map","disambiguator":[7313190855603082160,12390591597732234386]}},{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","num":27,"id":{"name":"regex","disambiguator":[10932845724115624620,2038381863993546979]}},{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","num":28,"id":{"name":"regex_syntax","disambiguator":[17687154029495837950,15193416308263093460]}},{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/csv_report.rs","num":29,"id":{"name":"csv","disambiguator":[6371774033279823107,16982144465526105640]}},{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","num":30,"id":{"name":"serde","disambiguator":[17744379792586190959,2929517716823593689]}},{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/csv_report.rs","num":31,"id":{"name":"bstr","disambiguator":[17885845008668931281,7272876266281966411]}},{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/csv_report.rs","num":32,"id":{"name":"memchr","disambiguator":[13025046626929998486,3925273021913913569]}},{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/csv_report.rs","num":33,"id":{"name":"regex_automata","disambiguator":[15982888298488741904,12591378043274870462]}},{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/csv_report.rs","num":34,"id":{"name":"byteorder","disambiguator":[8100689518988960638,1706710057921452686]}},{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/csv_report.rs","num":35,"id":{"name":"csv_core","disambiguator":[8079989930804774595,10072091984378880474]}},{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/csv_report.rs","num":36,"id":{"name":"itoa","disambiguator":[2379460629953700453,283619095652393310]}},{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/csv_report.rs","num":37,"id":{"name":"ryu","disambiguator":[1125223202597474104,15428419262077643304]}},{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/error.rs","num":38,"id":{"name":"serde_json","disambiguator":[502005151449352523,18314411562198082727]}},{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/fs.rs","num":39,"id":{"name":"walkdir","disambiguator":[5746800826278291207,9844161993642768966]}},{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/fs.rs","num":40,"id":{"name":"same_file","disambiguator":[1468125594862869675,14505019498257399636]}},{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/html/mod.rs","num":41,"id":{"name":"criterion_plot","disambiguator":[3265276392724762571,11680539348685225298]}},{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/univariate/percentiles.rs","num":42,"id":{"name":"cast","disambiguator":[9391271306795639903,7127898165314576079]}},{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/plot/gnuplot_backend/summary.rs","num":43,"id":{"name":"itertools","disambiguator":[4131946327288869059,11505028191445911528]}},{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/html/mod.rs","num":44,"id":{"name":"either","disambiguator":[4865794055563068744,8604247574571859936]}},{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/html/mod.rs","num":45,"id":{"name":"tinytemplate","disambiguator":[6871627002546286979,10594456825981870673]}},{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/plot/plotters_backend/mod.rs","num":46,"id":{"name":"plotters","disambiguator":[11587008566053195826,13880151698510910263]}},{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/float.rs","num":47,"id":{"name":"num_traits","disambiguator":[830849009833101905,2914499481062507251]}},{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/bivariate/mod.rs","num":48,"id":{"name":"rayon","disambiguator":[2024205815321980449,17291503611692108177]}},{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/bivariate/mod.rs","num":49,"id":{"name":"crossbeam_deque","disambiguator":[12792175440716159405,4837397647982523367]}},{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/bivariate/mod.rs","num":50,"id":{"name":"crossbeam_epoch","disambiguator":[16439450078765422225,15586463345049592393]}},{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/bivariate/mod.rs","num":51,"id":{"name":"cfg_if","disambiguator":[4875038180643329491,6006940355665391927]}},{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/bivariate/mod.rs","num":52,"id":{"name":"maybe_uninit","disambiguator":[6619851998562273873,3561801244323912880]}},{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/bivariate/mod.rs","num":53,"id":{"name":"crossbeam_utils","disambiguator":[77201906291509961,3516600179537100822]}},{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/bivariate/mod.rs","num":54,"id":{"name":"memoffset","disambiguator":[12191554339472271119,5787124969783458298]}},{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/bivariate/mod.rs","num":55,"id":{"name":"scopeguard","disambiguator":[9225924681975274669,17251300067473531448]}},{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/bivariate/mod.rs","num":56,"id":{"name":"rayon_core","disambiguator":[14434986731371093,12761179635144356349]}},{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/bivariate/mod.rs","num":57,"id":{"name":"crossbeam_queue","disambiguator":[15513648874115833113,12550759954947411341]}},{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/bivariate/mod.rs","num":58,"id":{"name":"num_cpus","disambiguator":[15410811525629909242,6781419758859189944]}},{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/rand_util.rs","num":59,"id":{"name":"oorandom","disambiguator":[7183454658444961761,9215109106080127325]}}],"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":0,"byte_end":60813,"line_start":1,"line_end":1673,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":126},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":2556,"byte_end":2565,"line_start":98,"line_end":98,"column_start":28,"column_end":37},"alias_span":null,"name":"Benchmark","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":131},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":2567,"byte_end":2586,"line_start":98,"line_end":98,"column_start":39,"column_end":58},"alias_span":null,"name":"BenchmarkDefinition","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":119},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":2588,"byte_end":2610,"line_start":98,"line_end":98,"column_start":60,"column_end":82},"alias_span":null,"name":"ParameterizedBenchmark","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":180},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":2646,"byte_end":2660,"line_start":99,"line_end":99,"column_start":34,"column_end":48},"alias_span":null,"name":"BenchmarkGroup","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1841},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":2662,"byte_end":2673,"line_start":99,"line_end":99,"column_start":50,"column_end":61},"alias_span":null,"name":"BenchmarkId","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":0,"byte_end":60813,"line_start":1,"line_end":1673,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":12},{"krate":0,"index":81},{"krate":0,"index":166},{"krate":0,"index":239},{"krate":0,"index":263},{"krate":0,"index":280},{"krate":0,"index":289},{"krate":0,"index":296},{"krate":0,"index":336},{"krate":0,"index":442},{"krate":0,"index":450},{"krate":0,"index":453},{"krate":0,"index":495},{"krate":0,"index":956},{"krate":0,"index":966},{"krate":0,"index":1107},{"krate":0,"index":1149},{"krate":0,"index":1599},{"krate":0,"index":1600},{"krate":0,"index":1601},{"krate":0,"index":1602},{"krate":0,"index":1603},{"krate":0,"index":3247},{"krate":0,"index":1604},{"krate":0,"index":1605},{"krate":0,"index":1606},{"krate":0,"index":3253},{"krate":0,"index":1607},{"krate":0,"index":1608},{"krate":0,"index":1609},{"krate":0,"index":1610},{"krate":0,"index":1611},{"krate":0,"index":1612},{"krate":0,"index":1613},{"krate":0,"index":1614},{"krate":0,"index":1615},{"krate":0,"index":1616},{"krate":0,"index":1617},{"krate":0,"index":3271},{"krate":0,"index":1618},{"krate":0,"index":1619},{"krate":0,"index":1620},{"krate":0,"index":1621},{"krate":0,"index":1622},{"krate":0,"index":1623},{"krate":0,"index":1624},{"krate":0,"index":1625},{"krate":0,"index":3283},{"krate":0,"index":1626},{"krate":0,"index":1627},{"krate":0,"index":1628},{"krate":0,"index":1629},{"krate":0,"index":3289},{"krate":0,"index":1630},{"krate":0,"index":1631},{"krate":0,"index":3291},{"krate":0,"index":1632},{"krate":0,"index":1633},{"krate":0,"index":1634},{"krate":0,"index":3295},{"krate":0,"index":1635},{"krate":0,"index":1636},{"krate":0,"index":1637},{"krate":0,"index":1638},{"krate":0,"index":1639},{"krate":0,"index":1640},{"krate":0,"index":1641},{"krate":0,"index":1642},{"krate":0,"index":1643},{"krate":0,"index":1644},{"krate":0,"index":1645},{"krate":0,"index":1646},{"krate":0,"index":2254},{"krate":0,"index":2256},{"krate":0,"index":2257},{"krate":0,"index":2262},{"krate":0,"index":2265},{"krate":0,"index":2267},{"krate":0,"index":2268},{"krate":0,"index":2273},{"krate":0,"index":2276},{"krate":0,"index":2278},{"krate":0,"index":2279},{"krate":0,"index":2284},{"krate":0,"index":1647},{"krate":0,"index":1648},{"krate":0,"index":1650},{"krate":0,"index":1655},{"krate":0,"index":2287},{"krate":0,"index":2315},{"krate":0,"index":2312},{"krate":0,"index":2313},{"krate":0,"index":2308},{"krate":0,"index":2309},{"krate":0,"index":2307},{"krate":0,"index":2304},{"krate":0,"index":2302},{"krate":0,"index":1660},{"krate":0,"index":1662},{"krate":0,"index":1670},{"krate":0,"index":2317},{"krate":0,"index":2325},{"krate":0,"index":2323},{"krate":0,"index":2322},{"krate":0,"index":2327},{"krate":0,"index":2335},{"krate":0,"index":2333},{"krate":0,"index":2332},{"krate":0,"index":1706},{"krate":0,"index":1724},{"krate":0,"index":1726},{"krate":0,"index":1767},{"krate":0,"index":1782},{"krate":0,"index":1784},{"krate":0,"index":1785},{"krate":0,"index":2337},{"krate":0,"index":2399},{"krate":0,"index":2398},{"krate":0,"index":2394},{"krate":0,"index":2395},{"krate":0,"index":2349},{"krate":0,"index":2343},{"krate":0,"index":2341},{"krate":0,"index":2401},{"krate":0,"index":2463},{"krate":0,"index":2462},{"krate":0,"index":2458},{"krate":0,"index":2459},{"krate":0,"index":2413},{"krate":0,"index":2407},{"krate":0,"index":2405},{"krate":0,"index":1787},{"krate":0,"index":2465},{"krate":0,"index":2523},{"krate":0,"index":2521},{"krate":0,"index":2515},{"krate":0,"index":2476},{"krate":0,"index":2472},{"krate":0,"index":2473},{"krate":0,"index":2525},{"krate":0,"index":2533},{"krate":0,"index":2531},{"krate":0,"index":2530},{"krate":0,"index":2535},{"krate":0,"index":2539},{"krate":0,"index":2537},{"krate":0,"index":1789},{"krate":0,"index":1791},{"krate":0,"index":1793}],"decl_id":null,"docs":" A statistics-driven micro-benchmarking library written in Rust.","sig":null,"attributes":[{"value":"/ A statistics-driven micro-benchmarking library written in Rust.","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":0,"byte_end":67,"line_start":1,"line_end":1,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":68,"byte_end":71,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This crate is a microbenchmarking library which aims to provide strong","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":72,"byte_end":146,"line_start":3,"line_end":3,"column_start":1,"column_end":75}},{"value":"/ statistical confidence in detecting and estimating the size of performance","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":147,"byte_end":225,"line_start":4,"line_end":4,"column_start":1,"column_end":79}},{"value":"/ improvements and regressions, while also being easy to use.","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":226,"byte_end":289,"line_start":5,"line_end":5,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":290,"byte_end":293,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ See","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":294,"byte_end":301,"line_start":7,"line_end":7,"column_start":1,"column_end":8}},{"value":"/ [the user guide](https://bheisler.github.io/criterion.rs/book/index.html)","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":302,"byte_end":379,"line_start":8,"line_end":8,"column_start":1,"column_end":78}},{"value":"/ for examples as well as details on the measurement and analysis process,","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":380,"byte_end":456,"line_start":9,"line_end":9,"column_start":1,"column_end":77}},{"value":"/ and the output.","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":457,"byte_end":476,"line_start":10,"line_end":10,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":477,"byte_end":480,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ ## Features:","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":481,"byte_end":497,"line_start":12,"line_end":12,"column_start":1,"column_end":17}},{"value":"/ * Collects detailed statistics, providing strong confidence that changes","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":498,"byte_end":574,"line_start":13,"line_end":13,"column_start":1,"column_end":77}},{"value":"/   to performance are real, not measurement noise","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":575,"byte_end":627,"line_start":14,"line_end":14,"column_start":1,"column_end":53}},{"value":"/ * Produces detailed charts, providing thorough understanding of your code's","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":628,"byte_end":707,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/   performance behavior.","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":708,"byte_end":735,"line_start":16,"line_end":16,"column_start":1,"column_end":28}},{"value":"deny(missing_docs)","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":737,"byte_end":759,"line_start":18,"line_end":18,"column_start":1,"column_end":23}},{"value":"deny(bare_trait_objects)","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":760,"byte_end":788,"line_start":19,"line_end":19,"column_start":1,"column_end":29}},{"value":"deny(warnings)","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":789,"byte_end":807,"line_start":20,"line_end":20,"column_start":1,"column_end":19}}]},{"kind":"Struct","id":{"krate":0,"index":119},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark.rs","byte_start":80357,"byte_end":80379,"line_start":76,"line_end":76,"column_start":12,"column_end":34},"name":"ParameterizedBenchmark","qualname":"::benchmark::ParameterizedBenchmark","value":"ParameterizedBenchmark {  }","parent":null,"children":[{"krate":0,"index":122},{"krate":0,"index":123},{"krate":0,"index":124},{"krate":0,"index":125}],"decl_id":null,"docs":" Structure representing a benchmark (or group of benchmarks)\n which take one parameter.\n","sig":null,"attributes":[{"value":"/ Structure representing a benchmark (or group of benchmarks)","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark.rs","byte_start":80237,"byte_end":80300,"line_start":73,"line_end":73,"column_start":1,"column_end":64}},{"value":"/ which take one parameter.","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark.rs","byte_start":80301,"byte_end":80330,"line_start":74,"line_end":74,"column_start":1,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":126},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark.rs","byte_start":80693,"byte_end":80702,"line_start":86,"line_end":86,"column_start":12,"column_end":21},"name":"Benchmark","qualname":"::benchmark::Benchmark","value":"Benchmark {  }","parent":null,"children":[{"krate":0,"index":128},{"krate":0,"index":129},{"krate":0,"index":130}],"decl_id":null,"docs":" Structure representing a benchmark (or group of benchmarks)\n which takes no parameters.\n","sig":null,"attributes":[{"value":"/ Structure representing a benchmark (or group of benchmarks)","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark.rs","byte_start":80572,"byte_end":80635,"line_start":83,"line_end":83,"column_start":1,"column_end":64}},{"value":"/ which takes no parameters.","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark.rs","byte_start":80636,"byte_end":80666,"line_start":84,"line_end":84,"column_start":1,"column_end":31}}]},{"kind":"Trait","id":{"krate":0,"index":131},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark.rs","byte_start":80988,"byte_end":81007,"line_start":95,"line_end":95,"column_start":11,"column_end":30},"name":"BenchmarkDefinition","qualname":"::benchmark::BenchmarkDefinition","value":"BenchmarkDefinition<M: Measurement = WallTime>: Sized","parent":null,"children":[{"krate":0,"index":133}],"decl_id":null,"docs":" Common trait for `Benchmark` and `ParameterizedBenchmark`. Not intended to be\n used outside of Criterion.rs.\n","sig":null,"attributes":[{"value":"/ Common trait for `Benchmark` and `ParameterizedBenchmark`. Not intended to be","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark.rs","byte_start":80847,"byte_end":80928,"line_start":92,"line_end":92,"column_start":1,"column_end":82}},{"value":"/ used outside of Criterion.rs.","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark.rs","byte_start":80929,"byte_end":80962,"line_start":93,"line_end":93,"column_start":1,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":133},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark.rs","byte_start":81070,"byte_end":81073,"line_start":97,"line_end":97,"column_start":8,"column_end":11},"name":"run","qualname":"::benchmark::BenchmarkDefinition::run","value":"pub fn run(Self, &str, &mut Criterion<M>)","parent":{"krate":0,"index":131},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":137},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark.rs","byte_start":87648,"byte_end":87651,"line_start":266,"line_end":266,"column_start":12,"column_end":15},"name":"new","qualname":"<Benchmark<M>>::new","value":"pub fn new<S, F>(S, F) -> Benchmark<M> where S: Into<String>,\nF: FnMut(&mut Bencher<, M>) -> () + 'static","parent":null,"children":[],"decl_id":null,"docs":" Create a new benchmark group and adds the given function to it.","sig":null,"attributes":[{"value":"/ Create a new benchmark group and adds the given function to it.","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark.rs","byte_start":87054,"byte_end":87121,"line_start":245,"line_end":245,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark.rs","byte_start":87126,"byte_end":87129,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark.rs","byte_start":87134,"byte_end":87147,"line_start":247,"line_end":247,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark.rs","byte_start":87152,"byte_end":87155,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark.rs","byte_start":87160,"byte_end":87171,"line_start":249,"line_end":249,"column_start":5,"column_end":16}},{"value":"/ # #[macro_use] extern crate criterion;","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark.rs","byte_start":87176,"byte_end":87218,"line_start":250,"line_end":250,"column_start":5,"column_end":47}},{"value":"/ # use criterion::*;","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark.rs","byte_start":87223,"byte_end":87246,"line_start":251,"line_end":251,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark.rs","byte_start":87251,"byte_end":87254,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ fn bench(c: &mut Criterion) {","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark.rs","byte_start":87259,"byte_end":87292,"line_start":253,"line_end":253,"column_start":5,"column_end":38}},{"value":"/     // One-time setup goes here","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark.rs","byte_start":87297,"byte_end":87332,"line_start":254,"line_end":254,"column_start":5,"column_end":40}},{"value":"/     c.bench(","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark.rs","byte_start":87337,"byte_end":87353,"line_start":255,"line_end":255,"column_start":5,"column_end":21}},{"value":"/         \"my_group\",","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark.rs","byte_start":87358,"byte_end":87381,"line_start":256,"line_end":256,"column_start":5,"column_end":28}},{"value":"/         Benchmark::new(\"my_function\", |b| b.iter(|| {","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark.rs","byte_start":87386,"byte_end":87443,"line_start":257,"line_end":257,"column_start":5,"column_end":62}},{"value":"/             // Code to benchmark goes here","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark.rs","byte_start":87448,"byte_end":87494,"line_start":258,"line_end":258,"column_start":5,"column_end":51}},{"value":"/         })),","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark.rs","byte_start":87499,"byte_end":87515,"line_start":259,"line_end":259,"column_start":5,"column_end":21}},{"value":"/     );","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark.rs","byte_start":87520,"byte_end":87530,"line_start":260,"line_end":260,"column_start":5,"column_end":15}},{"value":"/ }","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark.rs","byte_start":87535,"byte_end":87540,"line_start":261,"line_end":261,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark.rs","byte_start":87545,"byte_end":87548,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ criterion_group!(benches, bench);","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark.rs","byte_start":87553,"byte_end":87590,"line_start":263,"line_end":263,"column_start":5,"column_end":42}},{"value":"/ criterion_main!(benches);","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark.rs","byte_start":87595,"byte_end":87624,"line_start":264,"line_end":264,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark.rs","byte_start":87629,"byte_end":87636,"line_start":265,"line_end":265,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":140},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark.rs","byte_start":88017,"byte_end":88030,"line_start":280,"line_end":280,"column_start":12,"column_end":25},"name":"with_function","qualname":"<Benchmark<M>>::with_function","value":"pub fn with_function<S, F>(Self, S, F) -> Benchmark<M> where S: Into<String>,\nF: FnMut(&mut Bencher<, M>) -> () + 'static","parent":null,"children":[],"decl_id":null,"docs":" Add a function to the benchmark group.\n","sig":null,"attributes":[{"value":"/ Add a function to the benchmark group.","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark.rs","byte_start":87963,"byte_end":88005,"line_start":279,"line_end":279,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":144},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark.rs","byte_start":88481,"byte_end":88491,"line_start":295,"line_end":295,"column_start":12,"column_end":22},"name":"throughput","qualname":"<Benchmark<M>>::throughput","value":"pub fn throughput(Self, Throughput) -> Benchmark<M>","parent":null,"children":[],"decl_id":null,"docs":" Set the input size for this benchmark group. Used for reporting the\n throughput.\n","sig":null,"attributes":[{"value":"/ Set the input size for this benchmark group. Used for reporting the","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark.rs","byte_start":88378,"byte_end":88449,"line_start":293,"line_end":293,"column_start":5,"column_end":76}},{"value":"/ throughput.","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark.rs","byte_start":88454,"byte_end":88469,"line_start":294,"line_end":294,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":152},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark.rs","byte_start":91844,"byte_end":91847,"line_start":408,"line_end":408,"column_start":12,"column_end":15},"name":"new","qualname":"<ParameterizedBenchmark<T, M>>::new","value":"pub fn new<S, F, I>(S, F, I) -> ParameterizedBenchmark<T, M> where\nS: Into<String>, F: FnMut(&mut Bencher<, M>, &T) -> () + 'static,\nI: IntoIterator<Item = T>","parent":null,"children":[],"decl_id":null,"docs":" Create a new parameterized benchmark group and adds the given function\n to it.\n The function under test must follow the setup - bench - teardown pattern:","sig":null,"attributes":[{"value":"/ Create a new parameterized benchmark group and adds the given function","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark.rs","byte_start":90956,"byte_end":91030,"line_start":379,"line_end":379,"column_start":5,"column_end":79}},{"value":"/ to it.","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark.rs","byte_start":91035,"byte_end":91045,"line_start":380,"line_end":380,"column_start":5,"column_end":15}},{"value":"/ The function under test must follow the setup - bench - teardown pattern:","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark.rs","byte_start":91050,"byte_end":91127,"line_start":381,"line_end":381,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark.rs","byte_start":91132,"byte_end":91135,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark.rs","byte_start":91140,"byte_end":91153,"line_start":383,"line_end":383,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark.rs","byte_start":91158,"byte_end":91161,"line_start":384,"line_end":384,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark.rs","byte_start":91166,"byte_end":91177,"line_start":385,"line_end":385,"column_start":5,"column_end":16}},{"value":"/ # #[macro_use] extern crate criterion;","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark.rs","byte_start":91182,"byte_end":91224,"line_start":386,"line_end":386,"column_start":5,"column_end":47}},{"value":"/ # use criterion::*;","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark.rs","byte_start":91229,"byte_end":91252,"line_start":387,"line_end":387,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark.rs","byte_start":91257,"byte_end":91260,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ fn bench(c: &mut Criterion) {","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark.rs","byte_start":91265,"byte_end":91298,"line_start":389,"line_end":389,"column_start":5,"column_end":38}},{"value":"/     let parameters = vec![1u64, 2u64, 3u64];","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark.rs","byte_start":91303,"byte_end":91351,"line_start":390,"line_end":390,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark.rs","byte_start":91356,"byte_end":91359,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/     // One-time setup goes here","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark.rs","byte_start":91364,"byte_end":91399,"line_start":392,"line_end":392,"column_start":5,"column_end":40}},{"value":"/     c.bench(","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark.rs","byte_start":91404,"byte_end":91420,"line_start":393,"line_end":393,"column_start":5,"column_end":21}},{"value":"/         \"my_group\",","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark.rs","byte_start":91425,"byte_end":91448,"line_start":394,"line_end":394,"column_start":5,"column_end":28}},{"value":"/         ParameterizedBenchmark::new(","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark.rs","byte_start":91453,"byte_end":91493,"line_start":395,"line_end":395,"column_start":5,"column_end":45}},{"value":"/             \"my_function\",","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark.rs","byte_start":91498,"byte_end":91528,"line_start":396,"line_end":396,"column_start":5,"column_end":35}},{"value":"/             |b, param| b.iter(|| {","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark.rs","byte_start":91533,"byte_end":91571,"line_start":397,"line_end":397,"column_start":5,"column_end":43}},{"value":"/                 // Code to benchmark using param goes here","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark.rs","byte_start":91576,"byte_end":91638,"line_start":398,"line_end":398,"column_start":5,"column_end":67}},{"value":"/             }),","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark.rs","byte_start":91643,"byte_end":91662,"line_start":399,"line_end":399,"column_start":5,"column_end":24}},{"value":"/             parameters","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark.rs","byte_start":91667,"byte_end":91693,"line_start":400,"line_end":400,"column_start":5,"column_end":31}},{"value":"/         )","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark.rs","byte_start":91698,"byte_end":91711,"line_start":401,"line_end":401,"column_start":5,"column_end":18}},{"value":"/     );","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark.rs","byte_start":91716,"byte_end":91726,"line_start":402,"line_end":402,"column_start":5,"column_end":15}},{"value":"/ }","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark.rs","byte_start":91731,"byte_end":91736,"line_start":403,"line_end":403,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark.rs","byte_start":91741,"byte_end":91744,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/ criterion_group!(benches, bench);","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark.rs","byte_start":91749,"byte_end":91786,"line_start":405,"line_end":405,"column_start":5,"column_end":42}},{"value":"/ criterion_main!(benches);","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark.rs","byte_start":91791,"byte_end":91820,"line_start":406,"line_end":406,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark.rs","byte_start":91825,"byte_end":91832,"line_start":407,"line_end":407,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":156},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark.rs","byte_start":92353,"byte_end":92366,"line_start":424,"line_end":424,"column_start":12,"column_end":25},"name":"with_function","qualname":"<ParameterizedBenchmark<T, M>>::with_function","value":"pub fn with_function<S, F>(Self, S, F) -> ParameterizedBenchmark<T, M> where\nS: Into<String>, F: FnMut(&mut Bencher<, M>, &T) -> () + 'static","parent":null,"children":[],"decl_id":null,"docs":" Add a function to the benchmark group.\n","sig":null,"attributes":[{"value":"/ Add a function to the benchmark group.","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark.rs","byte_start":92299,"byte_end":92341,"line_start":423,"line_end":423,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":159},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark.rs","byte_start":92800,"byte_end":92810,"line_start":438,"line_end":438,"column_start":12,"column_end":22},"name":"throughput","qualname":"<ParameterizedBenchmark<T, M>>::throughput","value":"pub fn throughput<F>(Self, F) -> ParameterizedBenchmark<T, M> where F: Fn(&T)\n-> Throughput + 'static","parent":null,"children":[],"decl_id":null,"docs":" Use the given function to calculate the input size for a given input.\n","sig":null,"attributes":[{"value":"/ Use the given function to calculate the input size for a given input.","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark.rs","byte_start":92715,"byte_end":92788,"line_start":437,"line_end":437,"column_start":5,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":180},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":98437,"byte_end":98451,"line_start":76,"line_end":76,"column_start":12,"column_end":26},"name":"BenchmarkGroup","qualname":"::benchmark_group::BenchmarkGroup","value":"BenchmarkGroup {  }","parent":null,"children":[{"krate":0,"index":183},{"krate":0,"index":184},{"krate":0,"index":185},{"krate":0,"index":186},{"krate":0,"index":187},{"krate":0,"index":188}],"decl_id":null,"docs":" Structure used to group together a set of related benchmarks, along with custom configuration\n settings for groups of benchmarks. All benchmarks performed using a benchmark group will be\n grouped together in the final report.","sig":null,"attributes":[{"value":"/ Structure used to group together a set of related benchmarks, along with custom configuration","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":95714,"byte_end":95811,"line_start":10,"line_end":10,"column_start":1,"column_end":98}},{"value":"/ settings for groups of benchmarks. All benchmarks performed using a benchmark group will be","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":95812,"byte_end":95907,"line_start":11,"line_end":11,"column_start":1,"column_end":96}},{"value":"/ grouped together in the final report.","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":95908,"byte_end":95949,"line_start":12,"line_end":12,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":95950,"byte_end":95953,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Examples:","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":95954,"byte_end":95969,"line_start":14,"line_end":14,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":95970,"byte_end":95973,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":95974,"byte_end":95987,"line_start":16,"line_end":16,"column_start":1,"column_end":14}},{"value":"/ #[macro_use] extern crate criterion;","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":95988,"byte_end":96028,"line_start":17,"line_end":17,"column_start":1,"column_end":41}},{"value":"/ use self::criterion::*;","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":96029,"byte_end":96056,"line_start":18,"line_end":18,"column_start":1,"column_end":28}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":96057,"byte_end":96085,"line_start":19,"line_end":19,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":96086,"byte_end":96089,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ fn bench_simple(c: &mut Criterion) {","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":96090,"byte_end":96130,"line_start":21,"line_end":21,"column_start":1,"column_end":41}},{"value":"/     let mut group = c.benchmark_group(\"My Group\");","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":96131,"byte_end":96185,"line_start":22,"line_end":22,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":96186,"byte_end":96189,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/     // Now we can perform benchmarks with this group","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":96190,"byte_end":96246,"line_start":24,"line_end":24,"column_start":1,"column_end":57}},{"value":"/     group.bench_function(\"Bench 1\", |b| b.iter(|| 1 ));","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":96247,"byte_end":96306,"line_start":25,"line_end":25,"column_start":1,"column_end":60}},{"value":"/     group.bench_function(\"Bench 2\", |b| b.iter(|| 2 ));","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":96307,"byte_end":96366,"line_start":26,"line_end":26,"column_start":1,"column_end":60}},{"value":"/    ","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":96367,"byte_end":96374,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"/     // It's recommended to call group.finish() explicitly at the end, but if you don't it will","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":96375,"byte_end":96473,"line_start":28,"line_end":28,"column_start":1,"column_end":99}},{"value":"/     // be called automatically when the group is dropped.","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":96474,"byte_end":96535,"line_start":29,"line_end":29,"column_start":1,"column_end":62}},{"value":"/     group.finish();","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":96536,"byte_end":96559,"line_start":30,"line_end":30,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":96560,"byte_end":96565,"line_start":31,"line_end":31,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":96566,"byte_end":96569,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ fn bench_nested(c: &mut Criterion) {","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":96570,"byte_end":96610,"line_start":33,"line_end":33,"column_start":1,"column_end":41}},{"value":"/     let mut group = c.benchmark_group(\"My Second Group\");","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":96611,"byte_end":96672,"line_start":34,"line_end":34,"column_start":1,"column_end":62}},{"value":"/     // We can override the configuration on a per-group level","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":96673,"byte_end":96738,"line_start":35,"line_end":35,"column_start":1,"column_end":66}},{"value":"/     group.measurement_time(Duration::from_secs(1));","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":96739,"byte_end":96794,"line_start":36,"line_end":36,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":96795,"byte_end":96798,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/     // We can also use loops to define multiple benchmarks, even over multiple dimensions.","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":96799,"byte_end":96893,"line_start":38,"line_end":38,"column_start":1,"column_end":95}},{"value":"/     for x in 0..3 {","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":96894,"byte_end":96917,"line_start":39,"line_end":39,"column_start":1,"column_end":24}},{"value":"/         for y in 0..3 {","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":96918,"byte_end":96945,"line_start":40,"line_end":40,"column_start":1,"column_end":28}},{"value":"/             let point = (x, y);","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":96946,"byte_end":96981,"line_start":41,"line_end":41,"column_start":1,"column_end":36}},{"value":"/             let parameter_string = format!(\"{} * {}\", x, y);","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":96982,"byte_end":97046,"line_start":42,"line_end":42,"column_start":1,"column_end":65}},{"value":"/             group.bench_with_input(BenchmarkId::new(\"Multiply\", parameter_string), &point,","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":97047,"byte_end":97141,"line_start":43,"line_end":43,"column_start":1,"column_end":95}},{"value":"/                 |b, (p_x, p_y)| b.iter(|| p_x * p_y));","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":97142,"byte_end":97200,"line_start":44,"line_end":44,"column_start":1,"column_end":59}},{"value":"/         }","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":97201,"byte_end":97214,"line_start":45,"line_end":45,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":97215,"byte_end":97224,"line_start":46,"line_end":46,"column_start":1,"column_end":10}},{"value":"/    ","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":97225,"byte_end":97232,"line_start":47,"line_end":47,"column_start":1,"column_end":8}},{"value":"/     group.finish();","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":97233,"byte_end":97256,"line_start":48,"line_end":48,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":97257,"byte_end":97262,"line_start":49,"line_end":49,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":97263,"byte_end":97266,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ fn bench_throughput(c: &mut Criterion) {","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":97267,"byte_end":97311,"line_start":51,"line_end":51,"column_start":1,"column_end":45}},{"value":"/     let mut group = c.benchmark_group(\"Summation\");","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":97312,"byte_end":97367,"line_start":52,"line_end":52,"column_start":1,"column_end":56}},{"value":"/     ","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":97368,"byte_end":97376,"line_start":53,"line_end":53,"column_start":1,"column_end":9}},{"value":"/     for size in [1024, 2048, 4096].iter() {","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":97377,"byte_end":97424,"line_start":54,"line_end":54,"column_start":1,"column_end":48}},{"value":"/         // Generate input of an appropriate size...","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":97425,"byte_end":97480,"line_start":55,"line_end":55,"column_start":1,"column_end":56}},{"value":"/         let input = vec![1u64, *size];","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":97481,"byte_end":97523,"line_start":56,"line_end":56,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":97524,"byte_end":97527,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/         // We can use the throughput function to tell Criterion.rs how large the input is","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":97528,"byte_end":97621,"line_start":58,"line_end":58,"column_start":1,"column_end":94}},{"value":"/         // so it can calculate the overall throughput of the function. If we wanted, we could","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":97622,"byte_end":97719,"line_start":59,"line_end":59,"column_start":1,"column_end":98}},{"value":"/         // even change the benchmark configuration for different inputs (eg. to reduce the","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":97720,"byte_end":97814,"line_start":60,"line_end":60,"column_start":1,"column_end":95}},{"value":"/         // number of samples for extremely large and slow inputs) or even different functions.","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":97815,"byte_end":97913,"line_start":61,"line_end":61,"column_start":1,"column_end":99}},{"value":"/         group.throughput(Throughput::Elements(*size as u64));","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":97914,"byte_end":97979,"line_start":62,"line_end":62,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":97980,"byte_end":97983,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/         group.bench_with_input(BenchmarkId::new(\"sum\", *size), &input,","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":97984,"byte_end":98058,"line_start":64,"line_end":64,"column_start":1,"column_end":75}},{"value":"/             |b, i| b.iter(|| i.iter().sum::<u64>()));","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":98059,"byte_end":98116,"line_start":65,"line_end":65,"column_start":1,"column_end":58}},{"value":"/         group.bench_with_input(BenchmarkId::new(\"fold\", *size), &input,","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":98117,"byte_end":98192,"line_start":66,"line_end":66,"column_start":1,"column_end":76}},{"value":"/             |b, i| b.iter(|| i.iter().fold(0u64, |a, b| a + b)));","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":98193,"byte_end":98262,"line_start":67,"line_end":67,"column_start":1,"column_end":70}},{"value":"/     }","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":98263,"byte_end":98272,"line_start":68,"line_end":68,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":98273,"byte_end":98276,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/     group.finish();","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":98277,"byte_end":98300,"line_start":70,"line_end":70,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":98301,"byte_end":98306,"line_start":71,"line_end":71,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":98307,"byte_end":98310,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ criterion_group!(benches, bench_simple, bench_nested, bench_throughput);","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":98311,"byte_end":98387,"line_start":73,"line_end":73,"column_start":1,"column_end":77}},{"value":"/ criterion_main!(benches);","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":98388,"byte_end":98417,"line_start":74,"line_end":74,"column_start":1,"column_end":30}},{"value":"/ ```","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":98418,"byte_end":98425,"line_start":75,"line_end":75,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":192},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":99034,"byte_end":99045,"line_start":95,"line_end":95,"column_start":12,"column_end":23},"name":"sample_size","qualname":"<BenchmarkGroup>::sample_size","value":"pub fn sample_size(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Changes the size of the sample for this benchmark","sig":null,"attributes":[{"value":"/ Changes the size of the sample for this benchmark","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":98732,"byte_end":98785,"line_start":85,"line_end":85,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":98790,"byte_end":98793,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ A bigger sample should yield more accurate results if paired with a sufficiently large","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":98798,"byte_end":98888,"line_start":87,"line_end":87,"column_start":5,"column_end":95}},{"value":"/ measurement time.","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":98893,"byte_end":98914,"line_start":88,"line_end":88,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":98919,"byte_end":98922,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ Sample size must be at least 10.","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":98927,"byte_end":98963,"line_start":90,"line_end":90,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":98968,"byte_end":98971,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":98976,"byte_end":98988,"line_start":92,"line_end":92,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":98993,"byte_end":98996,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ Panics if n < 10.","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":99001,"byte_end":99022,"line_start":94,"line_end":94,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":193},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":99321,"byte_end":99333,"line_start":107,"line_end":107,"column_start":12,"column_end":24},"name":"warm_up_time","qualname":"<BenchmarkGroup>::warm_up_time","value":"pub fn warm_up_time(&mut Self, Duration) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Changes the warm up time for this benchmark","sig":null,"attributes":[{"value":"/ Changes the warm up time for this benchmark","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":99184,"byte_end":99231,"line_start":102,"line_end":102,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":99236,"byte_end":99239,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":99244,"byte_end":99256,"line_start":104,"line_end":104,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":99261,"byte_end":99264,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ Panics if the input duration is zero","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":99269,"byte_end":99309,"line_start":106,"line_end":106,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":194},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":100123,"byte_end":100139,"line_start":125,"line_end":125,"column_start":12,"column_end":28},"name":"measurement_time","qualname":"<BenchmarkGroup>::measurement_time","value":"pub fn measurement_time(&mut Self, Duration) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Changes the target measurement time for this benchmark group.","sig":null,"attributes":[{"value":"/ Changes the target measurement time for this benchmark group.","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":99491,"byte_end":99556,"line_start":114,"line_end":114,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":99561,"byte_end":99564,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ Criterion will attempt to spent approximately this amount of time measuring each","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":99569,"byte_end":99653,"line_start":116,"line_end":116,"column_start":5,"column_end":89}},{"value":"/ benchmark on a best-effort basis. If it is not possible to perform the measurement in","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":99658,"byte_end":99747,"line_start":117,"line_end":117,"column_start":5,"column_end":94}},{"value":"/ the requested time (eg. because each iteration of the benchmark is long) then Criterion","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":99752,"byte_end":99843,"line_start":118,"line_end":118,"column_start":5,"column_end":96}},{"value":"/ will spend as long as is needed to collect the desired number of samples. With a longer","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":99848,"byte_end":99939,"line_start":119,"line_end":119,"column_start":5,"column_end":96}},{"value":"/ time, the measurement will become more resilient to interference from other programs.","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":99944,"byte_end":100033,"line_start":120,"line_end":120,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":100038,"byte_end":100041,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":100046,"byte_end":100058,"line_start":122,"line_end":122,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":100063,"byte_end":100066,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ Panics if the input duration is zero","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":100071,"byte_end":100111,"line_start":124,"line_end":124,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":195},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":100777,"byte_end":100787,"line_start":143,"line_end":143,"column_start":12,"column_end":22},"name":"nresamples","qualname":"<BenchmarkGroup>::nresamples","value":"pub fn nresamples(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Changes the number of resamples for this benchmark group","sig":null,"attributes":[{"value":"/ Changes the number of resamples for this benchmark group","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":100301,"byte_end":100361,"line_start":132,"line_end":132,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":100366,"byte_end":100369,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ Number of resamples to use for the","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":100374,"byte_end":100412,"line_start":134,"line_end":134,"column_start":5,"column_end":43}},{"value":"/ [bootstrap](http://en.wikipedia.org/wiki/Bootstrapping_(statistics)#Case_resampling)","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":100417,"byte_end":100505,"line_start":135,"line_end":135,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":100510,"byte_end":100513,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ A larger number of resamples reduces the random sampling errors which are inherent to the","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":100518,"byte_end":100611,"line_start":137,"line_end":137,"column_start":5,"column_end":98}},{"value":"/ bootstrap method, but also increases the analysis time.","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":100616,"byte_end":100675,"line_start":138,"line_end":138,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":100680,"byte_end":100683,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":100688,"byte_end":100700,"line_start":140,"line_end":140,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":100705,"byte_end":100708,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ Panics if the number of resamples is set to zero","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":100713,"byte_end":100765,"line_start":142,"line_end":142,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":196},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":101777,"byte_end":101792,"line_start":165,"line_end":165,"column_start":12,"column_end":27},"name":"noise_threshold","qualname":"<BenchmarkGroup>::noise_threshold","value":"pub fn noise_threshold(&mut Self, f64) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Changes the noise threshold for benchmarks in this group. The noise threshold\n is used to filter out small changes in performance from one run to the next, even if they\n are statistically significant. Sometimes benchmarking the same code twice will result in\n small but statistically significant differences solely because of noise. This provides a way\n to filter out some of these false positives at the cost of making it harder to detect small\n changes to the true performance of the benchmark.","sig":null,"attributes":[{"value":"/ Changes the noise threshold for benchmarks in this group. The noise threshold","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":101047,"byte_end":101128,"line_start":153,"line_end":153,"column_start":5,"column_end":86}},{"value":"/ is used to filter out small changes in performance from one run to the next, even if they","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":101133,"byte_end":101226,"line_start":154,"line_end":154,"column_start":5,"column_end":98}},{"value":"/ are statistically significant. Sometimes benchmarking the same code twice will result in","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":101231,"byte_end":101323,"line_start":155,"line_end":155,"column_start":5,"column_end":97}},{"value":"/ small but statistically significant differences solely because of noise. This provides a way","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":101328,"byte_end":101424,"line_start":156,"line_end":156,"column_start":5,"column_end":101}},{"value":"/ to filter out some of these false positives at the cost of making it harder to detect small","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":101429,"byte_end":101524,"line_start":157,"line_end":157,"column_start":5,"column_end":100}},{"value":"/ changes to the true performance of the benchmark.","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":101529,"byte_end":101582,"line_start":158,"line_end":158,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":101587,"byte_end":101590,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ The default is 0.01, meaning that changes smaller than 1% will be ignored.","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":101595,"byte_end":101673,"line_start":160,"line_end":160,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":101678,"byte_end":101681,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":101686,"byte_end":101698,"line_start":162,"line_end":162,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":101703,"byte_end":101706,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ Panics if the threshold is set to a negative value","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":101711,"byte_end":101765,"line_start":164,"line_end":164,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":197},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":102448,"byte_end":102464,"line_start":180,"line_end":180,"column_start":12,"column_end":28},"name":"confidence_level","qualname":"<BenchmarkGroup>::confidence_level","value":"pub fn confidence_level(&mut Self, f64) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Changes the confidence level for benchmarks in this group. The confidence\n level is the desired probability that the true runtime lies within the estimated\n [confidence interval](https://en.wikipedia.org/wiki/Confidence_interval). The default is\n 0.95, meaning that the confidence interval should capture the true value 95% of the time.","sig":null,"attributes":[{"value":"/ Changes the confidence level for benchmarks in this group. The confidence","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":101958,"byte_end":102035,"line_start":172,"line_end":172,"column_start":5,"column_end":82}},{"value":"/ level is the desired probability that the true runtime lies within the estimated","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":102040,"byte_end":102124,"line_start":173,"line_end":173,"column_start":5,"column_end":89}},{"value":"/ [confidence interval](https://en.wikipedia.org/wiki/Confidence_interval). The default is","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":102129,"byte_end":102221,"line_start":174,"line_end":174,"column_start":5,"column_end":97}},{"value":"/ 0.95, meaning that the confidence interval should capture the true value 95% of the time.","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":102226,"byte_end":102319,"line_start":175,"line_end":175,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":102324,"byte_end":102327,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":102332,"byte_end":102344,"line_start":177,"line_end":177,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":102349,"byte_end":102352,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ Panics if the confidence level is set to a value outside the `(0, 1)` range","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":102357,"byte_end":102436,"line_start":179,"line_end":179,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":198},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":104034,"byte_end":104052,"line_start":210,"line_end":210,"column_start":12,"column_end":30},"name":"significance_level","qualname":"<BenchmarkGroup>::significance_level","value":"pub fn significance_level(&mut Self, f64) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Changes the [significance level](https://en.wikipedia.org/wiki/Statistical_significance)\n for benchmarks in this group. This is used to perform a\n [hypothesis test](https://en.wikipedia.org/wiki/Statistical_hypothesis_testing) to see if\n the measurements from this run are different from the measured performance of the last run.\n The significance level is the desired probability that two measurements of identical code\n will be considered 'different' due to noise in the measurements. The default value is 0.05,\n meaning that approximately 5% of identical benchmarks will register as different due to\n noise.","sig":null,"attributes":[{"value":"/ Changes the [significance level](https://en.wikipedia.org/wiki/Statistical_significance)","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":102749,"byte_end":102841,"line_start":190,"line_end":190,"column_start":5,"column_end":97}},{"value":"/ for benchmarks in this group. This is used to perform a","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":102846,"byte_end":102905,"line_start":191,"line_end":191,"column_start":5,"column_end":64}},{"value":"/ [hypothesis test](https://en.wikipedia.org/wiki/Statistical_hypothesis_testing) to see if","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":102910,"byte_end":103003,"line_start":192,"line_end":192,"column_start":5,"column_end":98}},{"value":"/ the measurements from this run are different from the measured performance of the last run.","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":103008,"byte_end":103103,"line_start":193,"line_end":193,"column_start":5,"column_end":100}},{"value":"/ The significance level is the desired probability that two measurements of identical code","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":103108,"byte_end":103201,"line_start":194,"line_end":194,"column_start":5,"column_end":98}},{"value":"/ will be considered 'different' due to noise in the measurements. The default value is 0.05,","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":103206,"byte_end":103301,"line_start":195,"line_end":195,"column_start":5,"column_end":100}},{"value":"/ meaning that approximately 5% of identical benchmarks will register as different due to","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":103306,"byte_end":103397,"line_start":196,"line_end":196,"column_start":5,"column_end":96}},{"value":"/ noise.","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":103402,"byte_end":103412,"line_start":197,"line_end":197,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":103417,"byte_end":103420,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ This presents a trade-off. By setting the significance level closer to 0.0, you can increase","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":103425,"byte_end":103521,"line_start":199,"line_end":199,"column_start":5,"column_end":101}},{"value":"/ the statistical robustness against noise, but it also weaken's Criterion.rs' ability to","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":103526,"byte_end":103617,"line_start":200,"line_end":200,"column_start":5,"column_end":96}},{"value":"/ detect small but real changes in the performance. By setting the significance level","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":103622,"byte_end":103709,"line_start":201,"line_end":201,"column_start":5,"column_end":92}},{"value":"/ closer to 1.0, Criterion.rs will be more able to detect small true changes, but will also","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":103714,"byte_end":103807,"line_start":202,"line_end":202,"column_start":5,"column_end":98}},{"value":"/ report more spurious differences.","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":103812,"byte_end":103849,"line_start":203,"line_end":203,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":103854,"byte_end":103857,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ See also the noise threshold setting.","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":103862,"byte_end":103903,"line_start":205,"line_end":205,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":103908,"byte_end":103911,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":103916,"byte_end":103928,"line_start":207,"line_end":207,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":103933,"byte_end":103936,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ Panics if the significance level is set to a value outside the `(0, 1)` range","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":103941,"byte_end":104022,"line_start":209,"line_end":209,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":199},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":104283,"byte_end":104294,"line_start":218,"line_end":218,"column_start":12,"column_end":23},"name":"plot_config","qualname":"<BenchmarkGroup>::plot_config","value":"pub fn plot_config(&mut Self, PlotConfiguration) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Changes the plot configuration for this benchmark group.\n","sig":null,"attributes":[{"value":"/ Changes the plot configuration for this benchmark group.","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":104211,"byte_end":104271,"line_start":217,"line_end":217,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":200},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":104533,"byte_end":104543,"line_start":225,"line_end":225,"column_start":12,"column_end":22},"name":"throughput","qualname":"<BenchmarkGroup>::throughput","value":"pub fn throughput(&mut Self, Throughput) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Set the input size for this benchmark group. Used for reporting the\n throughput.\n","sig":null,"attributes":[{"value":"/ Set the input size for this benchmark group. Used for reporting the","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":104430,"byte_end":104501,"line_start":223,"line_end":223,"column_start":5,"column_end":76}},{"value":"/ throughput.","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":104506,"byte_end":104521,"line_start":224,"line_end":224,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":202},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":105091,"byte_end":105105,"line_start":242,"line_end":242,"column_start":12,"column_end":26},"name":"bench_function","qualname":"<BenchmarkGroup>::bench_function","value":"pub fn bench_function<ID: IntoBenchmarkId, F>(&mut Self, ID, F) -> &mut Self\nwhere F: FnMut(&mut Bencher<, M>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Benchmark the given parameterless function inside this benchmark group.\n","sig":null,"attributes":[{"value":"/ Benchmark the given parameterless function inside this benchmark group.","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":105004,"byte_end":105079,"line_start":241,"line_end":241,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":206},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":105404,"byte_end":105420,"line_start":251,"line_end":251,"column_start":12,"column_end":28},"name":"bench_with_input","qualname":"<BenchmarkGroup>::bench_with_input","value":"pub fn bench_with_input<ID: IntoBenchmarkId, F,\n                        I: ?Sized>(&mut Self, ID, &I, F) -> &mut Self where\nF: FnMut(&mut Bencher<, M>, &I) -> (), I","parent":null,"children":[],"decl_id":null,"docs":" Benchmark the given parameterized function inside this benchmark group.\n","sig":null,"attributes":[{"value":"/ Benchmark the given parameterized function inside this benchmark group.","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":105317,"byte_end":105392,"line_start":250,"line_end":250,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":213},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":107445,"byte_end":107451,"line_start":319,"line_end":319,"column_start":12,"column_end":18},"name":"finish","qualname":"<BenchmarkGroup>::finish","value":"pub fn finish(Self)","parent":null,"children":[],"decl_id":null,"docs":" Consume the benchmark group and generate the summary reports for the group.","sig":null,"attributes":[{"value":"/ Consume the benchmark group and generate the summary reports for the group.","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":107224,"byte_end":107303,"line_start":315,"line_end":315,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":107308,"byte_end":107311,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ It is recommended to call this explicitly, but if you forget it will be called when the","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":107316,"byte_end":107407,"line_start":317,"line_end":317,"column_start":5,"column_end":96}},{"value":"/ group is dropped.","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":107412,"byte_end":107433,"line_start":318,"line_end":318,"column_start":5,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":1841},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":108598,"byte_end":108609,"line_start":353,"line_end":353,"column_start":12,"column_end":23},"name":"BenchmarkId","qualname":"::benchmark_group::BenchmarkId","value":"BenchmarkId {  }","parent":null,"children":[{"krate":0,"index":1842},{"krate":0,"index":1843}],"decl_id":null,"docs":" Simple structure representing an ID for a benchmark. The ID must be unique within a benchmark\n group.\n","sig":null,"attributes":[{"value":"/ Simple structure representing an ID for a benchmark. The ID must be unique within a benchmark","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":108440,"byte_end":108537,"line_start":350,"line_end":350,"column_start":1,"column_end":98}},{"value":"/ group.","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":108538,"byte_end":108548,"line_start":351,"line_end":351,"column_start":1,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":219},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":110159,"byte_end":110162,"line_start":387,"line_end":387,"column_start":12,"column_end":15},"name":"new","qualname":"<BenchmarkId>::new","value":"pub fn new<S: Into<String>, P: ::std::fmt::Display>(S, P) -> BenchmarkId","parent":null,"children":[],"decl_id":null,"docs":" Construct a new benchmark ID from a string function name and a parameter value.","sig":null,"attributes":[{"value":"/ Construct a new benchmark ID from a string function name and a parameter value.","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":108725,"byte_end":108808,"line_start":358,"line_end":358,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":108813,"byte_end":108816,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ Note that the parameter value need not be the same as the parameter passed to your","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":108821,"byte_end":108907,"line_start":360,"line_end":360,"column_start":5,"column_end":91}},{"value":"/ actual benchmark. For instance, you might have a benchmark that takes a 1MB string as","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":108912,"byte_end":109001,"line_start":361,"line_end":361,"column_start":5,"column_end":94}},{"value":"/ input. It would be impractical to embed the whole string in the benchmark ID, so instead","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":109006,"byte_end":109098,"line_start":362,"line_end":362,"column_start":5,"column_end":97}},{"value":"/ your parameter value might be a descriptive string like \"1MB Alphanumeric\".","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":109103,"byte_end":109182,"line_start":363,"line_end":363,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":109187,"byte_end":109190,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":109195,"byte_end":109209,"line_start":365,"line_end":365,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":109214,"byte_end":109221,"line_start":366,"line_end":366,"column_start":5,"column_end":12}},{"value":"/ # use criterion::{BenchmarkId, Criterion};","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":109226,"byte_end":109272,"line_start":367,"line_end":367,"column_start":5,"column_end":51}},{"value":"/ // A basic benchmark ID is typically constructed from a constant string and a simple","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":109277,"byte_end":109365,"line_start":368,"line_end":368,"column_start":5,"column_end":93}},{"value":"/ // parameter","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":109370,"byte_end":109386,"line_start":369,"line_end":369,"column_start":5,"column_end":21}},{"value":"/ let basic_id = BenchmarkId::new(\"my_id\", 5);","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":109391,"byte_end":109439,"line_start":370,"line_end":370,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":109444,"byte_end":109447,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ // The function name can be a string","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":109452,"byte_end":109492,"line_start":372,"line_end":372,"column_start":5,"column_end":45}},{"value":"/ let function_name = \"test_string\".to_string();","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":109497,"byte_end":109547,"line_start":373,"line_end":373,"column_start":5,"column_end":55}},{"value":"/ let string_id = BenchmarkId::new(function_name, 12);","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":109552,"byte_end":109608,"line_start":374,"line_end":374,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":109613,"byte_end":109616,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ // Benchmark IDs are passed to benchmark groups:","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":109621,"byte_end":109673,"line_start":376,"line_end":376,"column_start":5,"column_end":57}},{"value":"/ let mut criterion = Criterion::default();","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":109678,"byte_end":109723,"line_start":377,"line_end":377,"column_start":5,"column_end":50}},{"value":"/ let mut group = criterion.benchmark_group(\"My Group\");","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":109728,"byte_end":109786,"line_start":378,"line_end":378,"column_start":5,"column_end":63}},{"value":"/ // Generate a very large input","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":109791,"byte_end":109825,"line_start":379,"line_end":379,"column_start":5,"column_end":39}},{"value":"/ let input : String = ::std::iter::repeat(\"X\").take(1024 * 1024).collect();","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":109830,"byte_end":109908,"line_start":380,"line_end":380,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":109913,"byte_end":109916,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ // Note that we don't have to use the input as the parameter in the ID","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":109921,"byte_end":109995,"line_start":382,"line_end":382,"column_start":5,"column_end":79}},{"value":"/ group.bench_with_input(BenchmarkId::new(\"Test long string\", \"1MB X's\"), &input, |b, i| {","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":110000,"byte_end":110092,"line_start":383,"line_end":383,"column_start":5,"column_end":97}},{"value":"/     b.iter(|| i.len())","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":110097,"byte_end":110123,"line_start":384,"line_end":384,"column_start":5,"column_end":31}},{"value":"/ });","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":110128,"byte_end":110135,"line_start":385,"line_end":385,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":110140,"byte_end":110147,"line_start":386,"line_end":386,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":222},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":110591,"byte_end":110605,"line_start":399,"line_end":399,"column_start":12,"column_end":26},"name":"from_parameter","qualname":"<BenchmarkId>::from_parameter","value":"pub fn from_parameter<P: ::std::fmt::Display>(P) -> BenchmarkId","parent":null,"children":[],"decl_id":null,"docs":" Construct a new benchmark ID from just a parameter value. Use this when benchmarking a\n single function with a variety of different inputs.\n","sig":null,"attributes":[{"value":"/ Construct a new benchmark ID from just a parameter value. Use this when benchmarking a","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":110429,"byte_end":110519,"line_start":397,"line_end":397,"column_start":5,"column_end":95}},{"value":"/ single function with a variety of different inputs.","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":110524,"byte_end":110579,"line_start":398,"line_end":398,"column_start":5,"column_end":60}}]},{"kind":"Trait","id":{"krate":0,"index":228},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":111191,"byte_end":111197,"line_start":422,"line_end":422,"column_start":15,"column_end":21},"name":"Sealed","qualname":"::benchmark_group::private::Sealed","value":"Sealed","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":232},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":111385,"byte_end":111400,"line_start":428,"line_end":428,"column_start":11,"column_end":26},"name":"IntoBenchmarkId","qualname":"::benchmark_group::IntoBenchmarkId","value":"IntoBenchmarkId: private::Sealed","parent":null,"children":[{"krate":0,"index":233}],"decl_id":null,"docs":" Sealed trait which allows users to automatically convert strings to benchmark IDs.\n","sig":null,"attributes":[{"value":"/ Sealed trait which allows users to automatically convert strings to benchmark IDs.","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":111288,"byte_end":111374,"line_start":427,"line_end":427,"column_start":1,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":233},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":111427,"byte_end":111444,"line_start":429,"line_end":429,"column_start":8,"column_end":25},"name":"into_benchmark_id","qualname":"::benchmark_group::IntoBenchmarkId::into_benchmark_id","value":"pub fn into_benchmark_id(Self) -> BenchmarkId","parent":{"krate":0,"index":232},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":453},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/measurement.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"measurement","qualname":"::measurement","value":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/measurement.rs","parent":null,"children":[{"krate":0,"index":454},{"krate":0,"index":455},{"krate":0,"index":456},{"krate":0,"index":457},{"krate":0,"index":458},{"krate":0,"index":459},{"krate":0,"index":460},{"krate":0,"index":466},{"krate":0,"index":475},{"krate":0,"index":477},{"krate":0,"index":480},{"krate":0,"index":484},{"krate":0,"index":486}],"decl_id":null,"docs":" This module defines a set of traits that can be used to plug different measurements (eg.\n Unix's Processor Time, CPU or GPU performance counters, etc.) into Criterion.rs. It also\n includes the [WallTime](struct.WallTime.html) struct which defines the default wall-clock time\n measurement.\n","sig":null,"attributes":[{"value":"/ This module defines a set of traits that can be used to plug different measurements (eg.","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/measurement.rs","byte_start":154218,"byte_end":154310,"line_start":1,"line_end":1,"column_start":1,"column_end":93}},{"value":"/ Unix's Processor Time, CPU or GPU performance counters, etc.) into Criterion.rs. It also","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/measurement.rs","byte_start":154311,"byte_end":154403,"line_start":2,"line_end":2,"column_start":1,"column_end":93}},{"value":"/ includes the [WallTime](struct.WallTime.html) struct which defines the default wall-clock time","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/measurement.rs","byte_start":154404,"byte_end":154502,"line_start":3,"line_end":3,"column_start":1,"column_end":99}},{"value":"/ measurement.","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/measurement.rs","byte_start":154503,"byte_end":154519,"line_start":4,"line_end":4,"column_start":1,"column_end":17}}]},{"kind":"Trait","id":{"krate":0,"index":460},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/measurement.rs","byte_start":155444,"byte_end":155458,"line_start":21,"line_end":21,"column_start":11,"column_end":25},"name":"ValueFormatter","qualname":"::measurement::ValueFormatter","value":"ValueFormatter","parent":null,"children":[{"krate":0,"index":461},{"krate":0,"index":462},{"krate":0,"index":463},{"krate":0,"index":464},{"krate":0,"index":465}],"decl_id":null,"docs":" Trait providing functions to format measured values to string so that they can be displayed on\n the command line or in the reports. The functions of this trait take measured values in f64\n form; implementors can assume that the values are of the same scale as those produced by the\n associated [MeasuredValue](trait.MeasuredValue.html) (eg. if your measurement produces values in\n nanoseconds, the values passed to the formatter will be in nanoseconds).","sig":null,"attributes":[{"value":"/ Trait providing functions to format measured values to string so that they can be displayed on","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/measurement.rs","byte_start":154631,"byte_end":154729,"line_start":11,"line_end":11,"column_start":1,"column_end":99}},{"value":"/ the command line or in the reports. The functions of this trait take measured values in f64","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/measurement.rs","byte_start":154730,"byte_end":154825,"line_start":12,"line_end":12,"column_start":1,"column_end":96}},{"value":"/ form; implementors can assume that the values are of the same scale as those produced by the","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/measurement.rs","byte_start":154826,"byte_end":154922,"line_start":13,"line_end":13,"column_start":1,"column_end":97}},{"value":"/ associated [MeasuredValue](trait.MeasuredValue.html) (eg. if your measurement produces values in","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/measurement.rs","byte_start":154923,"byte_end":155023,"line_start":14,"line_end":14,"column_start":1,"column_end":101}},{"value":"/ nanoseconds, the values passed to the formatter will be in nanoseconds).","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/measurement.rs","byte_start":155024,"byte_end":155100,"line_start":15,"line_end":15,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/measurement.rs","byte_start":155101,"byte_end":155104,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Implementors are encouraged to format the values in a way that is intuitive for humans and","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/measurement.rs","byte_start":155105,"byte_end":155199,"line_start":17,"line_end":17,"column_start":1,"column_end":95}},{"value":"/ uses the SI prefix system. For example, the format used by [WallTime](struct.Walltime.html)","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/measurement.rs","byte_start":155200,"byte_end":155295,"line_start":18,"line_end":18,"column_start":1,"column_end":96}},{"value":"/ can display the value in units ranging from picoseconds to seconds depending on the magnitude","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/measurement.rs","byte_start":155296,"byte_end":155393,"line_start":19,"line_end":19,"column_start":1,"column_end":98}},{"value":"/ of the elapsed time in nanoseconds.","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/measurement.rs","byte_start":155394,"byte_end":155433,"line_start":20,"line_end":20,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":461},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/measurement.rs","byte_start":155544,"byte_end":155556,"line_start":23,"line_end":23,"column_start":8,"column_end":20},"name":"format_value","qualname":"::measurement::ValueFormatter::format_value","value":"pub fn format_value(&Self, f64) -> String","parent":{"krate":0,"index":460},"children":[],"decl_id":null,"docs":" Format the value (with appropriate unit) and return it as a string.\n","sig":null,"attributes":[{"value":"/ Format the value (with appropriate unit) and return it as a string.","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/measurement.rs","byte_start":155465,"byte_end":155536,"line_start":22,"line_end":22,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":462},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/measurement.rs","byte_start":155936,"byte_end":155953,"line_start":31,"line_end":31,"column_start":8,"column_end":25},"name":"format_throughput","qualname":"::measurement::ValueFormatter::format_throughput","value":"pub fn format_throughput(&Self, &Throughput, f64) -> String","parent":{"krate":0,"index":460},"children":[],"decl_id":null,"docs":" Format the value as a throughput measurement. The value represents the measurement value;\n the implementor will have to calculate bytes per second, iterations per cycle, etc.\n","sig":null,"attributes":[{"value":"/ Format the value as a throughput measurement. The value represents the measurement value;","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/measurement.rs","byte_start":155743,"byte_end":155836,"line_start":29,"line_end":29,"column_start":5,"column_end":98}},{"value":"/ the implementor will have to calculate bytes per second, iterations per cycle, etc.","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/measurement.rs","byte_start":155841,"byte_end":155928,"line_start":30,"line_end":30,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":463},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/measurement.rs","byte_start":156656,"byte_end":156668,"line_start":43,"line_end":43,"column_start":8,"column_end":20},"name":"scale_values","qualname":"::measurement::ValueFormatter::scale_values","value":"pub fn scale_values(&Self, f64, &mut [f64]) -> &'static str","parent":{"krate":0,"index":460},"children":[],"decl_id":null,"docs":" Scale the given values to some appropriate unit and return the unit string.","sig":null,"attributes":[{"value":"/ Scale the given values to some appropriate unit and return the unit string.","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/measurement.rs","byte_start":156182,"byte_end":156261,"line_start":37,"line_end":37,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/measurement.rs","byte_start":156266,"byte_end":156269,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ The given typical value should be used to choose the unit. This function may be called","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/measurement.rs","byte_start":156274,"byte_end":156364,"line_start":39,"line_end":39,"column_start":5,"column_end":95}},{"value":"/ multiple times with different datasets; the typical value will remain the same to ensure","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/measurement.rs","byte_start":156369,"byte_end":156461,"line_start":40,"line_end":40,"column_start":5,"column_end":97}},{"value":"/ that the units remain consistent within a graph. The typical value will not be NaN.","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/measurement.rs","byte_start":156466,"byte_end":156553,"line_start":41,"line_end":41,"column_start":5,"column_end":92}},{"value":"/ Values will not contain NaN as input, and the transformed values must not contain NaN.","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/measurement.rs","byte_start":156558,"byte_end":156648,"line_start":42,"line_end":42,"column_start":5,"column_end":95}}]},{"kind":"Method","id":{"krate":0,"index":464},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/measurement.rs","byte_start":157304,"byte_end":157321,"line_start":52,"line_end":52,"column_start":8,"column_end":25},"name":"scale_throughputs","qualname":"::measurement::ValueFormatter::scale_throughputs","value":"pub fn scale_throughputs(&Self, f64, &Throughput, &mut [f64]) -> &'static str","parent":{"krate":0,"index":460},"children":[],"decl_id":null,"docs":" Convert the given measured values into throughput numbers based on the given throughput\n value, scale them to some appropriate unit, and return the unit string.","sig":null,"attributes":[{"value":"/ Convert the given measured values into throughput numbers based on the given throughput","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/measurement.rs","byte_start":156738,"byte_end":156829,"line_start":45,"line_end":45,"column_start":5,"column_end":96}},{"value":"/ value, scale them to some appropriate unit, and return the unit string.","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/measurement.rs","byte_start":156834,"byte_end":156909,"line_start":46,"line_end":46,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/measurement.rs","byte_start":156914,"byte_end":156917,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ The given typical value should be used to choose the unit. This function may be called","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/measurement.rs","byte_start":156922,"byte_end":157012,"line_start":48,"line_end":48,"column_start":5,"column_end":95}},{"value":"/ multiple times with different datasets; the typical value will remain the same to ensure","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/measurement.rs","byte_start":157017,"byte_end":157109,"line_start":49,"line_end":49,"column_start":5,"column_end":97}},{"value":"/ that the units remain consistent within a graph. The typical value will not be NaN.","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/measurement.rs","byte_start":157114,"byte_end":157201,"line_start":50,"line_end":50,"column_start":5,"column_end":92}},{"value":"/ Values will not contain NaN as input, and the transformed values must not contain NaN.","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/measurement.rs","byte_start":157206,"byte_end":157296,"line_start":51,"line_end":51,"column_start":5,"column_end":95}}]},{"kind":"Method","id":{"krate":0,"index":465},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/measurement.rs","byte_start":157775,"byte_end":157793,"line_start":64,"line_end":64,"column_start":8,"column_end":26},"name":"scale_for_machines","qualname":"::measurement::ValueFormatter::scale_for_machines","value":"pub fn scale_for_machines(&Self, &mut [f64]) -> &'static str","parent":{"krate":0,"index":460},"children":[],"decl_id":null,"docs":" Scale the values and return a unit string designed for machines.","sig":null,"attributes":[{"value":"/ Scale the values and return a unit string designed for machines.","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/measurement.rs","byte_start":157455,"byte_end":157523,"line_start":59,"line_end":59,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/measurement.rs","byte_start":157528,"byte_end":157531,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ For example, this is used for the CSV file output. Implementations should modify the given","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/measurement.rs","byte_start":157536,"byte_end":157630,"line_start":61,"line_end":61,"column_start":5,"column_end":99}},{"value":"/ values slice to apply the desired scaling (if any) and return a string representing the unit","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/measurement.rs","byte_start":157635,"byte_end":157731,"line_start":62,"line_end":62,"column_start":5,"column_end":101}},{"value":"/ the modified values are in.","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/measurement.rs","byte_start":157736,"byte_end":157767,"line_start":63,"line_end":63,"column_start":5,"column_end":36}}]},{"kind":"Trait","id":{"krate":0,"index":466},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/measurement.rs","byte_start":158390,"byte_end":158401,"line_start":76,"line_end":76,"column_start":11,"column_end":22},"name":"Measurement","qualname":"::measurement::Measurement","value":"Measurement","parent":null,"children":[{"krate":0,"index":467},{"krate":0,"index":468},{"krate":0,"index":469},{"krate":0,"index":470},{"krate":0,"index":471},{"krate":0,"index":472},{"krate":0,"index":473},{"krate":0,"index":474}],"decl_id":null,"docs":" Trait for all types which define something Criterion.rs can measure. The only measurement\n currently provided is [WallTime](struct.WallTime.html), but third party crates or benchmarks\n may define more.","sig":null,"attributes":[{"value":"/ Trait for all types which define something Criterion.rs can measure. The only measurement","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/measurement.rs","byte_start":157841,"byte_end":157934,"line_start":67,"line_end":67,"column_start":1,"column_end":94}},{"value":"/ currently provided is [WallTime](struct.WallTime.html), but third party crates or benchmarks","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/measurement.rs","byte_start":157935,"byte_end":158031,"line_start":68,"line_end":68,"column_start":1,"column_end":97}},{"value":"/ may define more.","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/measurement.rs","byte_start":158032,"byte_end":158052,"line_start":69,"line_end":69,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/measurement.rs","byte_start":158053,"byte_end":158056,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ This trait defines two core methods, `start` and `end`. `start` is called at the beginning of","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/measurement.rs","byte_start":158057,"byte_end":158154,"line_start":71,"line_end":71,"column_start":1,"column_end":98}},{"value":"/ a measurement to produce some intermediate value (for example, the wall-clock time at the start","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/measurement.rs","byte_start":158155,"byte_end":158254,"line_start":72,"line_end":72,"column_start":1,"column_end":100}},{"value":"/ of that set of iterations) and `end` is called at the end of the measurement with the value","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/measurement.rs","byte_start":158255,"byte_end":158350,"line_start":73,"line_end":73,"column_start":1,"column_end":96}},{"value":"/ returned by `start`.","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/measurement.rs","byte_start":158351,"byte_end":158375,"line_start":74,"line_end":74,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/measurement.rs","byte_start":158376,"byte_end":158379,"line_start":75,"line_end":75,"column_start":1,"column_end":4}}]},{"kind":"Type","id":{"krate":0,"index":467},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/measurement.rs","byte_start":158640,"byte_end":158652,"line_start":80,"line_end":80,"column_start":10,"column_end":22},"name":"Intermediate","qualname":"::measurement::Measurement::Intermediate","value":"type Intermediate;","parent":{"krate":0,"index":466},"children":[],"decl_id":null,"docs":" This type represents an intermediate value for the measurements. It will be produced by the\n start function and passed to the end function. An example might be the wall-clock time as\n of the `start` call.\n","sig":null,"attributes":[{"value":"/ This type represents an intermediate value for the measurements. It will be produced by the","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/measurement.rs","byte_start":158408,"byte_end":158503,"line_start":77,"line_end":77,"column_start":5,"column_end":100}},{"value":"/ start function and passed to the end function. An example might be the wall-clock time as","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/measurement.rs","byte_start":158508,"byte_end":158601,"line_start":78,"line_end":78,"column_start":5,"column_end":98}},{"value":"/ of the `start` call.","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/measurement.rs","byte_start":158606,"byte_end":158630,"line_start":79,"line_end":79,"column_start":5,"column_end":29}}]},{"kind":"Type","id":{"krate":0,"index":468},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/measurement.rs","byte_start":158798,"byte_end":158803,"line_start":84,"line_end":84,"column_start":10,"column_end":15},"name":"Value","qualname":"::measurement::Measurement::Value","value":"type Value;","parent":{"krate":0,"index":466},"children":[],"decl_id":null,"docs":" This type is the measured value. An example might be the elapsed wall-clock time between the\n `start` and `end` calls.\n","sig":null,"attributes":[{"value":"/ This type is the measured value. An example might be the elapsed wall-clock time between the","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/measurement.rs","byte_start":158659,"byte_end":158755,"line_start":82,"line_end":82,"column_start":5,"column_end":101}},{"value":"/ `start` and `end` calls.","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/measurement.rs","byte_start":158760,"byte_end":158788,"line_start":83,"line_end":83,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":469},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/measurement.rs","byte_start":158881,"byte_end":158886,"line_start":87,"line_end":87,"column_start":8,"column_end":13},"name":"start","qualname":"::measurement::Measurement::start","value":"pub fn start(&Self) -> Self::Intermediate","parent":{"krate":0,"index":466},"children":[],"decl_id":null,"docs":" Criterion.rs will call this before iterating the benchmark.\n","sig":null,"attributes":[{"value":"/ Criterion.rs will call this before iterating the benchmark.","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/measurement.rs","byte_start":158810,"byte_end":158873,"line_start":86,"line_end":86,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":470},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/measurement.rs","byte_start":159018,"byte_end":159021,"line_start":90,"line_end":90,"column_start":8,"column_end":11},"name":"end","qualname":"::measurement::Measurement::end","value":"pub fn end(&Self, Self::Intermediate) -> Self::Value","parent":{"krate":0,"index":466},"children":[],"decl_id":null,"docs":" Criterion.rs will call this after iterating the benchmark to get the measured value.\n","sig":null,"attributes":[{"value":"/ Criterion.rs will call this after iterating the benchmark to get the measured value.","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/measurement.rs","byte_start":158922,"byte_end":159010,"line_start":89,"line_end":89,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":471},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/measurement.rs","byte_start":159278,"byte_end":159281,"line_start":94,"line_end":94,"column_start":8,"column_end":11},"name":"add","qualname":"::measurement::Measurement::add","value":"pub fn add(&Self, &Self::Value, &Self::Value) -> Self::Value","parent":{"krate":0,"index":466},"children":[],"decl_id":null,"docs":" Combine two values. Criterion.rs sometimes needs to perform measurements in multiple batches\n of iterations, so the value from one batch must be added to the sum of the previous batches.\n","sig":null,"attributes":[{"value":"/ Combine two values. Criterion.rs sometimes needs to perform measurements in multiple batches","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/measurement.rs","byte_start":159073,"byte_end":159169,"line_start":92,"line_end":92,"column_start":5,"column_end":101}},{"value":"/ of iterations, so the value from one batch must be added to the sum of the previous batches.","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/measurement.rs","byte_start":159174,"byte_end":159270,"line_start":93,"line_end":93,"column_start":5,"column_end":101}}]},{"kind":"Method","id":{"krate":0,"index":472},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/measurement.rs","byte_start":159435,"byte_end":159439,"line_start":97,"line_end":97,"column_start":8,"column_end":12},"name":"zero","qualname":"::measurement::Measurement::zero","value":"pub fn zero(&Self) -> Self::Value","parent":{"krate":0,"index":466},"children":[],"decl_id":null,"docs":" Return a \"zero\" value for the Value type which can be added to another value.\n","sig":null,"attributes":[{"value":"/ Return a \"zero\" value for the Value type which can be added to another value.","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/measurement.rs","byte_start":159346,"byte_end":159427,"line_start":96,"line_end":96,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":473},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/measurement.rs","byte_start":159562,"byte_end":159568,"line_start":100,"line_end":100,"column_start":8,"column_end":14},"name":"to_f64","qualname":"::measurement::Measurement::to_f64","value":"pub fn to_f64(&Self, &Self::Value) -> f64","parent":{"krate":0,"index":466},"children":[],"decl_id":null,"docs":" Converts the measured value to f64 so that it can be used in statistical analysis.\n","sig":null,"attributes":[{"value":"/ Converts the measured value to f64 so that it can be used in statistical analysis.","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/measurement.rs","byte_start":159468,"byte_end":159554,"line_start":99,"line_end":99,"column_start":5,"column_end":91}}]},{"kind":"Method","id":{"krate":0,"index":474},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/measurement.rs","byte_start":159698,"byte_end":159707,"line_start":103,"line_end":103,"column_start":8,"column_end":17},"name":"formatter","qualname":"::measurement::Measurement::formatter","value":"pub fn formatter(&Self) -> &ValueFormatter","parent":{"krate":0,"index":466},"children":[],"decl_id":null,"docs":" Return a trait-object reference to the value formatter for this measurement.\n","sig":null,"attributes":[{"value":"/ Return a trait-object reference to the value formatter for this measurement.","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/measurement.rs","byte_start":159610,"byte_end":159690,"line_start":102,"line_end":102,"column_start":5,"column_end":85}}]},{"kind":"Struct","id":{"krate":0,"index":484},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/measurement.rs","byte_start":162415,"byte_end":162423,"line_start":189,"line_end":189,"column_start":12,"column_end":20},"name":"WallTime","qualname":"::measurement::WallTime","value":"","parent":null,"children":[],"decl_id":null,"docs":" `WallTime` is the default measurement in Criterion.rs. It measures the elapsed time from the\n beginning of a series of iterations to the end.\n","sig":null,"attributes":[{"value":"/ `WallTime` is the default measurement in Criterion.rs. It measures the elapsed time from the","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/measurement.rs","byte_start":162255,"byte_end":162351,"line_start":187,"line_end":187,"column_start":1,"column_end":97}},{"value":"/ beginning of a series of iterations to the end.","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/measurement.rs","byte_start":162352,"byte_end":162403,"line_start":188,"line_end":188,"column_start":1,"column_end":52}}]},{"kind":"Mod","id":{"krate":0,"index":956},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/profiler.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"profiler","qualname":"::profiler","value":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/profiler.rs","parent":null,"children":[{"krate":0,"index":957},{"krate":0,"index":958},{"krate":0,"index":961},{"krate":0,"index":963}],"decl_id":null,"docs":" This module provides an extension trait which allows in-process profilers\n to be hooked into the `--profile-time` argument at compile-time. Users of\n out-of-process profilers such as perf don't need to do anything special.\n","sig":null,"attributes":[{"value":"/ This module provides an extension trait which allows in-process profilers","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/profiler.rs","byte_start":253606,"byte_end":253683,"line_start":1,"line_end":1,"column_start":1,"column_end":78}},{"value":"/ to be hooked into the `--profile-time` argument at compile-time. Users of","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/profiler.rs","byte_start":253684,"byte_end":253761,"line_start":2,"line_end":2,"column_start":1,"column_end":78}},{"value":"/ out-of-process profilers such as perf don't need to do anything special.","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/profiler.rs","byte_start":253762,"byte_end":253838,"line_start":3,"line_end":3,"column_start":1,"column_end":77}}]},{"kind":"Trait","id":{"krate":0,"index":958},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/profiler.rs","byte_start":254015,"byte_end":254023,"line_start":9,"line_end":9,"column_start":11,"column_end":19},"name":"Profiler","qualname":"::profiler::Profiler","value":"Profiler","parent":null,"children":[{"krate":0,"index":959},{"krate":0,"index":960}],"decl_id":null,"docs":" Extension trait for external crates to implement which provides start/stop\n hooks when profiling (but not when benchmarking) functions.\n","sig":null,"attributes":[{"value":"/ Extension trait for external crates to implement which provides start/stop","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/profiler.rs","byte_start":253862,"byte_end":253940,"line_start":7,"line_end":7,"column_start":1,"column_end":79}},{"value":"/ hooks when profiling (but not when benchmarking) functions.","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/profiler.rs","byte_start":253941,"byte_end":254004,"line_start":8,"line_end":8,"column_start":1,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":959},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/profiler.rs","byte_start":254246,"byte_end":254261,"line_start":13,"line_end":13,"column_start":8,"column_end":23},"name":"start_profiling","qualname":"::profiler::Profiler::start_profiling","value":"pub fn start_profiling(&mut Self, &str, &Path)","parent":{"krate":0,"index":958},"children":[],"decl_id":null,"docs":" This function is called when Criterion.rs starts profiling a particular\n benchmark. It provides the stringified benchmark ID and\n a path to a directory where the profiler can store its data.\n","sig":null,"attributes":[{"value":"/ This function is called when Criterion.rs starts profiling a particular","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/profiler.rs","byte_start":254030,"byte_end":254105,"line_start":10,"line_end":10,"column_start":5,"column_end":80}},{"value":"/ benchmark. It provides the stringified benchmark ID and","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/profiler.rs","byte_start":254110,"byte_end":254169,"line_start":11,"line_end":11,"column_start":5,"column_end":64}},{"value":"/ a path to a directory where the profiler can store its data.","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/profiler.rs","byte_start":254174,"byte_end":254238,"line_start":12,"line_end":12,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":960},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/profiler.rs","byte_start":254528,"byte_end":254542,"line_start":18,"line_end":18,"column_start":8,"column_end":22},"name":"stop_profiling","qualname":"::profiler::Profiler::stop_profiling","value":"pub fn stop_profiling(&mut Self, &str, &Path)","parent":{"krate":0,"index":958},"children":[],"decl_id":null,"docs":" This function is called after Criterion.rs stops profiling a particular\n benchmark. The benchmark ID and directory are the same as in the call\n to `start`, provided for convenience.\n","sig":null,"attributes":[{"value":"/ This function is called after Criterion.rs stops profiling a particular","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/profiler.rs","byte_start":254321,"byte_end":254396,"line_start":15,"line_end":15,"column_start":5,"column_end":80}},{"value":"/ benchmark. The benchmark ID and directory are the same as in the call","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/profiler.rs","byte_start":254401,"byte_end":254474,"line_start":16,"line_end":16,"column_start":5,"column_end":78}},{"value":"/ to `start`, provided for convenience.","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/profiler.rs","byte_start":254479,"byte_end":254520,"line_start":17,"line_end":17,"column_start":5,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":961},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/profiler.rs","byte_start":254837,"byte_end":254853,"line_start":24,"line_end":24,"column_start":12,"column_end":28},"name":"ExternalProfiler","qualname":"::profiler::ExternalProfiler","value":"","parent":null,"children":[],"decl_id":null,"docs":" Dummy profiler implementation, representing cases where the profiler is\n an external process (eg. perftools, etc.) which do not require start/stop\n hooks. This implementation does nothing and is used as the default.\n","sig":null,"attributes":[{"value":"/ Dummy profiler implementation, representing cases where the profiler is","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/profiler.rs","byte_start":254600,"byte_end":254675,"line_start":21,"line_end":21,"column_start":1,"column_end":76}},{"value":"/ an external process (eg. perftools, etc.) which do not require start/stop","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/profiler.rs","byte_start":254676,"byte_end":254753,"line_start":22,"line_end":22,"column_start":1,"column_end":78}},{"value":"/ hooks. This implementation does nothing and is used as the default.","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/profiler.rs","byte_start":254754,"byte_end":254825,"line_start":23,"line_end":23,"column_start":1,"column_end":72}}]},{"kind":"Trait","id":{"krate":0,"index":1239},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/tuple.rs","byte_start":301988,"byte_end":301993,"line_start":6,"line_end":6,"column_start":11,"column_end":16},"name":"Tuple","qualname":"::stats::tuple::Tuple","value":"Tuple: Sized","parent":null,"children":[{"krate":0,"index":1240},{"krate":0,"index":1241}],"decl_id":null,"docs":" Any tuple: `(A, B, ..)`\n","sig":null,"attributes":[{"value":"/ Any tuple: `(A, B, ..)`","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/tuple.rs","byte_start":301950,"byte_end":301977,"line_start":5,"line_end":5,"column_start":1,"column_end":28}}]},{"kind":"Type","id":{"krate":0,"index":1240},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/tuple.rs","byte_start":302072,"byte_end":302085,"line_start":8,"line_end":8,"column_start":10,"column_end":23},"name":"Distributions","qualname":"::stats::tuple::Tuple::Distributions","value":"type Distributions: TupledDistributions<Item = Self>;","parent":{"krate":0,"index":1239},"children":[],"decl_id":null,"docs":" A tuple of distributions associated with this tuple\n","sig":null,"attributes":[{"value":"/ A tuple of distributions associated with this tuple","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/tuple.rs","byte_start":302007,"byte_end":302062,"line_start":7,"line_end":7,"column_start":5,"column_end":60}}]},{"kind":"Type","id":{"krate":0,"index":1241},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/tuple.rs","byte_start":302185,"byte_end":302192,"line_start":11,"line_end":11,"column_start":10,"column_end":17},"name":"Builder","qualname":"::stats::tuple::Tuple::Builder","value":"type Builder: TupledDistributionsBuilder<Item = Self>;","parent":{"krate":0,"index":1239},"children":[],"decl_id":null,"docs":" A tuple of vectors associated with this tuple\n","sig":null,"attributes":[{"value":"/ A tuple of vectors associated with this tuple","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/tuple.rs","byte_start":302126,"byte_end":302175,"line_start":10,"line_end":10,"column_start":5,"column_end":54}}]},{"kind":"Trait","id":{"krate":0,"index":1242},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/tuple.rs","byte_start":302319,"byte_end":302338,"line_start":15,"line_end":15,"column_start":11,"column_end":30},"name":"TupledDistributions","qualname":"::stats::tuple::TupledDistributions","value":"TupledDistributions: Sized","parent":null,"children":[{"krate":0,"index":1243}],"decl_id":null,"docs":" A tuple of distributions: `(Distribution<A>, Distribution<B>, ..)`\n","sig":null,"attributes":[{"value":"/ A tuple of distributions: `(Distribution<A>, Distribution<B>, ..)`","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/tuple.rs","byte_start":302238,"byte_end":302308,"line_start":14,"line_end":14,"column_start":1,"column_end":71}}]},{"kind":"Type","id":{"krate":0,"index":1243},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/tuple.rs","byte_start":302431,"byte_end":302435,"line_start":17,"line_end":17,"column_start":10,"column_end":14},"name":"Item","qualname":"::stats::tuple::TupledDistributions::Item","value":"type Item: Tuple<Distributions = Self>;","parent":{"krate":0,"index":1242},"children":[],"decl_id":null,"docs":" A tuple that can be pushed/inserted into the tupled distributions\n","sig":null,"attributes":[{"value":"/ A tuple that can be pushed/inserted into the tupled distributions","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/tuple.rs","byte_start":302352,"byte_end":302421,"line_start":16,"line_end":16,"column_start":5,"column_end":74}}]},{"kind":"Trait","id":{"krate":0,"index":1244},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/tuple.rs","byte_start":302528,"byte_end":302554,"line_start":21,"line_end":21,"column_start":11,"column_end":37},"name":"TupledDistributionsBuilder","qualname":"::stats::tuple::TupledDistributionsBuilder","value":"TupledDistributionsBuilder: Sized","parent":null,"children":[{"krate":0,"index":1245},{"krate":0,"index":1246},{"krate":0,"index":1247},{"krate":0,"index":1248},{"krate":0,"index":1249}],"decl_id":null,"docs":" A tuple of vecs used to build distributions.\n","sig":null,"attributes":[{"value":"/ A tuple of vecs used to build distributions.","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/tuple.rs","byte_start":302469,"byte_end":302517,"line_start":20,"line_end":20,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1245},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/tuple.rs","byte_start":302647,"byte_end":302651,"line_start":23,"line_end":23,"column_start":10,"column_end":14},"name":"Item","qualname":"::stats::tuple::TupledDistributionsBuilder::Item","value":"type Item: Tuple<Builder = Self>;","parent":{"krate":0,"index":1244},"children":[],"decl_id":null,"docs":" A tuple that can be pushed/inserted into the tupled distributions\n","sig":null,"attributes":[{"value":"/ A tuple that can be pushed/inserted into the tupled distributions","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/tuple.rs","byte_start":302568,"byte_end":302637,"line_start":22,"line_end":22,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1246},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/tuple.rs","byte_start":302720,"byte_end":302723,"line_start":26,"line_end":26,"column_start":8,"column_end":11},"name":"new","qualname":"::stats::tuple::TupledDistributionsBuilder::new","value":"pub fn new(usize) -> Self","parent":{"krate":0,"index":1244},"children":[],"decl_id":null,"docs":" Creates a new tuple of vecs\n","sig":null,"attributes":[{"value":"/ Creates a new tuple of vecs","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/tuple.rs","byte_start":302681,"byte_end":302712,"line_start":25,"line_end":25,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":1247},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/tuple.rs","byte_start":302801,"byte_end":302805,"line_start":29,"line_end":29,"column_start":8,"column_end":12},"name":"push","qualname":"::stats::tuple::TupledDistributionsBuilder::push","value":"pub fn push(&mut Self, Self::Item)","parent":{"krate":0,"index":1244},"children":[],"decl_id":null,"docs":" Push one element into each of the vecs\n","sig":null,"attributes":[{"value":"/ Push one element into each of the vecs","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/tuple.rs","byte_start":302751,"byte_end":302793,"line_start":28,"line_end":28,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1248},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/tuple.rs","byte_start":302933,"byte_end":302939,"line_start":32,"line_end":32,"column_start":8,"column_end":14},"name":"extend","qualname":"::stats::tuple::TupledDistributionsBuilder::extend","value":"pub fn extend(&mut Self, &mut Self)","parent":{"krate":0,"index":1244},"children":[],"decl_id":null,"docs":" Append one tuple of vecs to this one, leaving the vecs in the other tuple empty\n","sig":null,"attributes":[{"value":"/ Append one tuple of vecs to this one, leaving the vecs in the other tuple empty","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/tuple.rs","byte_start":302842,"byte_end":302925,"line_start":31,"line_end":31,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":1249},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/tuple.rs","byte_start":303045,"byte_end":303053,"line_start":35,"line_end":35,"column_start":8,"column_end":16},"name":"complete","qualname":"::stats::tuple::TupledDistributionsBuilder::complete","value":"pub fn complete(Self) -> <Self::Item as Tuple>::Distributions","parent":{"krate":0,"index":1244},"children":[],"decl_id":null,"docs":" Convert the tuple of vectors into a tuple of distributions\n","sig":null,"attributes":[{"value":"/ Convert the tuple of vectors into a tuple of distributions","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/tuple.rs","byte_start":302975,"byte_end":303037,"line_start":34,"line_end":34,"column_start":5,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":1331},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/univariate/percentiles.rs","byte_start":316444,"byte_end":316455,"line_start":5,"line_end":5,"column_start":12,"column_end":23},"name":"Percentiles","qualname":"::stats::univariate::percentiles::Percentiles","value":"","parent":null,"children":[],"decl_id":null,"docs":" A \"view\" into the percentiles of a sample\n","sig":null,"attributes":[{"value":"/ A \"view\" into the percentiles of a sample","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/univariate/percentiles.rs","byte_start":316387,"byte_end":316432,"line_start":4,"line_end":4,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1338},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/univariate/percentiles.rs","byte_start":317574,"byte_end":317576,"line_start":45,"line_end":45,"column_start":12,"column_end":14},"name":"at","qualname":"<Percentiles<A>>::at","value":"pub fn at(&Self, A) -> A","parent":null,"children":[],"decl_id":null,"docs":" Returns the percentile at `p`%","sig":null,"attributes":[{"value":"/ Returns the percentile at `p`%","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/univariate/percentiles.rs","byte_start":317434,"byte_end":317468,"line_start":40,"line_end":40,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/univariate/percentiles.rs","byte_start":317473,"byte_end":317476,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/univariate/percentiles.rs","byte_start":317481,"byte_end":317493,"line_start":42,"line_end":42,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/univariate/percentiles.rs","byte_start":317498,"byte_end":317501,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ Panics if `p` is outside the closed `[0, 100]` range","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/univariate/percentiles.rs","byte_start":317506,"byte_end":317562,"line_start":44,"line_end":44,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":1339},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/univariate/percentiles.rs","byte_start":317833,"byte_end":317836,"line_start":56,"line_end":56,"column_start":12,"column_end":15},"name":"iqr","qualname":"<Percentiles<A>>::iqr","value":"pub fn iqr(&Self) -> A","parent":null,"children":[],"decl_id":null,"docs":" Returns the interquartile range\n","sig":null,"attributes":[{"value":"/ Returns the interquartile range","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/univariate/percentiles.rs","byte_start":317786,"byte_end":317821,"line_start":55,"line_end":55,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1340},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/univariate/percentiles.rs","byte_start":318059,"byte_end":318065,"line_start":66,"line_end":66,"column_start":12,"column_end":18},"name":"median","qualname":"<Percentiles<A>>::median","value":"pub fn median(&Self) -> A","parent":null,"children":[],"decl_id":null,"docs":" Returns the 50th percentile\n","sig":null,"attributes":[{"value":"/ Returns the 50th percentile","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/univariate/percentiles.rs","byte_start":318016,"byte_end":318047,"line_start":65,"line_end":65,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":1341},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/univariate/percentiles.rs","byte_start":318200,"byte_end":318209,"line_start":71,"line_end":71,"column_start":12,"column_end":21},"name":"quartiles","qualname":"<Percentiles<A>>::quartiles","value":"pub fn quartiles(&Self) -> (A, A, A)","parent":null,"children":[],"decl_id":null,"docs":" Returns the 25th, 50th and 75th percentiles\n","sig":null,"attributes":[{"value":"/ Returns the 25th, 50th and 75th percentiles","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/univariate/percentiles.rs","byte_start":318141,"byte_end":318188,"line_start":70,"line_end":70,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":1371},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/univariate/sample.rs","byte_start":322085,"byte_end":322091,"line_start":15,"line_end":15,"column_start":12,"column_end":18},"name":"Sample","qualname":"::stats::univariate::sample::Sample","value":"","parent":null,"children":[],"decl_id":null,"docs":" A collection of data points drawn from a population","sig":null,"attributes":[{"value":"/ A collection of data points drawn from a population","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/univariate/sample.rs","byte_start":321909,"byte_end":321964,"line_start":9,"line_end":9,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/univariate/sample.rs","byte_start":321965,"byte_end":321968,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ Invariants:","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/univariate/sample.rs","byte_start":321969,"byte_end":321984,"line_start":11,"line_end":11,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/univariate/sample.rs","byte_start":321985,"byte_end":321988,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ - The sample contains at least 2 data points","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/univariate/sample.rs","byte_start":321989,"byte_end":322037,"line_start":13,"line_end":13,"column_start":1,"column_end":49}},{"value":"/ - The sample contains no `NaN`s","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/univariate/sample.rs","byte_start":322038,"byte_end":322073,"line_start":14,"line_end":14,"column_start":1,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":1377},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/univariate/sample.rs","byte_start":322477,"byte_end":322480,"line_start":28,"line_end":28,"column_start":12,"column_end":15},"name":"new","qualname":"<Sample<A>>::new","value":"pub fn new(&[A]) -> &Sample<A>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new sample from an existing slice","sig":null,"attributes":[{"value":"/ Creates a new sample from an existing slice","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/univariate/sample.rs","byte_start":322225,"byte_end":322272,"line_start":22,"line_end":22,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/univariate/sample.rs","byte_start":322277,"byte_end":322280,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/univariate/sample.rs","byte_start":322285,"byte_end":322297,"line_start":24,"line_end":24,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/univariate/sample.rs","byte_start":322302,"byte_end":322305,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ Panics if `slice` contains any `NaN` or if `slice` has less than two elements","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/univariate/sample.rs","byte_start":322310,"byte_end":322391,"line_start":26,"line_end":26,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":1378},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/univariate/sample.rs","byte_start":322727,"byte_end":322730,"line_start":37,"line_end":37,"column_start":12,"column_end":15},"name":"max","qualname":"<Sample<A>>::max","value":"pub fn max(&Self) -> A","parent":null,"children":[],"decl_id":null,"docs":" Returns the biggest element in the sample","sig":null,"attributes":[{"value":"/ Returns the biggest element in the sample","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/univariate/sample.rs","byte_start":322634,"byte_end":322679,"line_start":34,"line_end":34,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/univariate/sample.rs","byte_start":322684,"byte_end":322687,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ - Time: `O(length)`","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/univariate/sample.rs","byte_start":322692,"byte_end":322715,"line_start":36,"line_end":36,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1380},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/univariate/sample.rs","byte_start":323124,"byte_end":323128,"line_start":50,"line_end":50,"column_start":12,"column_end":16},"name":"mean","qualname":"<Sample<A>>::mean","value":"pub fn mean(&Self) -> A","parent":null,"children":[],"decl_id":null,"docs":" Returns the arithmetic average of the sample","sig":null,"attributes":[{"value":"/ Returns the arithmetic average of the sample","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/univariate/sample.rs","byte_start":323028,"byte_end":323076,"line_start":47,"line_end":47,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/univariate/sample.rs","byte_start":323081,"byte_end":323084,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ - Time: `O(length)`","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/univariate/sample.rs","byte_start":323089,"byte_end":323112,"line_start":49,"line_end":49,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1381},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/univariate/sample.rs","byte_start":323427,"byte_end":323441,"line_start":62,"line_end":62,"column_start":12,"column_end":26},"name":"median_abs_dev","qualname":"<Sample<A>>::median_abs_dev","value":"pub fn median_abs_dev(&Self, Option<A>) -> A where usize: cast::From<A, Output\n= Result<usize, cast::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the median absolute deviation","sig":null,"attributes":[{"value":"/ Returns the median absolute deviation","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/univariate/sample.rs","byte_start":323215,"byte_end":323256,"line_start":56,"line_end":56,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/univariate/sample.rs","byte_start":323261,"byte_end":323264,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ The `median` can be optionally passed along to speed up (2X) the computation","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/univariate/sample.rs","byte_start":323269,"byte_end":323349,"line_start":58,"line_end":58,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/univariate/sample.rs","byte_start":323354,"byte_end":323357,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ - Time: `O(length)`","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/univariate/sample.rs","byte_start":323362,"byte_end":323385,"line_start":60,"line_end":60,"column_start":5,"column_end":28}},{"value":"/ - Memory: `O(length)`","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/univariate/sample.rs","byte_start":323390,"byte_end":323415,"line_start":61,"line_end":61,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1384},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/univariate/sample.rs","byte_start":324183,"byte_end":324201,"line_start":81,"line_end":81,"column_start":12,"column_end":30},"name":"median_abs_dev_pct","qualname":"<Sample<A>>::median_abs_dev_pct","value":"pub fn median_abs_dev_pct(&Self) -> A where usize: cast::From<A, Output =\nResult<usize, cast::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the median absolute deviation as a percentage of the median","sig":null,"attributes":[{"value":"/ Returns the median absolute deviation as a percentage of the median","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/univariate/sample.rs","byte_start":324034,"byte_end":324105,"line_start":77,"line_end":77,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/univariate/sample.rs","byte_start":324110,"byte_end":324113,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ - Time: `O(length)`","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/univariate/sample.rs","byte_start":324118,"byte_end":324141,"line_start":79,"line_end":79,"column_start":5,"column_end":28}},{"value":"/ - Memory: `O(length)`","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/univariate/sample.rs","byte_start":324146,"byte_end":324171,"line_start":80,"line_end":80,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1385},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/univariate/sample.rs","byte_start":324569,"byte_end":324572,"line_start":95,"line_end":95,"column_start":12,"column_end":15},"name":"min","qualname":"<Sample<A>>::min","value":"pub fn min(&Self) -> A","parent":null,"children":[],"decl_id":null,"docs":" Returns the smallest element in the sample","sig":null,"attributes":[{"value":"/ Returns the smallest element in the sample","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/univariate/sample.rs","byte_start":324475,"byte_end":324521,"line_start":92,"line_end":92,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/univariate/sample.rs","byte_start":324526,"byte_end":324529,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ - Time: `O(length)`","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/univariate/sample.rs","byte_start":324534,"byte_end":324557,"line_start":94,"line_end":94,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1387},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/univariate/sample.rs","byte_start":325116,"byte_end":325127,"line_start":111,"line_end":111,"column_start":12,"column_end":23},"name":"percentiles","qualname":"<Sample<A>>::percentiles","value":"pub fn percentiles(&Self) -> Percentiles<A> where usize: cast::From<A, Output\n= Result<usize, cast::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Returns a \"view\" into the percentiles of the sample","sig":null,"attributes":[{"value":"/ Returns a \"view\" into the percentiles of the sample","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/univariate/sample.rs","byte_start":324870,"byte_end":324925,"line_start":105,"line_end":105,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/univariate/sample.rs","byte_start":324930,"byte_end":324933,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ This \"view\" makes consecutive computations of percentiles much faster (`O(1)`)","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/univariate/sample.rs","byte_start":324938,"byte_end":325020,"line_start":107,"line_end":107,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/univariate/sample.rs","byte_start":325025,"byte_end":325028,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ - Time: `O(N log N) where N = length`","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/univariate/sample.rs","byte_start":325033,"byte_end":325074,"line_start":109,"line_end":109,"column_start":5,"column_end":46}},{"value":"/ - Memory: `O(length)`","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/univariate/sample.rs","byte_start":325079,"byte_end":325104,"line_start":110,"line_end":110,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1391},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/univariate/sample.rs","byte_start":326020,"byte_end":326027,"line_start":141,"line_end":141,"column_start":12,"column_end":19},"name":"std_dev","qualname":"<Sample<A>>::std_dev","value":"pub fn std_dev(&Self, Option<A>) -> A","parent":null,"children":[],"decl_id":null,"docs":" Returns the standard deviation of the sample","sig":null,"attributes":[{"value":"/ Returns the standard deviation of the sample","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/univariate/sample.rs","byte_start":325833,"byte_end":325881,"line_start":136,"line_end":136,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/univariate/sample.rs","byte_start":325886,"byte_end":325889,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ The `mean` can be optionally passed along to speed up (2X) the computation","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/univariate/sample.rs","byte_start":325894,"byte_end":325972,"line_start":138,"line_end":138,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/univariate/sample.rs","byte_start":325977,"byte_end":325980,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ - Time: `O(length)`","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/univariate/sample.rs","byte_start":325985,"byte_end":326008,"line_start":140,"line_end":140,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1392},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/univariate/sample.rs","byte_start":326210,"byte_end":326221,"line_start":148,"line_end":148,"column_start":12,"column_end":23},"name":"std_dev_pct","qualname":"<Sample<A>>::std_dev_pct","value":"pub fn std_dev_pct(&Self) -> A","parent":null,"children":[],"decl_id":null,"docs":" Returns the standard deviation as a percentage of the mean","sig":null,"attributes":[{"value":"/ Returns the standard deviation as a percentage of the mean","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/univariate/sample.rs","byte_start":326100,"byte_end":326162,"line_start":145,"line_end":145,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/univariate/sample.rs","byte_start":326167,"byte_end":326170,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ - Time: `O(length)`","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/univariate/sample.rs","byte_start":326175,"byte_end":326198,"line_start":147,"line_end":147,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1393},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/univariate/sample.rs","byte_start":326494,"byte_end":326497,"line_start":159,"line_end":159,"column_start":12,"column_end":15},"name":"sum","qualname":"<Sample<A>>::sum","value":"pub fn sum(&Self) -> A","parent":null,"children":[],"decl_id":null,"docs":" Returns the sum of all the elements of the sample","sig":null,"attributes":[{"value":"/ Returns the sum of all the elements of the sample","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/univariate/sample.rs","byte_start":326393,"byte_end":326446,"line_start":156,"line_end":156,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/univariate/sample.rs","byte_start":326451,"byte_end":326454,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ - Time: `O(length)`","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/univariate/sample.rs","byte_start":326459,"byte_end":326482,"line_start":158,"line_end":158,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1394},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/univariate/sample.rs","byte_start":326652,"byte_end":326653,"line_start":166,"line_end":166,"column_start":12,"column_end":13},"name":"t","qualname":"<Sample<A>>::t","value":"pub fn t(&Self, &Sample<A>) -> A","parent":null,"children":[],"decl_id":null,"docs":" Returns the t score between these two samples","sig":null,"attributes":[{"value":"/ Returns the t score between these two samples","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/univariate/sample.rs","byte_start":326555,"byte_end":326604,"line_start":163,"line_end":163,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/univariate/sample.rs","byte_start":326609,"byte_end":326612,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ - Time: `O(length)`","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/univariate/sample.rs","byte_start":326617,"byte_end":326640,"line_start":165,"line_end":165,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1395},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/univariate/sample.rs","byte_start":327192,"byte_end":327195,"line_start":182,"line_end":182,"column_start":12,"column_end":15},"name":"var","qualname":"<Sample<A>>::var","value":"pub fn var(&Self, Option<A>) -> A","parent":null,"children":[],"decl_id":null,"docs":" Returns the variance of the sample","sig":null,"attributes":[{"value":"/ Returns the variance of the sample","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/univariate/sample.rs","byte_start":327015,"byte_end":327053,"line_start":177,"line_end":177,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/univariate/sample.rs","byte_start":327058,"byte_end":327061,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ The `mean` can be optionally passed along to speed up (2X) the computation","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/univariate/sample.rs","byte_start":327066,"byte_end":327144,"line_start":179,"line_end":179,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/univariate/sample.rs","byte_start":327149,"byte_end":327152,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ - Time: `O(length)`","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/univariate/sample.rs","byte_start":327157,"byte_end":327180,"line_start":181,"line_end":181,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1399},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/univariate/sample.rs","byte_start":327781,"byte_end":327790,"line_start":202,"line_end":202,"column_start":12,"column_end":21},"name":"bootstrap","qualname":"<Sample<A>>::bootstrap","value":"pub fn bootstrap<T, S>(&Self, usize, S) -> T::Distributions where\nS: Fn(&Sample<A>) -> T + Sync, T: Tuple + Send, T::Distributions: Send,\nT::Builder: Send","parent":null,"children":[],"decl_id":null,"docs":" Returns the bootstrap distributions of the parameters estimated by the 1-sample statistic","sig":null,"attributes":[{"value":"/ Returns the bootstrap distributions of the parameters estimated by the 1-sample statistic","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/univariate/sample.rs","byte_start":327577,"byte_end":327670,"line_start":197,"line_end":197,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/univariate/sample.rs","byte_start":327675,"byte_end":327678,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ - Multi-threaded","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/univariate/sample.rs","byte_start":327683,"byte_end":327703,"line_start":199,"line_end":199,"column_start":5,"column_end":25}},{"value":"/ - Time: `O(nresamples)`","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/univariate/sample.rs","byte_start":327708,"byte_end":327735,"line_start":200,"line_end":200,"column_start":5,"column_end":32}},{"value":"/ - Memory: `O(nresamples)`","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/univariate/sample.rs","byte_start":327740,"byte_end":327769,"line_start":201,"line_end":201,"column_start":5,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":2238},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/univariate/outliers/tukey.rs","byte_start":338618,"byte_end":338631,"line_start":58,"line_end":58,"column_start":12,"column_end":25},"name":"LabeledSample","qualname":"::stats::univariate::outliers::tukey::LabeledSample","value":"LabeledSample {  }","parent":null,"children":[{"krate":0,"index":2241},{"krate":0,"index":2242}],"decl_id":null,"docs":" A classified/labeled sample.","sig":null,"attributes":[{"value":"/ A classified/labeled sample.","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/univariate/outliers/tukey.rs","byte_start":338234,"byte_end":338266,"line_start":49,"line_end":49,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/univariate/outliers/tukey.rs","byte_start":338267,"byte_end":338270,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ The labeled data can be accessed using the indexing operator. The order of the data points is","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/univariate/outliers/tukey.rs","byte_start":338271,"byte_end":338368,"line_start":51,"line_end":51,"column_start":1,"column_end":98}},{"value":"/ retained.","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/univariate/outliers/tukey.rs","byte_start":338369,"byte_end":338382,"line_start":52,"line_end":52,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/univariate/outliers/tukey.rs","byte_start":338383,"byte_end":338386,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ NOTE: Due to limitations in the indexing traits, only the label is returned. Once the","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/univariate/outliers/tukey.rs","byte_start":338387,"byte_end":338476,"line_start":54,"line_end":54,"column_start":1,"column_end":90}},{"value":"/ `IndexGet` trait lands in stdlib, the indexing operation will return a `(data_point, label)`","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/univariate/outliers/tukey.rs","byte_start":338477,"byte_end":338573,"line_start":55,"line_end":55,"column_start":1,"column_end":97}},{"value":"/ pair.","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/univariate/outliers/tukey.rs","byte_start":338574,"byte_end":338583,"line_start":56,"line_end":56,"column_start":1,"column_end":10}}]},{"kind":"Method","id":{"krate":0,"index":1480},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/univariate/outliers/tukey.rs","byte_start":338943,"byte_end":338948,"line_start":74,"line_end":74,"column_start":12,"column_end":17},"name":"count","qualname":"<LabeledSample>::count","value":"pub fn count(&Self) -> (usize, usize, usize, usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of data points per label","sig":null,"attributes":[{"value":"/ Returns the number of data points per label","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/univariate/outliers/tukey.rs","byte_start":338776,"byte_end":338823,"line_start":70,"line_end":70,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/univariate/outliers/tukey.rs","byte_start":338828,"byte_end":338831,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ - Time: `O(length)`","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/univariate/outliers/tukey.rs","byte_start":338836,"byte_end":338859,"line_start":72,"line_end":72,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1481},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/univariate/outliers/tukey.rs","byte_start":339664,"byte_end":339670,"line_start":101,"line_end":101,"column_start":12,"column_end":18},"name":"fences","qualname":"<LabeledSample>::fences","value":"pub fn fences(&Self) -> (A, A, A, A)","parent":null,"children":[],"decl_id":null,"docs":" Returns the fences used to classify the outliers\n","sig":null,"attributes":[{"value":"/ Returns the fences used to classify the outliers","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/univariate/outliers/tukey.rs","byte_start":339600,"byte_end":339652,"line_start":100,"line_end":100,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1482},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/univariate/outliers/tukey.rs","byte_start":339784,"byte_end":339788,"line_start":106,"line_end":106,"column_start":12,"column_end":16},"name":"iter","qualname":"<LabeledSample>::iter","value":"pub fn iter(&Self) -> Iter","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the labeled data\n","sig":null,"attributes":[{"value":"/ Returns an iterator over the labeled data","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/univariate/outliers/tukey.rs","byte_start":339727,"byte_end":339772,"line_start":105,"line_end":105,"column_start":5,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":1505},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/univariate/outliers/tukey.rs","byte_start":341167,"byte_end":341171,"line_start":170,"line_end":170,"column_start":12,"column_end":16},"name":"Iter","qualname":"::stats::univariate::outliers::tukey::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":1508},{"krate":0,"index":1509}],"decl_id":null,"docs":" Iterator over the labeled data\n","sig":null,"attributes":[{"value":"/ Iterator over the labeled data","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/univariate/outliers/tukey.rs","byte_start":341121,"byte_end":341155,"line_start":169,"line_end":169,"column_start":1,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1518},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/univariate/outliers/tukey.rs","byte_start":342103,"byte_end":342111,"line_start":213,"line_end":213,"column_start":5,"column_end":13},"name":"HighMild","qualname":"::stats::univariate::outliers::tukey::Label::HighMild","value":"Label::HighMild","parent":{"krate":0,"index":1517},"children":[],"decl_id":null,"docs":" A \"mild\" outlier in the \"high\" spectrum\n","sig":null,"attributes":[{"value":"/ A \"mild\" outlier in the \"high\" spectrum","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/univariate/outliers/tukey.rs","byte_start":342055,"byte_end":342098,"line_start":212,"line_end":212,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1520},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/univariate/outliers/tukey.rs","byte_start":342167,"byte_end":342177,"line_start":215,"line_end":215,"column_start":5,"column_end":15},"name":"HighSevere","qualname":"::stats::univariate::outliers::tukey::Label::HighSevere","value":"Label::HighSevere","parent":{"krate":0,"index":1517},"children":[],"decl_id":null,"docs":" A \"severe\" outlier in the \"high\" spectrum\n","sig":null,"attributes":[{"value":"/ A \"severe\" outlier in the \"high\" spectrum","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/univariate/outliers/tukey.rs","byte_start":342117,"byte_end":342162,"line_start":214,"line_end":214,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1522},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/univariate/outliers/tukey.rs","byte_start":342230,"byte_end":342237,"line_start":217,"line_end":217,"column_start":5,"column_end":12},"name":"LowMild","qualname":"::stats::univariate::outliers::tukey::Label::LowMild","value":"Label::LowMild","parent":{"krate":0,"index":1517},"children":[],"decl_id":null,"docs":" A \"mild\" outlier in the \"low\" spectrum\n","sig":null,"attributes":[{"value":"/ A \"mild\" outlier in the \"low\" spectrum","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/univariate/outliers/tukey.rs","byte_start":342183,"byte_end":342225,"line_start":216,"line_end":216,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1524},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/univariate/outliers/tukey.rs","byte_start":342292,"byte_end":342301,"line_start":219,"line_end":219,"column_start":5,"column_end":14},"name":"LowSevere","qualname":"::stats::univariate::outliers::tukey::Label::LowSevere","value":"Label::LowSevere","parent":{"krate":0,"index":1517},"children":[],"decl_id":null,"docs":" A \"severe\" outlier in the \"low\" spectrum\n","sig":null,"attributes":[{"value":"/ A \"severe\" outlier in the \"low\" spectrum","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/univariate/outliers/tukey.rs","byte_start":342243,"byte_end":342287,"line_start":218,"line_end":218,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1526},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/univariate/outliers/tukey.rs","byte_start":342335,"byte_end":342347,"line_start":221,"line_end":221,"column_start":5,"column_end":17},"name":"NotAnOutlier","qualname":"::stats::univariate::outliers::tukey::Label::NotAnOutlier","value":"Label::NotAnOutlier","parent":{"krate":0,"index":1517},"children":[],"decl_id":null,"docs":" A normal data point\n","sig":null,"attributes":[{"value":"/ A normal data point","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/univariate/outliers/tukey.rs","byte_start":342307,"byte_end":342330,"line_start":220,"line_end":220,"column_start":5,"column_end":28}}]},{"kind":"Enum","id":{"krate":0,"index":1517},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/univariate/outliers/tukey.rs","byte_start":342043,"byte_end":342048,"line_start":211,"line_end":211,"column_start":10,"column_end":15},"name":"Label","qualname":"::stats::univariate::outliers::tukey::Label","value":"pub enum Label {\n\n    /// A \"mild\" outlier in the \"high\" spectrum\n    HighMild,\n\n    /// A \"severe\" outlier in the \"high\" spectrum\n    HighSevere,\n\n    /// A \"mild\" outlier in the \"low\" spectrum\n    LowMild,\n\n    /// A \"severe\" outlier in the \"low\" spectrum\n    LowSevere,\n\n    /// A normal data point\n    NotAnOutlier,\n}","parent":null,"children":[{"krate":0,"index":1518},{"krate":0,"index":1520},{"krate":0,"index":1522},{"krate":0,"index":1524},{"krate":0,"index":1526}],"decl_id":null,"docs":" Labels used to classify outliers\n","sig":null,"attributes":[{"value":"/ Labels used to classify outliers","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/univariate/outliers/tukey.rs","byte_start":341997,"byte_end":342033,"line_start":210,"line_end":210,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":1529},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/univariate/outliers/tukey.rs","byte_start":342439,"byte_end":342446,"line_start":226,"line_end":226,"column_start":12,"column_end":19},"name":"is_high","qualname":"<Label>::is_high","value":"pub fn is_high(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if the data point has an \"unusually\" high value\n","sig":null,"attributes":[{"value":"/ Checks if the data point has an \"unusually\" high value","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/univariate/outliers/tukey.rs","byte_start":342369,"byte_end":342427,"line_start":225,"line_end":225,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":1530},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/univariate/outliers/tukey.rs","byte_start":342645,"byte_end":342652,"line_start":234,"line_end":234,"column_start":12,"column_end":19},"name":"is_mild","qualname":"<Label>::is_mild","value":"pub fn is_mild(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if the data point is labeled as a \"mild\" outlier\n","sig":null,"attributes":[{"value":"/ Checks if the data point is labeled as a \"mild\" outlier","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/univariate/outliers/tukey.rs","byte_start":342574,"byte_end":342633,"line_start":233,"line_end":233,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1531},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/univariate/outliers/tukey.rs","byte_start":342846,"byte_end":342852,"line_start":242,"line_end":242,"column_start":12,"column_end":18},"name":"is_low","qualname":"<Label>::is_low","value":"pub fn is_low(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if the data point has an \"unusually\" low value\n","sig":null,"attributes":[{"value":"/ Checks if the data point has an \"unusually\" low value","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/univariate/outliers/tukey.rs","byte_start":342777,"byte_end":342834,"line_start":241,"line_end":241,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":1532},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/univariate/outliers/tukey.rs","byte_start":343043,"byte_end":343053,"line_start":250,"line_end":250,"column_start":12,"column_end":22},"name":"is_outlier","qualname":"<Label>::is_outlier","value":"pub fn is_outlier(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if the data point is labeled as an outlier\n","sig":null,"attributes":[{"value":"/ Checks if the data point is labeled as an outlier","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/univariate/outliers/tukey.rs","byte_start":342978,"byte_end":343031,"line_start":249,"line_end":249,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1533},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/univariate/outliers/tukey.rs","byte_start":343245,"byte_end":343254,"line_start":258,"line_end":258,"column_start":12,"column_end":21},"name":"is_severe","qualname":"<Label>::is_severe","value":"pub fn is_severe(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if the data point is labeled as a \"severe\" outlier\n","sig":null,"attributes":[{"value":"/ Checks if the data point is labeled as a \"severe\" outlier","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/univariate/outliers/tukey.rs","byte_start":343172,"byte_end":343233,"line_start":257,"line_end":257,"column_start":5,"column_end":66}}]},{"kind":"Trait","id":{"krate":0,"index":1557},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/float.rs","byte_start":344211,"byte_end":344216,"line_start":9,"line_end":9,"column_start":11,"column_end":16},"name":"Float","qualname":"::stats::float::Float","value":"Float: float::Float + From<usize, Output = Self> + From<f32, Output = Self> + Sync +\nSend","parent":null,"children":[],"decl_id":null,"docs":" This is an extension of `num_traits::float::Float` that adds safe\n casting and Sync + Send. Once `num_traits` has these features this\n can be removed.\n","sig":null,"attributes":[{"value":"/ This is an extension of `num_traits::float::Float` that adds safe","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/float.rs","byte_start":344040,"byte_end":344109,"line_start":6,"line_end":6,"column_start":1,"column_end":70}},{"value":"/ casting and Sync + Send. Once `num_traits` has these features this","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/float.rs","byte_start":344110,"byte_end":344180,"line_start":7,"line_end":7,"column_start":1,"column_end":71}},{"value":"/ can be removed.","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/float.rs","byte_start":344181,"byte_end":344200,"line_start":8,"line_end":8,"column_start":1,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":1573},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/mod.rs","byte_start":290323,"byte_end":290335,"line_start":25,"line_end":25,"column_start":12,"column_end":24},"name":"Distribution","qualname":"::stats::Distribution","value":"","parent":null,"children":[],"decl_id":null,"docs":" The bootstrap distribution of some parameter\n","sig":null,"attributes":[{"value":"/ The bootstrap distribution of some parameter","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/mod.rs","byte_start":290263,"byte_end":290311,"line_start":24,"line_end":24,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1579},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/mod.rs","byte_start":290460,"byte_end":290464,"line_start":32,"line_end":32,"column_start":12,"column_end":16},"name":"from","qualname":"<Distribution<A>>::from","value":"pub fn from(Box<[A]>) -> Distribution<A>","parent":null,"children":[],"decl_id":null,"docs":" Create a distribution from the given values\n","sig":null,"attributes":[{"value":"/ Create a distribution from the given values","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/mod.rs","byte_start":290401,"byte_end":290448,"line_start":31,"line_end":31,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1580},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/mod.rs","byte_start":290742,"byte_end":290761,"line_start":41,"line_end":41,"column_start":12,"column_end":31},"name":"confidence_interval","qualname":"<Distribution<A>>::confidence_interval","value":"pub fn confidence_interval(&Self, A) -> (A, A) where usize: cast::From<A,\nOutput = Result<usize, cast::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Computes the confidence interval of the population parameter using percentiles","sig":null,"attributes":[{"value":"/ Computes the confidence interval of the population parameter using percentiles","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/mod.rs","byte_start":290544,"byte_end":290626,"line_start":36,"line_end":36,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/mod.rs","byte_start":290631,"byte_end":290634,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/mod.rs","byte_start":290639,"byte_end":290651,"line_start":38,"line_end":38,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/mod.rs","byte_start":290656,"byte_end":290659,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ Panics if the `confidence_level` is not in the `(0, 1)` range.","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/mod.rs","byte_start":290664,"byte_end":290730,"line_start":40,"line_end":40,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1581},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/mod.rs","byte_start":291424,"byte_end":291431,"line_start":62,"line_end":62,"column_start":12,"column_end":19},"name":"p_value","qualname":"<Distribution<A>>::p_value","value":"pub fn p_value(&Self, A, &Tails) -> A","parent":null,"children":[],"decl_id":null,"docs":" Computes the \"likelihood\" of seeing the value `t` or \"more extreme\" values in the\n distribution.\n","sig":null,"attributes":[{"value":"/ Computes the \"likelihood\" of seeing the value `t` or \"more extreme\" values in the","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/mod.rs","byte_start":291305,"byte_end":291390,"line_start":60,"line_end":60,"column_start":5,"column_end":90}},{"value":"/ distribution.","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/mod.rs","byte_start":291395,"byte_end":291412,"line_start":61,"line_end":61,"column_start":5,"column_end":22}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1589},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/mod.rs","byte_start":292047,"byte_end":292050,"line_start":90,"line_end":90,"column_start":5,"column_end":8},"name":"One","qualname":"::stats::Tails::One","value":"Tails::One","parent":{"krate":0,"index":1588},"children":[],"decl_id":null,"docs":" One tailed test\n","sig":null,"attributes":[{"value":"/ One tailed test","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/mod.rs","byte_start":292023,"byte_end":292042,"line_start":89,"line_end":89,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1591},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/mod.rs","byte_start":292080,"byte_end":292083,"line_start":92,"line_end":92,"column_start":5,"column_end":8},"name":"Two","qualname":"::stats::Tails::Two","value":"Tails::Two","parent":{"krate":0,"index":1588},"children":[],"decl_id":null,"docs":" Two tailed test\n","sig":null,"attributes":[{"value":"/ Two tailed test","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/mod.rs","byte_start":292056,"byte_end":292075,"line_start":91,"line_end":91,"column_start":5,"column_end":24}}]},{"kind":"Enum","id":{"krate":0,"index":1588},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/mod.rs","byte_start":292011,"byte_end":292016,"line_start":88,"line_end":88,"column_start":10,"column_end":15},"name":"Tails","qualname":"::stats::Tails","value":"pub enum Tails {\n\n    /// One tailed test\n    One,\n\n    /// Two tailed test\n    Two,\n}","parent":null,"children":[{"krate":0,"index":1589},{"krate":0,"index":1591}],"decl_id":null,"docs":" Number of tails for significance testing\n","sig":null,"attributes":[{"value":"/ Number of tails for significance testing","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/mod.rs","byte_start":291957,"byte_end":292001,"line_start":87,"line_end":87,"column_start":1,"column_end":45}}]},{"kind":"Function","id":{"krate":0,"index":1648},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":4097,"byte_end":4106,"line_start":140,"line_end":140,"column_start":8,"column_end":17},"name":"black_box","qualname":"::black_box","value":"pub fn black_box<T>(T) -> T","parent":null,"children":[],"decl_id":null,"docs":" A function that is opaque to the optimizer, used to prevent the compiler from\n optimizing away computations in a benchmark.","sig":null,"attributes":[{"value":"/ A function that is opaque to the optimizer, used to prevent the compiler from","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":3783,"byte_end":3864,"line_start":134,"line_end":134,"column_start":1,"column_end":82}},{"value":"/ optimizing away computations in a benchmark.","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":3865,"byte_end":3913,"line_start":135,"line_end":135,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":3914,"byte_end":3917,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ This variant is stable-compatible, but it may cause some performance overhead","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":3918,"byte_end":3999,"line_start":137,"line_end":137,"column_start":1,"column_end":82}},{"value":"/ or fail to prevent code from being eliminated.","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":4000,"byte_end":4050,"line_start":138,"line_end":138,"column_start":1,"column_end":51}},{"value":"cfg(not(feature = \"real_blackbox\"))","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":4051,"byte_end":4089,"line_start":139,"line_end":139,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":1650},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":4456,"byte_end":4459,"line_start":152,"line_end":152,"column_start":12,"column_end":15},"name":"Fun","qualname":"::Fun","value":"Fun {  }","parent":null,"children":[{"krate":0,"index":1653},{"krate":0,"index":1654}],"decl_id":null,"docs":" Representing a function to benchmark together with a name of that function.\n Used together with `bench_functions` to represent one out of multiple functions\n under benchmark.\n","sig":null,"attributes":[{"value":"/ Representing a function to benchmark together with a name of that function.","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":4245,"byte_end":4324,"line_start":148,"line_end":148,"column_start":1,"column_end":80}},{"value":"/ Used together with `bench_functions` to represent one out of multiple functions","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":4325,"byte_end":4408,"line_start":149,"line_end":149,"column_start":1,"column_end":84}},{"value":"/ under benchmark.","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":4409,"byte_end":4429,"line_start":150,"line_end":150,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":1658},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":4710,"byte_end":4713,"line_start":162,"line_end":162,"column_start":12,"column_end":15},"name":"new","qualname":"<Fun<I, M>>::new","value":"pub fn new<F>(&str, F) -> Fun<I, M> where F: FnMut(&mut Bencher<, M>, &I) ->\n() + 'static","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Fun` given a name and a closure\n","sig":null,"attributes":[{"value":"/ Create a new `Fun` given a name and a closure","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":4649,"byte_end":4698,"line_start":161,"line_end":161,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2288},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":7231,"byte_end":7241,"line_start":208,"line_end":208,"column_start":5,"column_end":15},"name":"SmallInput","qualname":"::BatchSize::SmallInput","value":"BatchSize::SmallInput","parent":{"krate":0,"index":2287},"children":[],"decl_id":null,"docs":" `SmallInput` indicates that the input to the benchmark routine (the value returned from\n the setup routine) is small enough that millions of values can be safely held in memory.\n Always prefer `SmallInput` unless the benchmark is using too much memory.","sig":null,"attributes":[{"value":"/ `SmallInput` indicates that the input to the benchmark routine (the value returned from","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":6756,"byte_end":6847,"line_start":202,"line_end":202,"column_start":5,"column_end":96}},{"value":"/ the setup routine) is small enough that millions of values can be safely held in memory.","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":6852,"byte_end":6944,"line_start":203,"line_end":203,"column_start":5,"column_end":97}},{"value":"/ Always prefer `SmallInput` unless the benchmark is using too much memory.","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":6949,"byte_end":7026,"line_start":204,"line_end":204,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":7031,"byte_end":7034,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ In testing, the maximum measurement overhead from benchmarking with `SmallInput` is on the","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":7039,"byte_end":7133,"line_start":206,"line_end":206,"column_start":5,"column_end":99}},{"value":"/ order of 500 picoseconds. This is presented as a rough guide; your results may vary.","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":7138,"byte_end":7226,"line_start":207,"line_end":207,"column_start":5,"column_end":93}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2290},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":7658,"byte_end":7668,"line_start":216,"line_end":216,"column_start":5,"column_end":15},"name":"LargeInput","qualname":"::BatchSize::LargeInput","value":"BatchSize::LargeInput","parent":{"krate":0,"index":2287},"children":[],"decl_id":null,"docs":" `LargeInput` indicates that the input to the benchmark routine or the value returned from\n that routine is large. This will reduce the memory usage but increase the measurement\n overhead.","sig":null,"attributes":[{"value":"/ `LargeInput` indicates that the input to the benchmark routine or the value returned from","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":7248,"byte_end":7341,"line_start":210,"line_end":210,"column_start":5,"column_end":98}},{"value":"/ that routine is large. This will reduce the memory usage but increase the measurement","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":7346,"byte_end":7435,"line_start":211,"line_end":211,"column_start":5,"column_end":94}},{"value":"/ overhead.","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":7440,"byte_end":7453,"line_start":212,"line_end":212,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":7458,"byte_end":7461,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ In testing, the maximum measurement overhead from benchmarking with `LargeInput` is on the","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":7466,"byte_end":7560,"line_start":214,"line_end":214,"column_start":5,"column_end":99}},{"value":"/ order of 750 picoseconds. This is presented as a rough guide; your results may vary.","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":7565,"byte_end":7653,"line_start":215,"line_end":215,"column_start":5,"column_end":93}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2292},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":8234,"byte_end":8246,"line_start":226,"line_end":226,"column_start":5,"column_end":17},"name":"PerIteration","qualname":"::BatchSize::PerIteration","value":"BatchSize::PerIteration","parent":{"krate":0,"index":2287},"children":[],"decl_id":null,"docs":" `PerIteration` indicates that the input to the benchmark routine or the value returned from\n that routine is extremely large or holds some limited resource, such that holding many values\n in memory at once is infeasible. This provides the worst measurement overhead, but the\n lowest memory usage.","sig":null,"attributes":[{"value":"/ `PerIteration` indicates that the input to the benchmark routine or the value returned from","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":7675,"byte_end":7770,"line_start":218,"line_end":218,"column_start":5,"column_end":100}},{"value":"/ that routine is extremely large or holds some limited resource, such that holding many values","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":7775,"byte_end":7872,"line_start":219,"line_end":219,"column_start":5,"column_end":102}},{"value":"/ in memory at once is infeasible. This provides the worst measurement overhead, but the","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":7877,"byte_end":7967,"line_start":220,"line_end":220,"column_start":5,"column_end":95}},{"value":"/ lowest memory usage.","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":7972,"byte_end":7996,"line_start":221,"line_end":221,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":8001,"byte_end":8004,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ In testing, the maximum measurement overhead from benchmarking with `PerIteration` is on the","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":8009,"byte_end":8105,"line_start":223,"line_end":223,"column_start":5,"column_end":101}},{"value":"/ order of 350 nanoseconds or 350,000 picoseconds. This is presented as a rough guide; your","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":8110,"byte_end":8203,"line_start":224,"line_end":224,"column_start":5,"column_end":98}},{"value":"/ results may vary.","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":8208,"byte_end":8229,"line_start":225,"line_end":225,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2294},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":8711,"byte_end":8721,"line_start":233,"line_end":233,"column_start":5,"column_end":15},"name":"NumBatches","qualname":"::BatchSize::NumBatches","value":"BatchSize::NumBatches(u64)","parent":{"krate":0,"index":2287},"children":[],"decl_id":null,"docs":" `NumBatches` will attempt to divide the iterations up into a given number of batches.\n A larger number of batches (and thus smaller batches) will reduce memory usage but increase\n measurement overhead. This allows the user to choose their own tradeoff between memory usage\n and measurement overhead, but care must be taken in tuning the number of batches. Most\n benchmarks should use `SmallInput` or `LargeInput` instead.\n","sig":null,"attributes":[{"value":"/ `NumBatches` will attempt to divide the iterations up into a given number of batches.","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":8253,"byte_end":8342,"line_start":228,"line_end":228,"column_start":5,"column_end":94}},{"value":"/ A larger number of batches (and thus smaller batches) will reduce memory usage but increase","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":8347,"byte_end":8442,"line_start":229,"line_end":229,"column_start":5,"column_end":100}},{"value":"/ measurement overhead. This allows the user to choose their own tradeoff between memory usage","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":8447,"byte_end":8543,"line_start":230,"line_end":230,"column_start":5,"column_end":101}},{"value":"/ and measurement overhead, but care must be taken in tuning the number of batches. Most","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":8548,"byte_end":8638,"line_start":231,"line_end":231,"column_start":5,"column_end":95}},{"value":"/ benchmarks should use `SmallInput` or `LargeInput` instead.","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":8643,"byte_end":8706,"line_start":232,"line_end":232,"column_start":5,"column_end":68}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2297},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":9150,"byte_end":9163,"line_start":240,"line_end":240,"column_start":5,"column_end":18},"name":"NumIterations","qualname":"::BatchSize::NumIterations","value":"BatchSize::NumIterations(u64)","parent":{"krate":0,"index":2287},"children":[],"decl_id":null,"docs":" `NumIterations` fixes the batch size to a constant number, specified by the user. This\n allows the user to choose their own tradeoff between overhead and memory usage, but care must\n be taken in tuning the batch size. In general, the measurement overhead of NumIterations\n will be larger than that of `NumBatches`. Most benchmarks should use `SmallInput` or\n `LargeInput` instead.\n","sig":null,"attributes":[{"value":"/ `NumIterations` fixes the batch size to a constant number, specified by the user. This","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":8733,"byte_end":8823,"line_start":235,"line_end":235,"column_start":5,"column_end":95}},{"value":"/ allows the user to choose their own tradeoff between overhead and memory usage, but care must","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":8828,"byte_end":8925,"line_start":236,"line_end":236,"column_start":5,"column_end":102}},{"value":"/ be taken in tuning the batch size. In general, the measurement overhead of NumIterations","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":8930,"byte_end":9022,"line_start":237,"line_end":237,"column_start":5,"column_end":97}},{"value":"/ will be larger than that of `NumBatches`. Most benchmarks should use `SmallInput` or","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":9027,"byte_end":9115,"line_start":238,"line_end":238,"column_start":5,"column_end":93}},{"value":"/ `LargeInput` instead.","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":9120,"byte_end":9145,"line_start":239,"line_end":239,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2300},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":9194,"byte_end":9209,"line_start":243,"line_end":243,"column_start":5,"column_end":20},"name":"__NonExhaustive","qualname":"::BatchSize::__NonExhaustive","value":"BatchSize::__NonExhaustive","parent":{"krate":0,"index":2287},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2287},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":6740,"byte_end":6749,"line_start":201,"line_end":201,"column_start":10,"column_end":19},"name":"BatchSize","qualname":"::BatchSize","value":"pub enum BatchSize {\n\n    /// `SmallInput` indicates that the input to the benchmark routine (the value returned from\n    /// the setup routine) is small enough that millions of values can be safely held in memory.\n    /// Always prefer `SmallInput` unless the benchmark is using too much memory.\n    ///\n    /// In testing, the maximum measurement overhead from benchmarking with `SmallInput` is on the\n    /// order of 500 picoseconds. This is presented as a rough guide; your results may vary.\n    SmallInput,\n\n    /// `LargeInput` indicates that the input to the benchmark routine or the value returned from\n    /// that routine is large. This will reduce the memory usage but increase the measurement\n    /// overhead.\n    ///\n    /// In testing, the maximum measurement overhead from benchmarking with `LargeInput` is on the\n    /// order of 750 picoseconds. This is presented as a rough guide; your results may vary.\n    LargeInput,\n\n    /// `PerIteration` indicates that the input to the benchmark routine or the value returned from\n    /// that routine is extremely large or holds some limited resource, such that holding many values\n    /// in memory at once is infeasible. This provides the worst measurement overhead, but the\n    /// lowest memory usage.\n    ///\n    /// In testing, the maximum measurement overhead from benchmarking with `PerIteration` is on the\n    /// order of 350 nanoseconds or 350,000 picoseconds. This is presented as a rough guide; your\n    /// results may vary.\n    PerIteration,\n\n    /// `NumBatches` will attempt to divide the iterations up into a given number of batches.\n    /// A larger number of batches (and thus smaller batches) will reduce memory usage but increase\n    /// measurement overhead. This allows the user to choose their own tradeoff between memory usage\n    /// and measurement overhead, but care must be taken in tuning the number of batches. Most\n    /// benchmarks should use `SmallInput` or `LargeInput` instead.\n    NumBatches(u64),\n\n    /// `NumIterations` fixes the batch size to a constant number, specified by the user. This\n    /// allows the user to choose their own tradeoff between overhead and memory usage, but care must\n    /// be taken in tuning the batch size. In general, the measurement overhead of NumIterations\n    /// will be larger than that of `NumBatches`. Most benchmarks should use `SmallInput` or\n    /// `LargeInput` instead.\n    NumIterations(u64),\n\n    #[doc(hidden)]\n    __NonExhaustive,\n}","parent":null,"children":[{"krate":0,"index":2288},{"krate":0,"index":2290},{"krate":0,"index":2292},{"krate":0,"index":2294},{"krate":0,"index":2297},{"krate":0,"index":2300}],"decl_id":null,"docs":" Argument to [`Bencher::iter_batched`](struct.Bencher.html#method.iter_batched) and\n [`Bencher::iter_batched_ref`](struct.Bencher.html#method.iter_batched_ref) which controls the\n batch size.","sig":null,"attributes":[{"value":"/ Argument to [`Bencher::iter_batched`](struct.Bencher.html#method.iter_batched) and","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":5048,"byte_end":5134,"line_start":178,"line_end":178,"column_start":1,"column_end":87}},{"value":"/ [`Bencher::iter_batched_ref`](struct.Bencher.html#method.iter_batched_ref) which controls the","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":5135,"byte_end":5232,"line_start":179,"line_end":179,"column_start":1,"column_end":98}},{"value":"/ batch size.","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":5233,"byte_end":5248,"line_start":180,"line_end":180,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":5249,"byte_end":5252,"line_start":181,"line_end":181,"column_start":1,"column_end":4}},{"value":"/ Generally speaking, almost all benchmarks should use `SmallInput`. If the input or the result","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":5253,"byte_end":5350,"line_start":182,"line_end":182,"column_start":1,"column_end":98}},{"value":"/ of the benchmark routine is large enough that `SmallInput` causes out-of-memory errors,","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":5351,"byte_end":5442,"line_start":183,"line_end":183,"column_start":1,"column_end":92}},{"value":"/ `LargeInput` can be used to reduce memory usage at the cost of increasing the measurement","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":5443,"byte_end":5536,"line_start":184,"line_end":184,"column_start":1,"column_end":94}},{"value":"/ overhead. If the input or the result is extremely large (or if it holds some","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":5537,"byte_end":5617,"line_start":185,"line_end":185,"column_start":1,"column_end":81}},{"value":"/ limited external resource like a file handle), `PerIteration` will set the number of iterations","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":5618,"byte_end":5717,"line_start":186,"line_end":186,"column_start":1,"column_end":100}},{"value":"/ per batch to exactly one. `PerIteration` can increase the measurement overhead substantially","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":5718,"byte_end":5814,"line_start":187,"line_end":187,"column_start":1,"column_end":97}},{"value":"/ and should be avoided wherever possible.","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":5815,"byte_end":5859,"line_start":188,"line_end":188,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":5860,"byte_end":5863,"line_start":189,"line_end":189,"column_start":1,"column_end":4}},{"value":"/ Each value lists an estimate of the measurement overhead. This is intended as a rough guide","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":5864,"byte_end":5959,"line_start":190,"line_end":190,"column_start":1,"column_end":96}},{"value":"/ to assist in choosing an option, it should not be relied upon. In particular, it is not valid","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":5960,"byte_end":6057,"line_start":191,"line_end":191,"column_start":1,"column_end":98}},{"value":"/ to subtract the listed overhead from the measurement and assume that the result represents the","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":6058,"byte_end":6156,"line_start":192,"line_end":192,"column_start":1,"column_end":99}},{"value":"/ true runtime of a function. The actual measurement overhead for your specific benchmark depends","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":6157,"byte_end":6256,"line_start":193,"line_end":193,"column_start":1,"column_end":100}},{"value":"/ on the details of the function you're benchmarking and the hardware and operating","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":6257,"byte_end":6342,"line_start":194,"line_end":194,"column_start":1,"column_end":86}},{"value":"/ system running the benchmark.","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":6343,"byte_end":6376,"line_start":195,"line_end":195,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":6377,"byte_end":6380,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/ With that said, if the runtime of your function is small relative to the measurement overhead","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":6381,"byte_end":6478,"line_start":197,"line_end":197,"column_start":1,"column_end":98}},{"value":"/ it will be difficult to take accurate measurements. In this situation, the best option is to use","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":6479,"byte_end":6579,"line_start":198,"line_end":198,"column_start":1,"column_end":101}},{"value":"/ [`Bencher::iter`](struct.Bencher.html#method.iter) which has next-to-zero measurement overhead.","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":6580,"byte_end":6679,"line_start":199,"line_end":199,"column_start":1,"column_end":100}}]},{"kind":"Struct","id":{"krate":0,"index":1662},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":11235,"byte_end":11242,"line_start":280,"line_end":280,"column_start":12,"column_end":19},"name":"Bencher","qualname":"::Bencher","value":"Bencher {  }","parent":null,"children":[{"krate":0,"index":1665},{"krate":0,"index":1666},{"krate":0,"index":1667},{"krate":0,"index":1668},{"krate":0,"index":1669}],"decl_id":null,"docs":" Timer struct used to iterate a benchmarked function and measure the runtime.","sig":null,"attributes":[{"value":"/ Timer struct used to iterate a benchmarked function and measure the runtime.","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":10109,"byte_end":10189,"line_start":264,"line_end":264,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":10190,"byte_end":10193,"line_start":265,"line_end":265,"column_start":1,"column_end":4}},{"value":"/ This struct provides different timing loops as methods. Each timing loop provides a different","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":10194,"byte_end":10291,"line_start":266,"line_end":266,"column_start":1,"column_end":98}},{"value":"/ way to time a routine and each has advantages and disadvantages.","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":10292,"byte_end":10360,"line_start":267,"line_end":267,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":10361,"byte_end":10364,"line_start":268,"line_end":268,"column_start":1,"column_end":4}},{"value":"/ * If you want to do the iteration and measurement yourself (eg. passing the iteration count","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":10365,"byte_end":10460,"line_start":269,"line_end":269,"column_start":1,"column_end":96}},{"value":"/   to a separate process), use `iter_custom`.","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":10461,"byte_end":10509,"line_start":270,"line_end":270,"column_start":1,"column_end":49}},{"value":"/ * If your routine requires no per-iteration setup and returns a value with an expensive `drop`","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":10510,"byte_end":10608,"line_start":271,"line_end":271,"column_start":1,"column_end":99}},{"value":"/   method, use `iter_with_large_drop`.","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":10609,"byte_end":10650,"line_start":272,"line_end":272,"column_start":1,"column_end":42}},{"value":"/ * If your routine requires some per-iteration setup that shouldn't be timed, use `iter_batched`","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":10651,"byte_end":10750,"line_start":273,"line_end":273,"column_start":1,"column_end":100}},{"value":"/   or `iter_batched_ref`. See [`BatchSize`](enum.BatchSize.html) for a discussion of batch sizes.","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":10751,"byte_end":10851,"line_start":274,"line_end":274,"column_start":1,"column_end":101}},{"value":"/   If the setup value implements `Drop` and you don't want to include the `drop` time in the","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":10852,"byte_end":10947,"line_start":275,"line_end":275,"column_start":1,"column_end":96}},{"value":"/   measurement, use `iter_batched_ref`, otherwise use `iter_batched`. These methods are also","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":10948,"byte_end":11043,"line_start":276,"line_end":276,"column_start":1,"column_end":96}},{"value":"/   suitable for benchmarking routines which return a value with an expensive `drop` method,","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":11044,"byte_end":11138,"line_start":277,"line_end":277,"column_start":1,"column_end":95}},{"value":"/   but are more complex than `iter_with_large_drop`.","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":11139,"byte_end":11194,"line_start":278,"line_end":278,"column_start":1,"column_end":56}},{"value":"/ * Otherwise, use `iter`.","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":11195,"byte_end":11223,"line_start":279,"line_end":279,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":1673},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":12782,"byte_end":12786,"line_start":325,"line_end":325,"column_start":12,"column_end":16},"name":"iter","qualname":"<Bencher>::iter","value":"pub fn iter<O, R>(&mut Self, R) where R: FnMut() -> O","parent":null,"children":[],"decl_id":null,"docs":" Times a `routine` by executing it many times and timing the total elapsed time.","sig":null,"attributes":[{"value":"/ Times a `routine` by executing it many times and timing the total elapsed time.","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":11689,"byte_end":11772,"line_start":288,"line_end":288,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":11777,"byte_end":11780,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ Prefer this timing loop when `routine` returns a value that doesn't have a destructor.","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":11785,"byte_end":11875,"line_start":290,"line_end":290,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":11880,"byte_end":11883,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ # Timing model","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":11888,"byte_end":11906,"line_start":292,"line_end":292,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":11911,"byte_end":11914,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/ Note that the `Bencher` also times the time required to destroy the output of `routine()`.","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":11919,"byte_end":12013,"line_start":294,"line_end":294,"column_start":5,"column_end":99}},{"value":"/ Therefore prefer this timing loop when the runtime of `mem::drop(O)` is negligible compared","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":12018,"byte_end":12113,"line_start":295,"line_end":295,"column_start":5,"column_end":100}},{"value":"/ to the runtime of the `routine`.","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":12118,"byte_end":12154,"line_start":296,"line_end":296,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":12159,"byte_end":12162,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":12167,"byte_end":12178,"line_start":298,"line_end":298,"column_start":5,"column_end":16}},{"value":"/ elapsed = Instant::now + iters * (routine + mem::drop(O) + Range::next)","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":12183,"byte_end":12258,"line_start":299,"line_end":299,"column_start":5,"column_end":80}},{"value":"/ ```","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":12263,"byte_end":12270,"line_start":300,"line_end":300,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":12275,"byte_end":12278,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":12283,"byte_end":12296,"line_start":302,"line_end":302,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":12301,"byte_end":12304,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":12309,"byte_end":12320,"line_start":304,"line_end":304,"column_start":5,"column_end":16}},{"value":"/ #[macro_use] extern crate criterion;","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":12325,"byte_end":12365,"line_start":305,"line_end":305,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":12370,"byte_end":12373,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ use criterion::*;","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":12378,"byte_end":12399,"line_start":307,"line_end":307,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":12404,"byte_end":12407,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ // The function to benchmark","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":12412,"byte_end":12444,"line_start":309,"line_end":309,"column_start":5,"column_end":37}},{"value":"/ fn foo() {","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":12449,"byte_end":12463,"line_start":310,"line_end":310,"column_start":5,"column_end":19}},{"value":"/     // ...","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":12468,"byte_end":12482,"line_start":311,"line_end":311,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":12487,"byte_end":12492,"line_start":312,"line_end":312,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":12497,"byte_end":12500,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ fn bench(c: &mut Criterion) {","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":12505,"byte_end":12538,"line_start":314,"line_end":314,"column_start":5,"column_end":38}},{"value":"/     c.bench_function(\"iter\", move |b| {","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":12543,"byte_end":12586,"line_start":315,"line_end":315,"column_start":5,"column_end":48}},{"value":"/         b.iter(|| foo())","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":12591,"byte_end":12619,"line_start":316,"line_end":316,"column_start":5,"column_end":33}},{"value":"/     });","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":12624,"byte_end":12635,"line_start":317,"line_end":317,"column_start":5,"column_end":16}},{"value":"/ }","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":12640,"byte_end":12645,"line_start":318,"line_end":318,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":12650,"byte_end":12653,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ criterion_group!(benches, bench);","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":12658,"byte_end":12695,"line_start":320,"line_end":320,"column_start":5,"column_end":42}},{"value":"/ criterion_main!(benches);","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":12700,"byte_end":12729,"line_start":321,"line_end":321,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":12734,"byte_end":12741,"line_start":322,"line_end":322,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":12746,"byte_end":12749,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"inline(never)","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":12754,"byte_end":12770,"line_start":324,"line_end":324,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":1676},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":14377,"byte_end":14388,"line_start":376,"line_end":376,"column_start":12,"column_end":23},"name":"iter_custom","qualname":"<Bencher>::iter_custom","value":"pub fn iter_custom<R>(&mut Self, R) where R: FnMut(u64) -> M::Value","parent":null,"children":[],"decl_id":null,"docs":" Times a `routine` by executing it many times and relying on `routine` to measure its own execution time.","sig":null,"attributes":[{"value":"/ Times a `routine` by executing it many times and relying on `routine` to measure its own execution time.","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":13166,"byte_end":13274,"line_start":339,"line_end":339,"column_start":5,"column_end":113}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":13279,"byte_end":13282,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ Prefer this timing loop in cases where `routine` has to do its own measurements to","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":13287,"byte_end":13373,"line_start":341,"line_end":341,"column_start":5,"column_end":91}},{"value":"/ get accurate timing information (for example in multi-threaded scenarios where you spawn","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":13378,"byte_end":13470,"line_start":342,"line_end":342,"column_start":5,"column_end":97}},{"value":"/ and coordinate with multiple threads).","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":13475,"byte_end":13517,"line_start":343,"line_end":343,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":13522,"byte_end":13525,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ # Timing model","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":13530,"byte_end":13548,"line_start":345,"line_end":345,"column_start":5,"column_end":23}},{"value":"/ Custom, the timing model is whatever is returned as the Duration from `routine`.","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":13553,"byte_end":13637,"line_start":346,"line_end":346,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":13642,"byte_end":13645,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":13650,"byte_end":13663,"line_start":348,"line_end":348,"column_start":5,"column_end":18}},{"value":"/ ```rust","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":13668,"byte_end":13679,"line_start":349,"line_end":349,"column_start":5,"column_end":16}},{"value":"/ #[macro_use] extern crate criterion;","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":13684,"byte_end":13724,"line_start":350,"line_end":350,"column_start":5,"column_end":45}},{"value":"/ use criterion::*;","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":13729,"byte_end":13750,"line_start":351,"line_end":351,"column_start":5,"column_end":26}},{"value":"/ use criterion::black_box;","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":13755,"byte_end":13784,"line_start":352,"line_end":352,"column_start":5,"column_end":34}},{"value":"/ use std::time::Instant;","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":13789,"byte_end":13816,"line_start":353,"line_end":353,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":13821,"byte_end":13824,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ fn foo() {","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":13829,"byte_end":13843,"line_start":355,"line_end":355,"column_start":5,"column_end":19}},{"value":"/     // ...","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":13848,"byte_end":13862,"line_start":356,"line_end":356,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":13867,"byte_end":13872,"line_start":357,"line_end":357,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":13877,"byte_end":13880,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ fn bench(c: &mut Criterion) {","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":13885,"byte_end":13918,"line_start":359,"line_end":359,"column_start":5,"column_end":38}},{"value":"/     c.bench_function(\"iter\", move |b| {","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":13923,"byte_end":13966,"line_start":360,"line_end":360,"column_start":5,"column_end":48}},{"value":"/         b.iter_custom(|iters| {","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":13971,"byte_end":14006,"line_start":361,"line_end":361,"column_start":5,"column_end":40}},{"value":"/             let start = Instant::now();","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":14011,"byte_end":14054,"line_start":362,"line_end":362,"column_start":5,"column_end":48}},{"value":"/             for _i in 0..iters {","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":14059,"byte_end":14095,"line_start":363,"line_end":363,"column_start":5,"column_end":41}},{"value":"/                 black_box(foo());","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":14100,"byte_end":14137,"line_start":364,"line_end":364,"column_start":5,"column_end":42}},{"value":"/             }","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":14142,"byte_end":14159,"line_start":365,"line_end":365,"column_start":5,"column_end":22}},{"value":"/             start.elapsed()","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":14164,"byte_end":14195,"line_start":366,"line_end":366,"column_start":5,"column_end":36}},{"value":"/         })","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":14200,"byte_end":14214,"line_start":367,"line_end":367,"column_start":5,"column_end":19}},{"value":"/     });","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":14219,"byte_end":14230,"line_start":368,"line_end":368,"column_start":5,"column_end":16}},{"value":"/ }","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":14235,"byte_end":14240,"line_start":369,"line_end":369,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":14245,"byte_end":14248,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ criterion_group!(benches, bench);","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":14253,"byte_end":14290,"line_start":371,"line_end":371,"column_start":5,"column_end":42}},{"value":"/ criterion_main!(benches);","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":14295,"byte_end":14324,"line_start":372,"line_end":372,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":14329,"byte_end":14336,"line_start":373,"line_end":373,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":14341,"byte_end":14344,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"inline(never)","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":14349,"byte_end":14365,"line_start":375,"line_end":375,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":1678},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":14670,"byte_end":14685,"line_start":387,"line_end":387,"column_start":12,"column_end":27},"name":"iter_with_setup","qualname":"<Bencher>::iter_with_setup","value":"pub fn iter_with_setup<I, O, S, R>(&mut Self, S, R) where S: FnMut() -> I,\nR: FnMut(I) -> O","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1683},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":15962,"byte_end":15982,"line_start":430,"line_end":430,"column_start":12,"column_end":32},"name":"iter_with_large_drop","qualname":"<Bencher>::iter_with_large_drop","value":"pub fn iter_with_large_drop<O, R>(&mut Self, R) where R: FnMut() -> O","parent":null,"children":[],"decl_id":null,"docs":" Times a `routine` by collecting its output on each iteration. This avoids timing the\n destructor of the value returned by `routine`.","sig":null,"attributes":[{"value":"/ Times a `routine` by collecting its output on each iteration. This avoids timing the","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":14877,"byte_end":14965,"line_start":395,"line_end":395,"column_start":5,"column_end":93}},{"value":"/ destructor of the value returned by `routine`.","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":14970,"byte_end":15020,"line_start":396,"line_end":396,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":15025,"byte_end":15028,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ WARNING: This requires `O(iters * mem::size_of::<O>())` of memory, and `iters` is not under the","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":15033,"byte_end":15132,"line_start":398,"line_end":398,"column_start":5,"column_end":104}},{"value":"/ control of the caller. If this causes out-of-memory errors, use `iter_batched` instead.","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":15137,"byte_end":15228,"line_start":399,"line_end":399,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":15233,"byte_end":15236,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ # Timing model","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":15241,"byte_end":15259,"line_start":401,"line_end":401,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":15264,"byte_end":15267,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ ``` text","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":15272,"byte_end":15284,"line_start":403,"line_end":403,"column_start":5,"column_end":17}},{"value":"/ elapsed = Instant::now + iters * (routine) + Iterator::collect::<Vec<_>>","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":15289,"byte_end":15365,"line_start":404,"line_end":404,"column_start":5,"column_end":81}},{"value":"/ ```","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":15370,"byte_end":15377,"line_start":405,"line_end":405,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":15382,"byte_end":15385,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":15390,"byte_end":15403,"line_start":407,"line_end":407,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":15408,"byte_end":15411,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":15416,"byte_end":15427,"line_start":409,"line_end":409,"column_start":5,"column_end":16}},{"value":"/ #[macro_use] extern crate criterion;","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":15432,"byte_end":15472,"line_start":410,"line_end":410,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":15477,"byte_end":15480,"line_start":411,"line_end":411,"column_start":5,"column_end":8}},{"value":"/ use criterion::*;","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":15485,"byte_end":15506,"line_start":412,"line_end":412,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":15511,"byte_end":15514,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/ fn create_vector() -> Vec<u64> {","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":15519,"byte_end":15555,"line_start":414,"line_end":414,"column_start":5,"column_end":41}},{"value":"/     # vec![]","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":15560,"byte_end":15576,"line_start":415,"line_end":415,"column_start":5,"column_end":21}},{"value":"/     // ...","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":15581,"byte_end":15595,"line_start":416,"line_end":416,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":15600,"byte_end":15605,"line_start":417,"line_end":417,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":15610,"byte_end":15613,"line_start":418,"line_end":418,"column_start":5,"column_end":8}},{"value":"/ fn bench(c: &mut Criterion) {","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":15618,"byte_end":15651,"line_start":419,"line_end":419,"column_start":5,"column_end":38}},{"value":"/     c.bench_function(\"with_drop\", move |b| {","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":15656,"byte_end":15704,"line_start":420,"line_end":420,"column_start":5,"column_end":53}},{"value":"/         // This will avoid timing the Vec::drop.","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":15709,"byte_end":15761,"line_start":421,"line_end":421,"column_start":5,"column_end":57}},{"value":"/         b.iter_with_large_drop(|| create_vector())","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":15766,"byte_end":15820,"line_start":422,"line_end":422,"column_start":5,"column_end":59}},{"value":"/     });","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":15825,"byte_end":15836,"line_start":423,"line_end":423,"column_start":5,"column_end":16}},{"value":"/ }","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":15841,"byte_end":15846,"line_start":424,"line_end":424,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":15851,"byte_end":15854,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ criterion_group!(benches, bench);","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":15859,"byte_end":15896,"line_start":426,"line_end":426,"column_start":5,"column_end":42}},{"value":"/ criterion_main!(benches);","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":15901,"byte_end":15930,"line_start":427,"line_end":427,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":15935,"byte_end":15942,"line_start":428,"line_end":428,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":15947,"byte_end":15950,"line_start":429,"line_end":429,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1688},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":16166,"byte_end":16187,"line_start":438,"line_end":438,"column_start":12,"column_end":33},"name":"iter_with_large_setup","qualname":"<Bencher>::iter_with_large_setup","value":"pub fn iter_with_large_setup<I, O, S, R>(&mut Self, S, R) where S: FnMut() ->\nI, R: FnMut(I) -> O","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1693},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":17787,"byte_end":17799,"line_start":490,"line_end":490,"column_start":12,"column_end":24},"name":"iter_batched","qualname":"<Bencher>::iter_batched","value":"pub fn iter_batched<I, O, S, R>(&mut Self, S, R, BatchSize) where S: FnMut()\n-> I, R: FnMut(I) -> O","parent":null,"children":[],"decl_id":null,"docs":" Times a `routine` that requires some input by generating a batch of input, then timing the\n iteration of the benchmark over the input. See [`BatchSize`](enum.BatchSize.html) for\n details on choosing the batch size. Use this when the routine must consume its input.","sig":null,"attributes":[{"value":"/ Times a `routine` that requires some input by generating a batch of input, then timing the","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":16380,"byte_end":16474,"line_start":446,"line_end":446,"column_start":5,"column_end":99}},{"value":"/ iteration of the benchmark over the input. See [`BatchSize`](enum.BatchSize.html) for","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":16479,"byte_end":16568,"line_start":447,"line_end":447,"column_start":5,"column_end":94}},{"value":"/ details on choosing the batch size. Use this when the routine must consume its input.","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":16573,"byte_end":16662,"line_start":448,"line_end":448,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":16667,"byte_end":16670,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ For example, use this loop to benchmark sorting algorithms, because they require unsorted","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":16675,"byte_end":16768,"line_start":450,"line_end":450,"column_start":5,"column_end":98}},{"value":"/ data on each iteration.","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":16773,"byte_end":16800,"line_start":451,"line_end":451,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":16805,"byte_end":16808,"line_start":452,"line_end":452,"column_start":5,"column_end":8}},{"value":"/ # Timing model","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":16813,"byte_end":16831,"line_start":453,"line_end":453,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":16836,"byte_end":16839,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":16844,"byte_end":16855,"line_start":455,"line_end":455,"column_start":5,"column_end":16}},{"value":"/ elapsed = (Instant::now * num_batches) + (iters * (routine + O::drop)) + Vec::extend","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":16860,"byte_end":16948,"line_start":456,"line_end":456,"column_start":5,"column_end":93}},{"value":"/ ```","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":16953,"byte_end":16960,"line_start":457,"line_end":457,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":16965,"byte_end":16968,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":16973,"byte_end":16986,"line_start":459,"line_end":459,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":16991,"byte_end":16994,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":16999,"byte_end":17010,"line_start":461,"line_end":461,"column_start":5,"column_end":16}},{"value":"/ #[macro_use] extern crate criterion;","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":17015,"byte_end":17055,"line_start":462,"line_end":462,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":17060,"byte_end":17063,"line_start":463,"line_end":463,"column_start":5,"column_end":8}},{"value":"/ use criterion::*;","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":17068,"byte_end":17089,"line_start":464,"line_end":464,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":17094,"byte_end":17097,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ fn create_scrambled_data() -> Vec<u64> {","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":17102,"byte_end":17146,"line_start":466,"line_end":466,"column_start":5,"column_end":49}},{"value":"/     # vec![]","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":17151,"byte_end":17167,"line_start":467,"line_end":467,"column_start":5,"column_end":21}},{"value":"/     // ...","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":17172,"byte_end":17186,"line_start":468,"line_end":468,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":17191,"byte_end":17196,"line_start":469,"line_end":469,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":17201,"byte_end":17204,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ // The sorting algorithm to test","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":17209,"byte_end":17245,"line_start":471,"line_end":471,"column_start":5,"column_end":41}},{"value":"/ fn sort(data: &mut [u64]) {","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":17250,"byte_end":17281,"line_start":472,"line_end":472,"column_start":5,"column_end":36}},{"value":"/     // ...","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":17286,"byte_end":17300,"line_start":473,"line_end":473,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":17305,"byte_end":17310,"line_start":474,"line_end":474,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":17315,"byte_end":17318,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/ fn bench(c: &mut Criterion) {","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":17323,"byte_end":17356,"line_start":476,"line_end":476,"column_start":5,"column_end":38}},{"value":"/     let data = create_scrambled_data();","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":17361,"byte_end":17404,"line_start":477,"line_end":477,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":17409,"byte_end":17412,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/     c.bench_function(\"with_setup\", move |b| {","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":17417,"byte_end":17466,"line_start":479,"line_end":479,"column_start":5,"column_end":54}},{"value":"/         // This will avoid timing the to_vec call.","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":17471,"byte_end":17525,"line_start":480,"line_end":480,"column_start":5,"column_end":59}},{"value":"/         b.iter_batched(|| data.clone(), |mut data| sort(&mut data), BatchSize::SmallInput)","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":17530,"byte_end":17624,"line_start":481,"line_end":481,"column_start":5,"column_end":99}},{"value":"/     });","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":17629,"byte_end":17640,"line_start":482,"line_end":482,"column_start":5,"column_end":16}},{"value":"/ }","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":17645,"byte_end":17650,"line_start":483,"line_end":483,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":17655,"byte_end":17658,"line_start":484,"line_end":484,"column_start":5,"column_end":8}},{"value":"/ criterion_group!(benches, bench);","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":17663,"byte_end":17700,"line_start":485,"line_end":485,"column_start":5,"column_end":42}},{"value":"/ criterion_main!(benches);","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":17705,"byte_end":17734,"line_start":486,"line_end":486,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":17739,"byte_end":17746,"line_start":487,"line_end":487,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":17751,"byte_end":17754,"line_start":488,"line_end":488,"column_start":5,"column_end":8}},{"value":"inline(never)","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":17759,"byte_end":17775,"line_start":489,"line_end":489,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":1699},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":20799,"byte_end":20815,"line_start":580,"line_end":580,"column_start":12,"column_end":28},"name":"iter_batched_ref","qualname":"<Bencher>::iter_batched_ref","value":"pub fn iter_batched_ref<I, O, S, R>(&mut Self, S, R, BatchSize) where\nS: FnMut() -> I, R: FnMut(&mut I) -> O","parent":null,"children":[],"decl_id":null,"docs":" Times a `routine` that requires some input by generating a batch of input, then timing the\n iteration of the benchmark over the input. See [`BatchSize`](enum.BatchSize.html) for\n details on choosing the batch size. Use this when the routine should accept the input by\n mutable reference.","sig":null,"attributes":[{"value":"/ Times a `routine` that requires some input by generating a batch of input, then timing the","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":19374,"byte_end":19468,"line_start":535,"line_end":535,"column_start":5,"column_end":99}},{"value":"/ iteration of the benchmark over the input. See [`BatchSize`](enum.BatchSize.html) for","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":19473,"byte_end":19562,"line_start":536,"line_end":536,"column_start":5,"column_end":94}},{"value":"/ details on choosing the batch size. Use this when the routine should accept the input by","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":19567,"byte_end":19659,"line_start":537,"line_end":537,"column_start":5,"column_end":97}},{"value":"/ mutable reference.","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":19664,"byte_end":19686,"line_start":538,"line_end":538,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":19691,"byte_end":19694,"line_start":539,"line_end":539,"column_start":5,"column_end":8}},{"value":"/ For example, use this loop to benchmark sorting algorithms, because they require unsorted","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":19699,"byte_end":19792,"line_start":540,"line_end":540,"column_start":5,"column_end":98}},{"value":"/ data on each iteration.","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":19797,"byte_end":19824,"line_start":541,"line_end":541,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":19829,"byte_end":19832,"line_start":542,"line_end":542,"column_start":5,"column_end":8}},{"value":"/ # Timing model","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":19837,"byte_end":19855,"line_start":543,"line_end":543,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":19860,"byte_end":19863,"line_start":544,"line_end":544,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":19868,"byte_end":19879,"line_start":545,"line_end":545,"column_start":5,"column_end":16}},{"value":"/ elapsed = (Instant::now * num_batches) + (iters * routine) + Vec::extend","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":19884,"byte_end":19960,"line_start":546,"line_end":546,"column_start":5,"column_end":81}},{"value":"/ ```","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":19965,"byte_end":19972,"line_start":547,"line_end":547,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":19977,"byte_end":19980,"line_start":548,"line_end":548,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":19985,"byte_end":19998,"line_start":549,"line_end":549,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":20003,"byte_end":20006,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":20011,"byte_end":20022,"line_start":551,"line_end":551,"column_start":5,"column_end":16}},{"value":"/ #[macro_use] extern crate criterion;","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":20027,"byte_end":20067,"line_start":552,"line_end":552,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":20072,"byte_end":20075,"line_start":553,"line_end":553,"column_start":5,"column_end":8}},{"value":"/ use criterion::*;","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":20080,"byte_end":20101,"line_start":554,"line_end":554,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":20106,"byte_end":20109,"line_start":555,"line_end":555,"column_start":5,"column_end":8}},{"value":"/ fn create_scrambled_data() -> Vec<u64> {","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":20114,"byte_end":20158,"line_start":556,"line_end":556,"column_start":5,"column_end":49}},{"value":"/     # vec![]","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":20163,"byte_end":20179,"line_start":557,"line_end":557,"column_start":5,"column_end":21}},{"value":"/     // ...","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":20184,"byte_end":20198,"line_start":558,"line_end":558,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":20203,"byte_end":20208,"line_start":559,"line_end":559,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":20213,"byte_end":20216,"line_start":560,"line_end":560,"column_start":5,"column_end":8}},{"value":"/ // The sorting algorithm to test","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":20221,"byte_end":20257,"line_start":561,"line_end":561,"column_start":5,"column_end":41}},{"value":"/ fn sort(data: &mut [u64]) {","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":20262,"byte_end":20293,"line_start":562,"line_end":562,"column_start":5,"column_end":36}},{"value":"/     // ...","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":20298,"byte_end":20312,"line_start":563,"line_end":563,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":20317,"byte_end":20322,"line_start":564,"line_end":564,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":20327,"byte_end":20330,"line_start":565,"line_end":565,"column_start":5,"column_end":8}},{"value":"/ fn bench(c: &mut Criterion) {","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":20335,"byte_end":20368,"line_start":566,"line_end":566,"column_start":5,"column_end":38}},{"value":"/     let data = create_scrambled_data();","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":20373,"byte_end":20416,"line_start":567,"line_end":567,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":20421,"byte_end":20424,"line_start":568,"line_end":568,"column_start":5,"column_end":8}},{"value":"/     c.bench_function(\"with_setup\", move |b| {","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":20429,"byte_end":20478,"line_start":569,"line_end":569,"column_start":5,"column_end":54}},{"value":"/         // This will avoid timing the to_vec call.","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":20483,"byte_end":20537,"line_start":570,"line_end":570,"column_start":5,"column_end":59}},{"value":"/         b.iter_batched(|| data.clone(), |mut data| sort(&mut data), BatchSize::SmallInput)","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":20542,"byte_end":20636,"line_start":571,"line_end":571,"column_start":5,"column_end":99}},{"value":"/     });","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":20641,"byte_end":20652,"line_start":572,"line_end":572,"column_start":5,"column_end":16}},{"value":"/ }","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":20657,"byte_end":20662,"line_start":573,"line_end":573,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":20667,"byte_end":20670,"line_start":574,"line_end":574,"column_start":5,"column_end":8}},{"value":"/ criterion_group!(benches, bench);","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":20675,"byte_end":20712,"line_start":575,"line_end":575,"column_start":5,"column_end":42}},{"value":"/ criterion_main!(benches);","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":20717,"byte_end":20746,"line_start":576,"line_end":576,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":20751,"byte_end":20758,"line_start":577,"line_end":577,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":20763,"byte_end":20766,"line_start":578,"line_end":578,"column_start":5,"column_end":8}},{"value":"inline(never)","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":20771,"byte_end":20787,"line_start":579,"line_end":579,"column_start":5,"column_end":21}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2318},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":22993,"byte_end":23000,"line_start":640,"line_end":640,"column_start":5,"column_end":12},"name":"Compare","qualname":"::Baseline::Compare","value":"Baseline::Compare","parent":{"krate":0,"index":2317},"children":[],"decl_id":null,"docs":" Compare ensures a previous saved version of the baseline\n exists and runs comparison against that.\n","sig":null,"attributes":[{"value":"/ Compare ensures a previous saved version of the baseline","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":22879,"byte_end":22939,"line_start":638,"line_end":638,"column_start":5,"column_end":65}},{"value":"/ exists and runs comparison against that.","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":22944,"byte_end":22988,"line_start":639,"line_end":639,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2320},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":23135,"byte_end":23139,"line_start":643,"line_end":643,"column_start":5,"column_end":9},"name":"Save","qualname":"::Baseline::Save","value":"Baseline::Save","parent":{"krate":0,"index":2317},"children":[],"decl_id":null,"docs":" Save writes the benchmark results to the baseline directory,\n overwriting any results that were previously there.\n","sig":null,"attributes":[{"value":"/ Save writes the benchmark results to the baseline directory,","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":23006,"byte_end":23070,"line_start":641,"line_end":641,"column_start":5,"column_end":69}},{"value":"/ overwriting any results that were previously there.","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":23075,"byte_end":23130,"line_start":642,"line_end":642,"column_start":5,"column_end":60}}]},{"kind":"Enum","id":{"krate":0,"index":2317},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":22864,"byte_end":22872,"line_start":637,"line_end":637,"column_start":10,"column_end":18},"name":"Baseline","qualname":"::Baseline","value":"pub enum Baseline {\n\n    /// Compare ensures a previous saved version of the baseline\n    /// exists and runs comparison against that.\n    Compare,\n\n    /// Save writes the benchmark results to the baseline directory,\n    /// overwriting any results that were previously there.\n    Save,\n}","parent":null,"children":[{"krate":0,"index":2318},{"krate":0,"index":2320}],"decl_id":null,"docs":" Baseline describes how the baseline_directory is handled.\n","sig":null,"attributes":[{"value":"/ Baseline describes how the baseline_directory is handled.","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":22763,"byte_end":22824,"line_start":635,"line_end":635,"column_start":1,"column_end":62}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2328},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":23402,"byte_end":23409,"line_start":651,"line_end":651,"column_start":5,"column_end":12},"name":"Gnuplot","qualname":"::PlottingBackend::Gnuplot","value":"PlottingBackend::Gnuplot","parent":{"krate":0,"index":2327},"children":[],"decl_id":null,"docs":" Plotting backend which uses the external `gnuplot` command to render plots. This is the\n default if the `gnuplot` command is installed.\n","sig":null,"attributes":[{"value":"/ Plotting backend which uses the external `gnuplot` command to render plots. This is the","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":23251,"byte_end":23342,"line_start":649,"line_end":649,"column_start":5,"column_end":96}},{"value":"/ default if the `gnuplot` command is installed.","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":23347,"byte_end":23397,"line_start":650,"line_end":650,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2330},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":23539,"byte_end":23547,"line_start":654,"line_end":654,"column_start":5,"column_end":13},"name":"Plotters","qualname":"::PlottingBackend::Plotters","value":"PlottingBackend::Plotters","parent":{"krate":0,"index":2327},"children":[],"decl_id":null,"docs":" Plotting backend which uses the rust 'Plotters' library. This is the default if `gnuplot`\n is not installed.\n","sig":null,"attributes":[{"value":"/ Plotting backend which uses the rust 'Plotters' library. This is the default if `gnuplot`","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":23415,"byte_end":23508,"line_start":652,"line_end":652,"column_start":5,"column_end":98}},{"value":"/ is not installed.","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":23513,"byte_end":23534,"line_start":653,"line_end":653,"column_start":5,"column_end":26}}]},{"kind":"Enum","id":{"krate":0,"index":2327},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":23229,"byte_end":23244,"line_start":648,"line_end":648,"column_start":10,"column_end":25},"name":"PlottingBackend","qualname":"::PlottingBackend","value":"pub enum PlottingBackend {\n\n    /// Plotting backend which uses the external `gnuplot` command to render plots. This is the\n    /// default if the `gnuplot` command is installed.\n    Gnuplot,\n\n    /// Plotting backend which uses the rust 'Plotters' library. This is the default if `gnuplot`\n    /// is not installed.\n    Plotters,\n}","parent":null,"children":[{"krate":0,"index":2328},{"krate":0,"index":2330}],"decl_id":null,"docs":" Enum used to select the plotting backend.\n","sig":null,"attributes":[{"value":"/ Enum used to select the plotting backend.","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":23144,"byte_end":23189,"line_start":646,"line_end":646,"column_start":1,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":1706},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":24185,"byte_end":24194,"line_start":671,"line_end":671,"column_start":12,"column_end":21},"name":"Criterion","qualname":"::Criterion","value":"Criterion {  }","parent":null,"children":[{"krate":0,"index":1708},{"krate":0,"index":1709},{"krate":0,"index":1710},{"krate":0,"index":1711},{"krate":0,"index":1712},{"krate":0,"index":1713},{"krate":0,"index":1714},{"krate":0,"index":1715},{"krate":0,"index":1716},{"krate":0,"index":1717},{"krate":0,"index":1718},{"krate":0,"index":1719},{"krate":0,"index":1720},{"krate":0,"index":1721},{"krate":0,"index":1722},{"krate":0,"index":1723}],"decl_id":null,"docs":" The benchmark manager","sig":null,"attributes":[{"value":"/ The benchmark manager","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":23552,"byte_end":23577,"line_start":657,"line_end":657,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":23578,"byte_end":23581,"line_start":658,"line_end":658,"column_start":1,"column_end":4}},{"value":"/ `Criterion` lets you configure and execute benchmarks","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":23582,"byte_end":23639,"line_start":659,"line_end":659,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":23640,"byte_end":23643,"line_start":660,"line_end":660,"column_start":1,"column_end":4}},{"value":"/ Each benchmark consists of four phases:","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":23644,"byte_end":23687,"line_start":661,"line_end":661,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":23688,"byte_end":23691,"line_start":662,"line_end":662,"column_start":1,"column_end":4}},{"value":"/ - **Warm-up**: The routine is repeatedly executed, to let the CPU/OS/JIT/interpreter adapt to","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":23692,"byte_end":23789,"line_start":663,"line_end":663,"column_start":1,"column_end":98}},{"value":"/ the new load","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":23790,"byte_end":23806,"line_start":664,"line_end":664,"column_start":1,"column_end":17}},{"value":"/ - **Measurement**: The routine is repeatedly executed, and timing information is collected into","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":23807,"byte_end":23906,"line_start":665,"line_end":665,"column_start":1,"column_end":100}},{"value":"/ a sample","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":23907,"byte_end":23919,"line_start":666,"line_end":666,"column_start":1,"column_end":13}},{"value":"/ - **Analysis**: The sample is analyzed and distiled into meaningful statistics that get","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":23920,"byte_end":24011,"line_start":667,"line_end":667,"column_start":1,"column_end":92}},{"value":"/ reported to stdout, stored in files, and plotted","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":24012,"byte_end":24064,"line_start":668,"line_end":668,"column_start":1,"column_end":53}},{"value":"/ - **Comparison**: The current sample is compared with the sample obtained in the previous","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":24065,"byte_end":24158,"line_start":669,"line_end":669,"column_start":1,"column_end":94}},{"value":"/ benchmark.","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":24159,"byte_end":24173,"line_start":670,"line_end":670,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":1728},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":26863,"byte_end":26879,"line_start":748,"line_end":748,"column_start":12,"column_end":28},"name":"with_measurement","qualname":"<Criterion<M>>::with_measurement","value":"pub fn with_measurement<M2: Measurement>(Self, M2) -> Criterion<M2>","parent":null,"children":[],"decl_id":null,"docs":" Changes the measurement for the benchmarks run with this runner. See the\n Measurement trait for more details\n","sig":null,"attributes":[{"value":"/ Changes the measurement for the benchmarks run with this runner. See the","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":26732,"byte_end":26808,"line_start":746,"line_end":746,"column_start":5,"column_end":81}},{"value":"/ Measurement trait for more details","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":26813,"byte_end":26851,"line_start":747,"line_end":747,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1730},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":27780,"byte_end":27793,"line_start":771,"line_end":771,"column_start":12,"column_end":25},"name":"with_profiler","qualname":"<Criterion<M>>::with_profiler","value":"pub fn with_profiler<P: Profiler + 'static>(Self, P) -> Criterion<M>","parent":null,"children":[],"decl_id":null,"docs":" Changes the internal profiler for benchmarks run with this runner. See\n the Profiler trait for more details.\n","sig":null,"attributes":[{"value":"/ Changes the internal profiler for benchmarks run with this runner. See","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":27649,"byte_end":27723,"line_start":769,"line_end":769,"column_start":5,"column_end":79}},{"value":"/ the Profiler trait for more details.","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":27728,"byte_end":27768,"line_start":770,"line_end":770,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1732},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":28174,"byte_end":28190,"line_start":782,"line_end":782,"column_start":12,"column_end":28},"name":"plotting_backend","qualname":"<Criterion<M>>::plotting_backend","value":"pub fn plotting_backend(Self, PlottingBackend) -> Criterion<M>","parent":null,"children":[],"decl_id":null,"docs":" Set the plotting backend. By default, Criterion will use gnuplot if available, or plotters\n if not.","sig":null,"attributes":[{"value":"/ Set the plotting backend. By default, Criterion will use gnuplot if available, or plotters","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":27956,"byte_end":28050,"line_start":778,"line_end":778,"column_start":5,"column_end":99}},{"value":"/ if not.","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":28055,"byte_end":28066,"line_start":779,"line_end":779,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":28071,"byte_end":28074,"line_start":780,"line_end":780,"column_start":5,"column_end":8}},{"value":"/ Panics if `backend` is `PlottingBackend::Gnuplot` and gnuplot is not available.","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":28079,"byte_end":28162,"line_start":781,"line_end":781,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":1733},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":28973,"byte_end":28984,"line_start":805,"line_end":805,"column_start":12,"column_end":23},"name":"sample_size","qualname":"<Criterion<M>>::sample_size","value":"pub fn sample_size(Self, usize) -> Criterion<M>","parent":null,"children":[],"decl_id":null,"docs":" Changes the default size of the sample for benchmarks run with this runner.","sig":null,"attributes":[{"value":"/ Changes the default size of the sample for benchmarks run with this runner.","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":28646,"byte_end":28725,"line_start":795,"line_end":795,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":28730,"byte_end":28733,"line_start":796,"line_end":796,"column_start":5,"column_end":8}},{"value":"/ A bigger sample should yield more accurate results if paired with a sufficiently large","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":28738,"byte_end":28828,"line_start":797,"line_end":797,"column_start":5,"column_end":95}},{"value":"/ measurement time.","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":28833,"byte_end":28854,"line_start":798,"line_end":798,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":28859,"byte_end":28862,"line_start":799,"line_end":799,"column_start":5,"column_end":8}},{"value":"/ Sample size must be at least 10.","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":28867,"byte_end":28903,"line_start":800,"line_end":800,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":28908,"byte_end":28911,"line_start":801,"line_end":801,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":28916,"byte_end":28928,"line_start":802,"line_end":802,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":28933,"byte_end":28936,"line_start":803,"line_end":803,"column_start":5,"column_end":8}},{"value":"/ Panics if n < 10","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":28941,"byte_end":28961,"line_start":804,"line_end":804,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":1734},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":29274,"byte_end":29286,"line_start":817,"line_end":817,"column_start":12,"column_end":24},"name":"warm_up_time","qualname":"<Criterion<M>>::warm_up_time","value":"pub fn warm_up_time(Self, Duration) -> Criterion<M>","parent":null,"children":[],"decl_id":null,"docs":" Changes the default warm up time for benchmarks run with this runner.","sig":null,"attributes":[{"value":"/ Changes the default warm up time for benchmarks run with this runner.","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":29111,"byte_end":29184,"line_start":812,"line_end":812,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":29189,"byte_end":29192,"line_start":813,"line_end":813,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":29197,"byte_end":29209,"line_start":814,"line_end":814,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":29214,"byte_end":29217,"line_start":815,"line_end":815,"column_start":5,"column_end":8}},{"value":"/ Panics if the input duration is zero","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":29222,"byte_end":29262,"line_start":816,"line_end":816,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1735},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":29844,"byte_end":29860,"line_start":834,"line_end":834,"column_start":12,"column_end":28},"name":"measurement_time","qualname":"<Criterion<M>>::measurement_time","value":"pub fn measurement_time(Self, Duration) -> Criterion<M>","parent":null,"children":[],"decl_id":null,"docs":" Changes the default measurement time for benchmarks run with this runner.","sig":null,"attributes":[{"value":"/ Changes the default measurement time for benchmarks run with this runner.","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":29432,"byte_end":29509,"line_start":824,"line_end":824,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":29514,"byte_end":29517,"line_start":825,"line_end":825,"column_start":5,"column_end":8}},{"value":"/ With a longer time, the measurement will become more resilient to transitory peak loads","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":29522,"byte_end":29613,"line_start":826,"line_end":826,"column_start":5,"column_end":96}},{"value":"/ caused by external programs","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":29618,"byte_end":29649,"line_start":827,"line_end":827,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":29654,"byte_end":29657,"line_start":828,"line_end":828,"column_start":5,"column_end":8}},{"value":"/ **Note**: If the measurement time is too \"low\", Criterion will automatically increase it","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":29662,"byte_end":29754,"line_start":829,"line_end":829,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":29759,"byte_end":29762,"line_start":830,"line_end":830,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":29767,"byte_end":29779,"line_start":831,"line_end":831,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":29784,"byte_end":29787,"line_start":832,"line_end":832,"column_start":5,"column_end":8}},{"value":"/ Panics if the input duration in zero","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":29792,"byte_end":29832,"line_start":833,"line_end":833,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1736},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":30506,"byte_end":30516,"line_start":852,"line_end":852,"column_start":12,"column_end":22},"name":"nresamples","qualname":"<Criterion<M>>::nresamples","value":"pub fn nresamples(Self, usize) -> Criterion<M>","parent":null,"children":[],"decl_id":null,"docs":" Changes the default number of resamples for benchmarks run with this runner.","sig":null,"attributes":[{"value":"/ Changes the default number of resamples for benchmarks run with this runner.","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":30010,"byte_end":30090,"line_start":841,"line_end":841,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":30095,"byte_end":30098,"line_start":842,"line_end":842,"column_start":5,"column_end":8}},{"value":"/ Number of resamples to use for the","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":30103,"byte_end":30141,"line_start":843,"line_end":843,"column_start":5,"column_end":43}},{"value":"/ [bootstrap](http://en.wikipedia.org/wiki/Bootstrapping_(statistics)#Case_resampling)","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":30146,"byte_end":30234,"line_start":844,"line_end":844,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":30239,"byte_end":30242,"line_start":845,"line_end":845,"column_start":5,"column_end":8}},{"value":"/ A larger number of resamples reduces the random sampling errors, which are inherent to the","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":30247,"byte_end":30341,"line_start":846,"line_end":846,"column_start":5,"column_end":99}},{"value":"/ bootstrap method, but also increases the analysis time","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":30346,"byte_end":30404,"line_start":847,"line_end":847,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":30409,"byte_end":30412,"line_start":848,"line_end":848,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":30417,"byte_end":30429,"line_start":849,"line_end":849,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":30434,"byte_end":30437,"line_start":850,"line_end":850,"column_start":5,"column_end":8}},{"value":"/ Panics if the number of resamples is set to zero","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":30442,"byte_end":30494,"line_start":851,"line_end":851,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1737},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":31484,"byte_end":31499,"line_start":874,"line_end":874,"column_start":12,"column_end":27},"name":"noise_threshold","qualname":"<Criterion<M>>::noise_threshold","value":"pub fn noise_threshold(Self, f64) -> Criterion<M>","parent":null,"children":[],"decl_id":null,"docs":" Changes the default noise threshold for benchmarks run with this runner. The noise threshold\n is used to filter out small changes in performance, even if they are statistically\n significant. Sometimes benchmarking the same code twice will result in small but\n statistically significant differences solely because of noise. This provides a way to filter\n out some of these false positives at the cost of making it harder to detect small changes\n to the true performance of the benchmark.","sig":null,"attributes":[{"value":"/ Changes the default noise threshold for benchmarks run with this runner. The noise threshold","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":30764,"byte_end":30860,"line_start":862,"line_end":862,"column_start":5,"column_end":101}},{"value":"/ is used to filter out small changes in performance, even if they are statistically","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":30865,"byte_end":30951,"line_start":863,"line_end":863,"column_start":5,"column_end":91}},{"value":"/ significant. Sometimes benchmarking the same code twice will result in small but","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":30956,"byte_end":31040,"line_start":864,"line_end":864,"column_start":5,"column_end":89}},{"value":"/ statistically significant differences solely because of noise. This provides a way to filter","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":31045,"byte_end":31141,"line_start":865,"line_end":865,"column_start":5,"column_end":101}},{"value":"/ out some of these false positives at the cost of making it harder to detect small changes","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":31146,"byte_end":31239,"line_start":866,"line_end":866,"column_start":5,"column_end":98}},{"value":"/ to the true performance of the benchmark.","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":31244,"byte_end":31289,"line_start":867,"line_end":867,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":31294,"byte_end":31297,"line_start":868,"line_end":868,"column_start":5,"column_end":8}},{"value":"/ The default is 0.01, meaning that changes smaller than 1% will be ignored.","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":31302,"byte_end":31380,"line_start":869,"line_end":869,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":31385,"byte_end":31388,"line_start":870,"line_end":870,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":31393,"byte_end":31405,"line_start":871,"line_end":871,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":31410,"byte_end":31413,"line_start":872,"line_end":872,"column_start":5,"column_end":8}},{"value":"/ Panics if the threshold is set to a negative value","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":31418,"byte_end":31472,"line_start":873,"line_end":873,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1738},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":32158,"byte_end":32174,"line_start":889,"line_end":889,"column_start":12,"column_end":28},"name":"confidence_level","qualname":"<Criterion<M>>::confidence_level","value":"pub fn confidence_level(Self, f64) -> Criterion<M>","parent":null,"children":[],"decl_id":null,"docs":" Changes the default confidence level for benchmarks run with this runner. The confidence\n level is the desired probability that the true runtime lies within the estimated\n [confidence interval](https://en.wikipedia.org/wiki/Confidence_interval). The default is\n 0.95, meaning that the confidence interval should capture the true value 95% of the time.","sig":null,"attributes":[{"value":"/ Changes the default confidence level for benchmarks run with this runner. The confidence","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":31653,"byte_end":31745,"line_start":881,"line_end":881,"column_start":5,"column_end":97}},{"value":"/ level is the desired probability that the true runtime lies within the estimated","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":31750,"byte_end":31834,"line_start":882,"line_end":882,"column_start":5,"column_end":89}},{"value":"/ [confidence interval](https://en.wikipedia.org/wiki/Confidence_interval). The default is","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":31839,"byte_end":31931,"line_start":883,"line_end":883,"column_start":5,"column_end":97}},{"value":"/ 0.95, meaning that the confidence interval should capture the true value 95% of the time.","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":31936,"byte_end":32029,"line_start":884,"line_end":884,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":32034,"byte_end":32037,"line_start":885,"line_end":885,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":32042,"byte_end":32054,"line_start":886,"line_end":886,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":32059,"byte_end":32062,"line_start":887,"line_end":887,"column_start":5,"column_end":8}},{"value":"/ Panics if the confidence level is set to a value outside the `(0, 1)` range","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":32067,"byte_end":32146,"line_start":888,"line_end":888,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":1739},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":33747,"byte_end":33765,"line_start":919,"line_end":919,"column_start":12,"column_end":30},"name":"significance_level","qualname":"<Criterion<M>>::significance_level","value":"pub fn significance_level(Self, f64) -> Criterion<M>","parent":null,"children":[],"decl_id":null,"docs":" Changes the default [significance level](https://en.wikipedia.org/wiki/Statistical_significance)\n for benchmarks run with this runner. This is used to perform a\n [hypothesis test](https://en.wikipedia.org/wiki/Statistical_hypothesis_testing) to see if\n the measurements from this run are different from the measured performance of the last run.\n The significance level is the desired probability that two measurements of identical code\n will be considered 'different' due to noise in the measurements. The default value is 0.05,\n meaning that approximately 5% of identical benchmarks will register as different due to\n noise.","sig":null,"attributes":[{"value":"/ Changes the default [significance level](https://en.wikipedia.org/wiki/Statistical_significance)","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":32447,"byte_end":32547,"line_start":899,"line_end":899,"column_start":5,"column_end":105}},{"value":"/ for benchmarks run with this runner. This is used to perform a","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":32552,"byte_end":32618,"line_start":900,"line_end":900,"column_start":5,"column_end":71}},{"value":"/ [hypothesis test](https://en.wikipedia.org/wiki/Statistical_hypothesis_testing) to see if","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":32623,"byte_end":32716,"line_start":901,"line_end":901,"column_start":5,"column_end":98}},{"value":"/ the measurements from this run are different from the measured performance of the last run.","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":32721,"byte_end":32816,"line_start":902,"line_end":902,"column_start":5,"column_end":100}},{"value":"/ The significance level is the desired probability that two measurements of identical code","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":32821,"byte_end":32914,"line_start":903,"line_end":903,"column_start":5,"column_end":98}},{"value":"/ will be considered 'different' due to noise in the measurements. The default value is 0.05,","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":32919,"byte_end":33014,"line_start":904,"line_end":904,"column_start":5,"column_end":100}},{"value":"/ meaning that approximately 5% of identical benchmarks will register as different due to","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":33019,"byte_end":33110,"line_start":905,"line_end":905,"column_start":5,"column_end":96}},{"value":"/ noise.","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":33115,"byte_end":33125,"line_start":906,"line_end":906,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":33130,"byte_end":33133,"line_start":907,"line_end":907,"column_start":5,"column_end":8}},{"value":"/ This presents a trade-off. By setting the significance level closer to 0.0, you can increase","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":33138,"byte_end":33234,"line_start":908,"line_end":908,"column_start":5,"column_end":101}},{"value":"/ the statistical robustness against noise, but it also weaken's Criterion.rs' ability to","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":33239,"byte_end":33330,"line_start":909,"line_end":909,"column_start":5,"column_end":96}},{"value":"/ detect small but real changes in the performance. By setting the significance level","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":33335,"byte_end":33422,"line_start":910,"line_end":910,"column_start":5,"column_end":92}},{"value":"/ closer to 1.0, Criterion.rs will be more able to detect small true changes, but will also","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":33427,"byte_end":33520,"line_start":911,"line_end":911,"column_start":5,"column_end":98}},{"value":"/ report more spurious differences.","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":33525,"byte_end":33562,"line_start":912,"line_end":912,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":33567,"byte_end":33570,"line_start":913,"line_end":913,"column_start":5,"column_end":8}},{"value":"/ See also the noise threshold setting.","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":33575,"byte_end":33616,"line_start":914,"line_end":914,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":33621,"byte_end":33624,"line_start":915,"line_end":915,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":33629,"byte_end":33641,"line_start":916,"line_end":916,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":33646,"byte_end":33649,"line_start":917,"line_end":917,"column_start":5,"column_end":8}},{"value":"/ Panics if the significance level is set to a value outside the `(0, 1)` range","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":33654,"byte_end":33735,"line_start":918,"line_end":918,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":1741},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":34199,"byte_end":34209,"line_start":934,"line_end":934,"column_start":12,"column_end":22},"name":"with_plots","qualname":"<Criterion<M>>::with_plots","value":"pub fn with_plots(Self) -> Criterion<M>","parent":null,"children":[],"decl_id":null,"docs":" Enables plotting\n","sig":null,"attributes":[{"value":"/ Enables plotting","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":34167,"byte_end":34187,"line_start":933,"line_end":933,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":1742},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":34627,"byte_end":34640,"line_start":946,"line_end":946,"column_start":12,"column_end":25},"name":"without_plots","qualname":"<Criterion<M>>::without_plots","value":"pub fn without_plots(Self) -> Criterion<M>","parent":null,"children":[],"decl_id":null,"docs":" Disables plotting\n","sig":null,"attributes":[{"value":"/ Disables plotting","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":34594,"byte_end":34615,"line_start":945,"line_end":945,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":1743},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":35026,"byte_end":35034,"line_start":956,"line_end":956,"column_start":12,"column_end":20},"name":"can_plot","qualname":"<Criterion<M>>::can_plot","value":"pub fn can_plot(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return true if generation of the plots is possible.\n","sig":null,"attributes":[{"value":"/ Return true if generation of the plots is possible.","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":34959,"byte_end":35014,"line_start":955,"line_end":955,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1744},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":35261,"byte_end":35274,"line_start":963,"line_end":963,"column_start":12,"column_end":25},"name":"save_baseline","qualname":"<Criterion<M>>::save_baseline","value":"pub fn save_baseline(Self, String) -> Criterion<M>","parent":null,"children":[],"decl_id":null,"docs":" Names an explicit baseline and enables overwriting the previous results.\n","sig":null,"attributes":[{"value":"/ Names an explicit baseline and enables overwriting the previous results.","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":35173,"byte_end":35249,"line_start":962,"line_end":962,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":1745},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":35518,"byte_end":35533,"line_start":970,"line_end":970,"column_start":12,"column_end":27},"name":"retain_baseline","qualname":"<Criterion<M>>::retain_baseline","value":"pub fn retain_baseline(Self, String) -> Criterion<M>","parent":null,"children":[],"decl_id":null,"docs":" Names an explicit baseline and disables overwriting the previous results.\n","sig":null,"attributes":[{"value":"/ Names an explicit baseline and disables overwriting the previous results.","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":35429,"byte_end":35506,"line_start":969,"line_end":969,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":1746},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":35813,"byte_end":35824,"line_start":978,"line_end":978,"column_start":12,"column_end":23},"name":"with_filter","qualname":"<Criterion<M>>::with_filter","value":"pub fn with_filter<S: Into<String>>(Self, S) -> Criterion<M>","parent":null,"children":[],"decl_id":null,"docs":" Filters the benchmarks. Only benchmarks with names that contain the\n given string will be executed.\n","sig":null,"attributes":[{"value":"/ Filters the benchmarks. Only benchmarks with names that contain the","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":35691,"byte_end":35762,"line_start":976,"line_end":976,"column_start":5,"column_end":76}},{"value":"/ given string will be executed.","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":35767,"byte_end":35801,"line_start":977,"line_end":977,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1749},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":36287,"byte_end":36303,"line_start":993,"line_end":993,"column_start":12,"column_end":28},"name":"output_directory","qualname":"<Criterion<M>>::output_directory","value":"pub fn output_directory(Self, &Path) -> Criterion<M>","parent":null,"children":[],"decl_id":null,"docs":" Set the output directory (currently for testing only)\n","sig":null,"attributes":[{"value":"/ Set the output directory (currently for testing only)","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":36199,"byte_end":36256,"line_start":991,"line_end":991,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":1750},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":36503,"byte_end":36515,"line_start":1001,"line_end":1001,"column_start":12,"column_end":24},"name":"profile_time","qualname":"<Criterion<M>>::profile_time","value":"pub fn profile_time(Self, Option<Duration>) -> Criterion<M>","parent":null,"children":[],"decl_id":null,"docs":" Set the profile time (currently for testing only)\n","sig":null,"attributes":[{"value":"/ Set the profile time (currently for testing only)","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":36419,"byte_end":36472,"line_start":999,"line_end":999,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1751},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":36725,"byte_end":36738,"line_start":1009,"line_end":1009,"column_start":12,"column_end":25},"name":"final_summary","qualname":"<Criterion<M>>::final_summary","value":"pub fn final_summary(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Generate the final summary at the end of a run.\n","sig":null,"attributes":[{"value":"/ Generate the final summary at the end of a run.","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":36643,"byte_end":36694,"line_start":1007,"line_end":1007,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":1752},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":37300,"byte_end":37319,"line_start":1026,"line_end":1026,"column_start":12,"column_end":31},"name":"configure_from_args","qualname":"<Criterion<M>>::configure_from_args","value":"pub fn configure_from_args(Self) -> Criterion<M>","parent":null,"children":[],"decl_id":null,"docs":" Configure this criterion struct based on the command-line arguments to\n this process.\n","sig":null,"attributes":[{"value":"/ Configure this criterion struct based on the command-line arguments to","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":37113,"byte_end":37187,"line_start":1023,"line_end":1023,"column_start":5,"column_end":79}},{"value":"/ this process.","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":37192,"byte_end":37209,"line_start":1024,"line_end":1024,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1765},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":50555,"byte_end":50570,"line_start":1340,"line_end":1340,"column_start":12,"column_end":27},"name":"benchmark_group","qualname":"<Criterion<M>>::benchmark_group","value":"pub fn benchmark_group<S: Into<String>>(&mut Self, S) -> BenchmarkGroup<, M>","parent":null,"children":[],"decl_id":null,"docs":" Return a benchmark group. All benchmarks performed using a benchmark group will be\n grouped together in the final report.","sig":null,"attributes":[{"value":"/ Return a benchmark group. All benchmarks performed using a benchmark group will be","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":49828,"byte_end":49914,"line_start":1319,"line_end":1319,"column_start":5,"column_end":91}},{"value":"/ grouped together in the final report.","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":49919,"byte_end":49960,"line_start":1320,"line_end":1320,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":49965,"byte_end":49968,"line_start":1321,"line_end":1321,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":49973,"byte_end":49988,"line_start":1322,"line_end":1322,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":49993,"byte_end":49996,"line_start":1323,"line_end":1323,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":50001,"byte_end":50012,"line_start":1324,"line_end":1324,"column_start":5,"column_end":16}},{"value":"/ #[macro_use] extern crate criterion;","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":50017,"byte_end":50057,"line_start":1325,"line_end":1325,"column_start":5,"column_end":45}},{"value":"/ use self::criterion::*;","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":50062,"byte_end":50089,"line_start":1326,"line_end":1326,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":50094,"byte_end":50097,"line_start":1327,"line_end":1327,"column_start":5,"column_end":8}},{"value":"/ fn bench_simple(c: &mut Criterion) {","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":50102,"byte_end":50142,"line_start":1328,"line_end":1328,"column_start":5,"column_end":45}},{"value":"/     let mut group = c.benchmark_group(\"My Group\");","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":50147,"byte_end":50201,"line_start":1329,"line_end":1329,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":50206,"byte_end":50209,"line_start":1330,"line_end":1330,"column_start":5,"column_end":8}},{"value":"/     // Now we can perform benchmarks with this group","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":50214,"byte_end":50270,"line_start":1331,"line_end":1331,"column_start":5,"column_end":61}},{"value":"/     group.bench_function(\"Bench 1\", |b| b.iter(|| 1 ));","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":50275,"byte_end":50334,"line_start":1332,"line_end":1332,"column_start":5,"column_end":64}},{"value":"/     group.bench_function(\"Bench 2\", |b| b.iter(|| 2 ));","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":50339,"byte_end":50398,"line_start":1333,"line_end":1333,"column_start":5,"column_end":64}},{"value":"/    ","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":50403,"byte_end":50410,"line_start":1334,"line_end":1334,"column_start":5,"column_end":12}},{"value":"/     group.finish();","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":50415,"byte_end":50438,"line_start":1335,"line_end":1335,"column_start":5,"column_end":28}},{"value":"/ }","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":50443,"byte_end":50448,"line_start":1336,"line_end":1336,"column_start":5,"column_end":10}},{"value":"/ criterion_group!(benches, bench_simple);","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":50453,"byte_end":50497,"line_start":1337,"line_end":1337,"column_start":5,"column_end":49}},{"value":"/ criterion_main!(benches);","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":50502,"byte_end":50531,"line_start":1338,"line_end":1338,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":50536,"byte_end":50543,"line_start":1339,"line_end":1339,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1769},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":51380,"byte_end":51394,"line_start":1369,"line_end":1369,"column_start":12,"column_end":26},"name":"bench_function","qualname":"<Criterion<M>>::bench_function","value":"pub fn bench_function<F>(&mut Self, &str, F) -> &mut Criterion<M> where\nF: FnMut(&mut Bencher<, M>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Benchmarks a function. For comparing multiple functions, see `benchmark_group`.","sig":null,"attributes":[{"value":"/ Benchmarks a function. For comparing multiple functions, see `benchmark_group`.","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":50765,"byte_end":50848,"line_start":1348,"line_end":1348,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":50853,"byte_end":50856,"line_start":1349,"line_end":1349,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":50861,"byte_end":50874,"line_start":1350,"line_end":1350,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":50879,"byte_end":50882,"line_start":1351,"line_end":1351,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":50887,"byte_end":50898,"line_start":1352,"line_end":1352,"column_start":5,"column_end":16}},{"value":"/ #[macro_use] extern crate criterion;","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":50903,"byte_end":50943,"line_start":1353,"line_end":1353,"column_start":5,"column_end":45}},{"value":"/ use self::criterion::*;","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":50948,"byte_end":50975,"line_start":1354,"line_end":1354,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":50980,"byte_end":50983,"line_start":1355,"line_end":1355,"column_start":5,"column_end":8}},{"value":"/ fn bench(c: &mut Criterion) {","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":50988,"byte_end":51021,"line_start":1356,"line_end":1356,"column_start":5,"column_end":38}},{"value":"/     // Setup (construct data, allocate memory, etc)","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":51026,"byte_end":51081,"line_start":1357,"line_end":1357,"column_start":5,"column_end":60}},{"value":"/     c.bench_function(","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":51086,"byte_end":51111,"line_start":1358,"line_end":1358,"column_start":5,"column_end":30}},{"value":"/         \"function_name\",","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":51116,"byte_end":51144,"line_start":1359,"line_end":1359,"column_start":5,"column_end":33}},{"value":"/         |b| b.iter(|| {","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":51149,"byte_end":51176,"line_start":1360,"line_end":1360,"column_start":5,"column_end":32}},{"value":"/             // Code to benchmark goes here","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":51181,"byte_end":51227,"line_start":1361,"line_end":1361,"column_start":5,"column_end":51}},{"value":"/         }),","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":51232,"byte_end":51247,"line_start":1362,"line_end":1362,"column_start":5,"column_end":20}},{"value":"/     );","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":51252,"byte_end":51262,"line_start":1363,"line_end":1363,"column_start":5,"column_end":15}},{"value":"/ }","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":51267,"byte_end":51272,"line_start":1364,"line_end":1364,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":51277,"byte_end":51280,"line_start":1365,"line_end":1365,"column_start":5,"column_end":8}},{"value":"/ criterion_group!(benches, bench);","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":51285,"byte_end":51322,"line_start":1366,"line_end":1366,"column_start":5,"column_end":42}},{"value":"/ criterion_main!(benches);","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":51327,"byte_end":51356,"line_start":1367,"line_end":1367,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":51361,"byte_end":51368,"line_start":1368,"line_end":1368,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1771},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":52358,"byte_end":52374,"line_start":1401,"line_end":1401,"column_start":12,"column_end":28},"name":"bench_with_input","qualname":"<Criterion<M>>::bench_with_input","value":"pub fn bench_with_input<F, I>(&mut Self, BenchmarkId, &I, F)\n-> &mut Criterion<M> where F: FnMut(&mut Bencher<, M>, &I) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Benchmarks a function with an input. For comparing multiple functions or multiple inputs,\n see `benchmark_group`.","sig":null,"attributes":[{"value":"/ Benchmarks a function with an input. For comparing multiple functions or multiple inputs,","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":51618,"byte_end":51711,"line_start":1378,"line_end":1378,"column_start":5,"column_end":98}},{"value":"/ see `benchmark_group`.","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":51716,"byte_end":51742,"line_start":1379,"line_end":1379,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":51747,"byte_end":51750,"line_start":1380,"line_end":1380,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":51755,"byte_end":51768,"line_start":1381,"line_end":1381,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":51773,"byte_end":51776,"line_start":1382,"line_end":1382,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":51781,"byte_end":51792,"line_start":1383,"line_end":1383,"column_start":5,"column_end":16}},{"value":"/ #[macro_use] extern crate criterion;","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":51797,"byte_end":51837,"line_start":1384,"line_end":1384,"column_start":5,"column_end":45}},{"value":"/ use self::criterion::*;","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":51842,"byte_end":51869,"line_start":1385,"line_end":1385,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":51874,"byte_end":51877,"line_start":1386,"line_end":1386,"column_start":5,"column_end":8}},{"value":"/ fn bench(c: &mut Criterion) {","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":51882,"byte_end":51915,"line_start":1387,"line_end":1387,"column_start":5,"column_end":38}},{"value":"/     // Setup (construct data, allocate memory, etc)","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":51920,"byte_end":51975,"line_start":1388,"line_end":1388,"column_start":5,"column_end":60}},{"value":"/     let input = 5u64;","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":51980,"byte_end":52005,"line_start":1389,"line_end":1389,"column_start":5,"column_end":30}},{"value":"/     c.bench_with_input(","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":52010,"byte_end":52037,"line_start":1390,"line_end":1390,"column_start":5,"column_end":32}},{"value":"/         BenchmarkId::new(\"function_name\", input), &input,","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":52042,"byte_end":52103,"line_start":1391,"line_end":1391,"column_start":5,"column_end":66}},{"value":"/         |b, i| b.iter(|| {","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":52108,"byte_end":52138,"line_start":1392,"line_end":1392,"column_start":5,"column_end":35}},{"value":"/             // Code to benchmark using input `i` goes here","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":52143,"byte_end":52205,"line_start":1393,"line_end":1393,"column_start":5,"column_end":67}},{"value":"/         }),","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":52210,"byte_end":52225,"line_start":1394,"line_end":1394,"column_start":5,"column_end":20}},{"value":"/     );","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":52230,"byte_end":52240,"line_start":1395,"line_end":1395,"column_start":5,"column_end":15}},{"value":"/ }","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":52245,"byte_end":52250,"line_start":1396,"line_end":1396,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":52255,"byte_end":52258,"line_start":1397,"line_end":1397,"column_start":5,"column_end":8}},{"value":"/ criterion_group!(benches, bench);","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":52263,"byte_end":52300,"line_start":1398,"line_end":1398,"column_start":5,"column_end":42}},{"value":"/ criterion_main!(benches);","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":52305,"byte_end":52334,"line_start":1399,"line_end":1399,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":52339,"byte_end":52346,"line_start":1400,"line_end":1400,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1774},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":53701,"byte_end":53727,"line_start":1441,"line_end":1441,"column_start":12,"column_end":38},"name":"bench_function_over_inputs","qualname":"<Criterion<M>>::bench_function_over_inputs","value":"pub fn bench_function_over_inputs<I, F>(&mut Self, &str, F, I)\n-> &mut Criterion<M> where I: IntoIterator, I::Item: fmt::Debug + 'static,\nF: FnMut(&mut Bencher<, M>, &I::Item) -> () + 'static","parent":null,"children":[],"decl_id":null,"docs":" Benchmarks a function under various inputs","sig":null,"attributes":[{"value":"/ Benchmarks a function under various inputs","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":52920,"byte_end":52966,"line_start":1417,"line_end":1417,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":52971,"byte_end":52974,"line_start":1418,"line_end":1418,"column_start":5,"column_end":8}},{"value":"/ This is a convenience method to execute several related benchmarks. Each benchmark will","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":52979,"byte_end":53070,"line_start":1419,"line_end":1419,"column_start":5,"column_end":96}},{"value":"/ receive the id: `${id}/${input}`.","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":53075,"byte_end":53112,"line_start":1420,"line_end":1420,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":53117,"byte_end":53120,"line_start":1421,"line_end":1421,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":53125,"byte_end":53138,"line_start":1422,"line_end":1422,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":53143,"byte_end":53146,"line_start":1423,"line_end":1423,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":53151,"byte_end":53162,"line_start":1424,"line_end":1424,"column_start":5,"column_end":16}},{"value":"/ # #[macro_use] extern crate criterion;","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":53167,"byte_end":53209,"line_start":1425,"line_end":1425,"column_start":5,"column_end":47}},{"value":"/ # use self::criterion::*;","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":53214,"byte_end":53243,"line_start":1426,"line_end":1426,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":53248,"byte_end":53251,"line_start":1427,"line_end":1427,"column_start":5,"column_end":8}},{"value":"/ fn bench(c: &mut Criterion) {","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":53256,"byte_end":53289,"line_start":1428,"line_end":1428,"column_start":5,"column_end":38}},{"value":"/     c.bench_function_over_inputs(\"from_elem\",","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":53294,"byte_end":53343,"line_start":1429,"line_end":1429,"column_start":5,"column_end":54}},{"value":"/         |b: &mut Bencher, size: &usize| {","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":53348,"byte_end":53393,"line_start":1430,"line_end":1430,"column_start":5,"column_end":50}},{"value":"/             b.iter(|| vec![0u8; *size]);","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":53398,"byte_end":53442,"line_start":1431,"line_end":1431,"column_start":5,"column_end":49}},{"value":"/         },","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":53447,"byte_end":53461,"line_start":1432,"line_end":1432,"column_start":5,"column_end":19}},{"value":"/         vec![1024, 2048, 4096]","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":53466,"byte_end":53500,"line_start":1433,"line_end":1433,"column_start":5,"column_end":39}},{"value":"/     );","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":53505,"byte_end":53515,"line_start":1434,"line_end":1434,"column_start":5,"column_end":15}},{"value":"/ }","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":53520,"byte_end":53525,"line_start":1435,"line_end":1435,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":53530,"byte_end":53533,"line_start":1436,"line_end":1436,"column_start":5,"column_end":8}},{"value":"/ criterion_group!(benches, bench);","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":53538,"byte_end":53575,"line_start":1437,"line_end":1437,"column_start":5,"column_end":42}},{"value":"/ criterion_main!(benches);","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":53580,"byte_end":53609,"line_start":1438,"line_end":1438,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":53614,"byte_end":53621,"line_start":1439,"line_end":1439,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1777},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":55221,"byte_end":55236,"line_start":1492,"line_end":1492,"column_start":12,"column_end":27},"name":"bench_functions","qualname":"<Criterion<M>>::bench_functions","value":"pub fn bench_functions<I>(&mut Self, &str, Vec<Fun<I, M>>, I)\n-> &mut Criterion<M> where I: fmt::Debug + 'static","parent":null,"children":[],"decl_id":null,"docs":" Benchmarks multiple functions","sig":null,"attributes":[{"value":"/ Benchmarks multiple functions","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":54049,"byte_end":54082,"line_start":1455,"line_end":1455,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":54087,"byte_end":54090,"line_start":1456,"line_end":1456,"column_start":5,"column_end":8}},{"value":"/ All functions get the same input and are compared with the other implementations.","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":54095,"byte_end":54180,"line_start":1457,"line_end":1457,"column_start":5,"column_end":90}},{"value":"/ Works similar to `bench_function`, but with multiple functions.","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":54185,"byte_end":54252,"line_start":1458,"line_end":1458,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":54257,"byte_end":54260,"line_start":1459,"line_end":1459,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":54265,"byte_end":54278,"line_start":1460,"line_end":1460,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":54283,"byte_end":54286,"line_start":1461,"line_end":1461,"column_start":5,"column_end":8}},{"value":"/ ``` rust","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":54291,"byte_end":54303,"line_start":1462,"line_end":1462,"column_start":5,"column_end":17}},{"value":"/ # #[macro_use] extern crate criterion;","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":54308,"byte_end":54350,"line_start":1463,"line_end":1463,"column_start":5,"column_end":47}},{"value":"/ # use self::criterion::*;","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":54355,"byte_end":54384,"line_start":1464,"line_end":1464,"column_start":5,"column_end":34}},{"value":"/ # fn seq_fib(i: &u32) {}","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":54389,"byte_end":54417,"line_start":1465,"line_end":1465,"column_start":5,"column_end":33}},{"value":"/ # fn par_fib(i: &u32) {}","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":54422,"byte_end":54450,"line_start":1466,"line_end":1466,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":54455,"byte_end":54458,"line_start":1467,"line_end":1467,"column_start":5,"column_end":8}},{"value":"/ fn bench_seq_fib(b: &mut Bencher, i: &u32) {","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":54463,"byte_end":54511,"line_start":1468,"line_end":1468,"column_start":5,"column_end":53}},{"value":"/     b.iter(|| {","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":54516,"byte_end":54535,"line_start":1469,"line_end":1469,"column_start":5,"column_end":24}},{"value":"/         seq_fib(i);","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":54540,"byte_end":54563,"line_start":1470,"line_end":1470,"column_start":5,"column_end":28}},{"value":"/     });","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":54568,"byte_end":54579,"line_start":1471,"line_end":1471,"column_start":5,"column_end":16}},{"value":"/ }","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":54584,"byte_end":54589,"line_start":1472,"line_end":1472,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":54594,"byte_end":54597,"line_start":1473,"line_end":1473,"column_start":5,"column_end":8}},{"value":"/ fn bench_par_fib(b: &mut Bencher, i: &u32) {","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":54602,"byte_end":54650,"line_start":1474,"line_end":1474,"column_start":5,"column_end":53}},{"value":"/     b.iter(|| {","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":54655,"byte_end":54674,"line_start":1475,"line_end":1475,"column_start":5,"column_end":24}},{"value":"/         par_fib(i);","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":54679,"byte_end":54702,"line_start":1476,"line_end":1476,"column_start":5,"column_end":28}},{"value":"/     });","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":54707,"byte_end":54718,"line_start":1477,"line_end":1477,"column_start":5,"column_end":16}},{"value":"/ }","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":54723,"byte_end":54728,"line_start":1478,"line_end":1478,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":54733,"byte_end":54736,"line_start":1479,"line_end":1479,"column_start":5,"column_end":8}},{"value":"/ fn bench(c: &mut Criterion) {","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":54741,"byte_end":54774,"line_start":1480,"line_end":1480,"column_start":5,"column_end":38}},{"value":"/     let sequential_fib = Fun::new(\"Sequential\", bench_seq_fib);","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":54779,"byte_end":54846,"line_start":1481,"line_end":1481,"column_start":5,"column_end":72}},{"value":"/     let parallel_fib = Fun::new(\"Parallel\", bench_par_fib);","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":54851,"byte_end":54914,"line_start":1482,"line_end":1482,"column_start":5,"column_end":68}},{"value":"/     let funs = vec![sequential_fib, parallel_fib];","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":54919,"byte_end":54973,"line_start":1483,"line_end":1483,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":54978,"byte_end":54981,"line_start":1484,"line_end":1484,"column_start":5,"column_end":8}},{"value":"/     c.bench_functions(\"Fibonacci\", funs, 14);","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":54986,"byte_end":55035,"line_start":1485,"line_end":1485,"column_start":5,"column_end":54}},{"value":"/ }","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":55040,"byte_end":55045,"line_start":1486,"line_end":1486,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":55050,"byte_end":55053,"line_start":1487,"line_end":1487,"column_start":5,"column_end":8}},{"value":"/ criterion_group!(benches, bench);","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":55058,"byte_end":55095,"line_start":1488,"line_end":1488,"column_start":5,"column_end":42}},{"value":"/ criterion_main!(benches);","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":55100,"byte_end":55129,"line_start":1489,"line_end":1489,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":55134,"byte_end":55141,"line_start":1490,"line_end":1490,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1780},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":56620,"byte_end":56625,"line_start":1535,"line_end":1535,"column_start":12,"column_end":17},"name":"bench","qualname":"<Criterion<M>>::bench","value":"pub fn bench<B: BenchmarkDefinition<M>>(&mut Self, &str, B)\n-> &mut Criterion<M>","parent":null,"children":[],"decl_id":null,"docs":" Executes the given benchmark. Use this variant to execute benchmarks\n with complex configuration. This can be used to compare multiple\n functions, execute benchmarks with custom configuration settings and\n more. See the Benchmark and ParameterizedBenchmark structs for more\n information.","sig":null,"attributes":[{"value":"/ Executes the given benchmark. Use this variant to execute benchmarks","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":55605,"byte_end":55677,"line_start":1509,"line_end":1509,"column_start":5,"column_end":77}},{"value":"/ with complex configuration. This can be used to compare multiple","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":55682,"byte_end":55750,"line_start":1510,"line_end":1510,"column_start":5,"column_end":73}},{"value":"/ functions, execute benchmarks with custom configuration settings and","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":55755,"byte_end":55827,"line_start":1511,"line_end":1511,"column_start":5,"column_end":77}},{"value":"/ more. See the Benchmark and ParameterizedBenchmark structs for more","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":55832,"byte_end":55903,"line_start":1512,"line_end":1512,"column_start":5,"column_end":76}},{"value":"/ information.","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":55908,"byte_end":55924,"line_start":1513,"line_end":1513,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":55929,"byte_end":55932,"line_start":1514,"line_end":1514,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":55937,"byte_end":55948,"line_start":1515,"line_end":1515,"column_start":5,"column_end":16}},{"value":"/ # #[macro_use] extern crate criterion;","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":55953,"byte_end":55995,"line_start":1516,"line_end":1516,"column_start":5,"column_end":47}},{"value":"/ # use criterion::*;","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":56000,"byte_end":56023,"line_start":1517,"line_end":1517,"column_start":5,"column_end":28}},{"value":"/ # fn routine_1() {}","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":56028,"byte_end":56051,"line_start":1518,"line_end":1518,"column_start":5,"column_end":28}},{"value":"/ # fn routine_2() {}","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":56056,"byte_end":56079,"line_start":1519,"line_end":1519,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":56084,"byte_end":56087,"line_start":1520,"line_end":1520,"column_start":5,"column_end":8}},{"value":"/ fn bench(c: &mut Criterion) {","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":56092,"byte_end":56125,"line_start":1521,"line_end":1521,"column_start":5,"column_end":38}},{"value":"/     // Setup (construct data, allocate memory, etc)","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":56130,"byte_end":56185,"line_start":1522,"line_end":1522,"column_start":5,"column_end":60}},{"value":"/     c.bench(","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":56190,"byte_end":56206,"line_start":1523,"line_end":1523,"column_start":5,"column_end":21}},{"value":"/         \"routines\",","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":56211,"byte_end":56234,"line_start":1524,"line_end":1524,"column_start":5,"column_end":28}},{"value":"/         Benchmark::new(\"routine_1\", |b| b.iter(|| routine_1()))","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":56239,"byte_end":56306,"line_start":1525,"line_end":1525,"column_start":5,"column_end":72}},{"value":"/             .with_function(\"routine_2\", |b| b.iter(|| routine_2()))","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":56311,"byte_end":56382,"line_start":1526,"line_end":1526,"column_start":5,"column_end":76}},{"value":"/             .sample_size(50)","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":56387,"byte_end":56419,"line_start":1527,"line_end":1527,"column_start":5,"column_end":37}},{"value":"/     );","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":56424,"byte_end":56434,"line_start":1528,"line_end":1528,"column_start":5,"column_end":15}},{"value":"/ }","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":56439,"byte_end":56444,"line_start":1529,"line_end":1529,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":56449,"byte_end":56452,"line_start":1530,"line_end":1530,"column_start":5,"column_end":8}},{"value":"/ criterion_group!(benches, bench);","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":56457,"byte_end":56494,"line_start":1531,"line_end":1531,"column_start":5,"column_end":42}},{"value":"/ criterion_main!(benches);","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":56499,"byte_end":56528,"line_start":1532,"line_end":1532,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":56533,"byte_end":56540,"line_start":1533,"line_end":1533,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2466},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":58814,"byte_end":58819,"line_start":1609,"line_end":1609,"column_start":5,"column_end":10},"name":"Bytes","qualname":"::Throughput::Bytes","value":"Throughput::Bytes(u64)","parent":{"krate":0,"index":2465},"children":[],"decl_id":null,"docs":" Measure throughput in terms of bytes/second. The value should be the number of bytes\n processed by one iteration of the benchmarked code. Typically, this would be the length of\n an input string or `&[u8]`.\n","sig":null,"attributes":[{"value":"/ Measure throughput in terms of bytes/second. The value should be the number of bytes","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":58586,"byte_end":58674,"line_start":1606,"line_end":1606,"column_start":5,"column_end":93}},{"value":"/ processed by one iteration of the benchmarked code. Typically, this would be the length of","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":58679,"byte_end":58773,"line_start":1607,"line_end":1607,"column_start":5,"column_end":99}},{"value":"/ an input string or `&[u8]`.","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":58778,"byte_end":58809,"line_start":1608,"line_end":1608,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2469},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":59143,"byte_end":59151,"line_start":1615,"line_end":1615,"column_start":5,"column_end":13},"name":"Elements","qualname":"::Throughput::Elements","value":"Throughput::Elements(u64)","parent":{"krate":0,"index":2465},"children":[],"decl_id":null,"docs":" Measure throughput in terms of elements/second. The value should be the number of elements\n processed by one iteration of the benchmarked code. Typically, this would be the size of a\n collection, but could also be the number of lines of input text or the number of values to\n parse.\n","sig":null,"attributes":[{"value":"/ Measure throughput in terms of elements/second. The value should be the number of elements","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":58831,"byte_end":58925,"line_start":1611,"line_end":1611,"column_start":5,"column_end":99}},{"value":"/ processed by one iteration of the benchmarked code. Typically, this would be the size of a","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":58930,"byte_end":59024,"line_start":1612,"line_end":1612,"column_start":5,"column_end":99}},{"value":"/ collection, but could also be the number of lines of input text or the number of values to","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":59029,"byte_end":59123,"line_start":1613,"line_end":1613,"column_start":5,"column_end":99}},{"value":"/ parse.","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":59128,"byte_end":59138,"line_start":1614,"line_end":1614,"column_start":5,"column_end":15}}]},{"kind":"Enum","id":{"krate":0,"index":2465},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":58569,"byte_end":58579,"line_start":1605,"line_end":1605,"column_start":10,"column_end":20},"name":"Throughput","qualname":"::Throughput","value":"pub enum Throughput {\n\n    /// Measure throughput in terms of bytes/second. The value should be the number of bytes\n    /// processed by one iteration of the benchmarked code. Typically, this would be the length of\n    /// an input string or `&[u8]`.\n    Bytes(u64),\n\n    /// Measure throughput in terms of elements/second. The value should be the number of elements\n    /// processed by one iteration of the benchmarked code. Typically, this would be the size of a\n    /// collection, but could also be the number of lines of input text or the number of values to\n    /// parse.\n    Elements(u64),\n}","parent":null,"children":[{"krate":0,"index":2466},{"krate":0,"index":2469}],"decl_id":null,"docs":" Enum representing different ways of measuring the throughput of benchmarked code.\n If the throughput setting is configured for a benchmark then the estimated throughput will\n be reported as well as the time per iteration.\n","sig":null,"attributes":[{"value":"/ Enum representing different ways of measuring the throughput of benchmarked code.","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":58269,"byte_end":58354,"line_start":1601,"line_end":1601,"column_start":1,"column_end":86}},{"value":"/ If the throughput setting is configured for a benchmark then the estimated throughput will","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":58355,"byte_end":58449,"line_start":1602,"line_end":1602,"column_start":1,"column_end":95}},{"value":"/ be reported as well as the time per iteration.","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":58450,"byte_end":58500,"line_start":1603,"line_end":1603,"column_start":1,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2526},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":59266,"byte_end":59272,"line_start":1622,"line_end":1622,"column_start":5,"column_end":11},"name":"Linear","qualname":"::AxisScale::Linear","value":"AxisScale::Linear","parent":{"krate":0,"index":2525},"children":[],"decl_id":null,"docs":" Axes scale linearly\n","sig":null,"attributes":[{"value":"/ Axes scale linearly","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":59238,"byte_end":59261,"line_start":1621,"line_end":1621,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2528},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":59314,"byte_end":59325,"line_start":1625,"line_end":1625,"column_start":5,"column_end":16},"name":"Logarithmic","qualname":"::AxisScale::Logarithmic","value":"AxisScale::Logarithmic","parent":{"krate":0,"index":2525},"children":[],"decl_id":null,"docs":" Axes scale logarithmically\n","sig":null,"attributes":[{"value":"/ Axes scale logarithmically","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":59279,"byte_end":59309,"line_start":1624,"line_end":1624,"column_start":5,"column_end":35}}]},{"kind":"Enum","id":{"krate":0,"index":2525},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":59222,"byte_end":59231,"line_start":1620,"line_end":1620,"column_start":10,"column_end":19},"name":"AxisScale","qualname":"::AxisScale","value":"pub enum AxisScale {\n\n    /// Axes scale linearly\n    Linear,\n\n    /// Axes scale logarithmically\n    Logarithmic,\n}","parent":null,"children":[{"krate":0,"index":2526},{"krate":0,"index":2528}],"decl_id":null,"docs":" Axis scaling type\n","sig":null,"attributes":[{"value":"/ Axis scaling type","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":59161,"byte_end":59182,"line_start":1618,"line_end":1618,"column_start":1,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":2535},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":59968,"byte_end":59985,"line_start":1644,"line_end":1644,"column_start":12,"column_end":29},"name":"PlotConfiguration","qualname":"::PlotConfiguration","value":"PlotConfiguration {  }","parent":null,"children":[{"krate":0,"index":2536}],"decl_id":null,"docs":" Contains the configuration options for the plots generated by a particular benchmark\n or benchmark group.","sig":null,"attributes":[{"value":"/ Contains the configuration options for the plots generated by a particular benchmark","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":59330,"byte_end":59418,"line_start":1628,"line_end":1628,"column_start":1,"column_end":89}},{"value":"/ or benchmark group.","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":59419,"byte_end":59442,"line_start":1629,"line_end":1629,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":59443,"byte_end":59446,"line_start":1630,"line_end":1630,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":59447,"byte_end":59458,"line_start":1631,"line_end":1631,"column_start":1,"column_end":12}},{"value":"/ use self::criterion::{Bencher, Criterion, Benchmark, PlotConfiguration, AxisScale};","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":59459,"byte_end":59546,"line_start":1632,"line_end":1632,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":59547,"byte_end":59550,"line_start":1633,"line_end":1633,"column_start":1,"column_end":4}},{"value":"/ let plot_config = PlotConfiguration::default()","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":59551,"byte_end":59601,"line_start":1634,"line_end":1634,"column_start":1,"column_end":51}},{"value":"/     .summary_scale(AxisScale::Logarithmic);","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":59602,"byte_end":59649,"line_start":1635,"line_end":1635,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":59650,"byte_end":59653,"line_start":1636,"line_end":1636,"column_start":1,"column_end":4}},{"value":"/ // Using Criterion::default() for simplicity; normally you'd use the macros.","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":59654,"byte_end":59734,"line_start":1637,"line_end":1637,"column_start":1,"column_end":81}},{"value":"/ let mut criterion = Criterion::default();","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":59735,"byte_end":59780,"line_start":1638,"line_end":1638,"column_start":1,"column_end":46}},{"value":"/ let mut benchmark_group = criterion.benchmark_group(\"Group name\");","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":59781,"byte_end":59851,"line_start":1639,"line_end":1639,"column_start":1,"column_end":71}},{"value":"/ benchmark_group.plot_config(plot_config);","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":59852,"byte_end":59897,"line_start":1640,"line_end":1640,"column_start":1,"column_end":46}},{"value":"/ // Use benchmark group","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":59898,"byte_end":59924,"line_start":1641,"line_end":1641,"column_start":1,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":59925,"byte_end":59932,"line_start":1642,"line_end":1642,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1792},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":60448,"byte_end":60461,"line_start":1660,"line_end":1660,"column_start":12,"column_end":25},"name":"summary_scale","qualname":"<PlotConfiguration>::summary_scale","value":"pub fn summary_scale(Self, AxisScale) -> PlotConfiguration","parent":null,"children":[],"decl_id":null,"docs":" Set the axis scale (linear or logarithmic) for the summary plots. Typically, you would\n set this to logarithmic if benchmarking over a range of inputs which scale exponentially.\n Defaults to linear.\n","sig":null,"attributes":[{"value":"/ Set the axis scale (linear or logarithmic) for the summary plots. Typically, you would","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":60220,"byte_end":60310,"line_start":1657,"line_end":1657,"column_start":5,"column_end":95}},{"value":"/ set this to logarithmic if benchmarking over a range of inputs which scale exponentially.","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":60315,"byte_end":60408,"line_start":1658,"line_end":1658,"column_start":5,"column_end":98}},{"value":"/ Defaults to linear.","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":60413,"byte_end":60436,"line_start":1659,"line_end":1659,"column_start":5,"column_end":28}}]},{"kind":"Function","id":{"krate":0,"index":1793},"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":60666,"byte_end":60672,"line_start":1668,"line_end":1668,"column_start":8,"column_end":14},"name":"runner","qualname":"::runner","value":"pub fn runner(&[&Fn() -> ()])","parent":null,"children":[],"decl_id":null,"docs":" Custom-test-framework runner. Should not be called directly.\n","sig":null,"attributes":[{"value":"/ Custom-test-framework runner. Should not be called directly.","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":60579,"byte_end":60643,"line_start":1666,"line_end":1666,"column_start":1,"column_end":65}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark.rs","byte_start":78934,"byte_end":78956,"line_start":37,"line_end":37,"column_start":18,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":111}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark.rs","byte_start":79336,"byte_end":79358,"line_start":52,"line_end":52,"column_start":6,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":113}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark.rs","byte_start":86964,"byte_end":86973,"line_start":239,"line_end":239,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1825},{"krate":0,"index":1826},{"krate":0,"index":1827},{"krate":0,"index":1828},{"krate":0,"index":1829},{"krate":0,"index":1830},{"krate":0,"index":1831},{"krate":0,"index":1832},{"krate":0,"index":137},{"krate":0,"index":140},{"krate":0,"index":144}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark.rs","byte_start":88658,"byte_end":88667,"line_start":301,"line_end":301,"column_start":49,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":147}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark.rs","byte_start":90467,"byte_end":90489,"line_start":360,"line_end":360,"column_start":12,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1833},{"krate":0,"index":1834},{"krate":0,"index":1835},{"krate":0,"index":1836},{"krate":0,"index":1837},{"krate":0,"index":1838},{"krate":0,"index":1839},{"krate":0,"index":1840},{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":156},{"krate":0,"index":159}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark.rs","byte_start":93043,"byte_end":93065,"line_start":446,"line_end":446,"column_start":39,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":164}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":98704,"byte_end":98718,"line_start":84,"line_end":84,"column_start":26,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":192},{"krate":0,"index":193},{"krate":0,"index":194},{"krate":0,"index":195},{"krate":0,"index":196},{"krate":0,"index":197},{"krate":0,"index":198},{"krate":0,"index":199},{"krate":0,"index":200},{"krate":0,"index":201},{"krate":0,"index":202},{"krate":0,"index":206},{"krate":0,"index":210},{"krate":0,"index":213}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":107534,"byte_end":107548,"line_start":323,"line_end":323,"column_start":35,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":217}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":108707,"byte_end":108718,"line_start":357,"line_end":357,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":219},{"krate":0,"index":222},{"krate":0,"index":224},{"krate":0,"index":225}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":111228,"byte_end":111239,"line_start":423,"line_end":423,"column_start":28,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":111280,"byte_end":111281,"line_start":424,"line_end":424,"column_start":38,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":111494,"byte_end":111505,"line_start":431,"line_end":431,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":235}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":111619,"byte_end":111620,"line_start":436,"line_end":436,"column_start":43,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":238}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/csv_report.rs","byte_start":112364,"byte_end":112379,"line_start":24,"line_end":24,"column_start":16,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":256}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/csv_report.rs","byte_start":113754,"byte_end":113767,"line_start":61,"line_end":61,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":260}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/csv_report.rs","byte_start":114154,"byte_end":114167,"line_start":76,"line_end":76,"column_start":17,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":262}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/error.rs","byte_start":115079,"byte_end":115084,"line_start":25,"line_end":25,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":271}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/error.rs","byte_start":115773,"byte_end":115778,"line_start":43,"line_end":43,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":273},{"krate":0,"index":274}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/error.rs","byte_start":116404,"byte_end":116409,"line_start":62,"line_end":62,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":276}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/estimate.rs","byte_start":116911,"byte_end":116920,"line_start":16,"line_end":16,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":286}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/html/mod.rs","byte_start":124208,"byte_end":124227,"line_start":58,"line_end":58,"column_start":6,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":368}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/html/mod.rs","byte_start":124896,"byte_end":124900,"line_start":92,"line_end":92,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":370}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/html/mod.rs","byte_start":125700,"byte_end":125710,"line_start":126,"line_end":126,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":374},{"krate":0,"index":375},{"krate":0,"index":376},{"krate":0,"index":377}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/html/mod.rs","byte_start":127381,"byte_end":127395,"line_start":181,"line_end":181,"column_start":10,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":380}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/html/mod.rs","byte_start":130210,"byte_end":130214,"line_start":264,"line_end":264,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":396}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/html/mod.rs","byte_start":131067,"byte_end":131071,"line_start":284,"line_end":284,"column_start":17,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":398},{"krate":0,"index":401},{"krate":0,"index":413}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/html/mod.rs","byte_start":140473,"byte_end":140477,"line_start":544,"line_end":544,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":419},{"krate":0,"index":422},{"krate":0,"index":423},{"krate":0,"index":427}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Inherent","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/measurement.rs","byte_start":159784,"byte_end":159801,"line_start":107,"line_end":107,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":478},{"krate":0,"index":479}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/measurement.rs","byte_start":161190,"byte_end":161207,"line_start":148,"line_end":148,"column_start":25,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":481},{"krate":0,"index":482},{"krate":0,"index":483}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/measurement.rs","byte_start":162446,"byte_end":162454,"line_start":190,"line_end":190,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":487},{"krate":0,"index":488},{"krate":0,"index":489},{"krate":0,"index":490},{"krate":0,"index":491},{"krate":0,"index":492},{"krate":0,"index":493},{"krate":0,"index":494}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Inherent","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/plot/gnuplot_backend/summary.rs","byte_start":203168,"byte_end":203177,"line_start":26,"line_end":26,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":663}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/plot/gnuplot_backend/mod.rs","byte_start":167061,"byte_end":167064,"line_start":60,"line_end":60,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":739}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/plot/gnuplot_backend/mod.rs","byte_start":167260,"byte_end":167267,"line_start":72,"line_end":72,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":741},{"krate":0,"index":743},{"krate":0,"index":745},{"krate":0,"index":747},{"krate":0,"index":749},{"krate":0,"index":751},{"krate":0,"index":752},{"krate":0,"index":753}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/plot/plotters_backend/mod.rs","byte_start":212198,"byte_end":212213,"line_start":36,"line_end":36,"column_start":18,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":920},{"krate":0,"index":921},{"krate":0,"index":922},{"krate":0,"index":923},{"krate":0,"index":924},{"krate":0,"index":925},{"krate":0,"index":926},{"krate":0,"index":927}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/plot/mod.rs","byte_start":163537,"byte_end":163548,"line_start":19,"line_end":19,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":940},{"krate":0,"index":941},{"krate":0,"index":942},{"krate":0,"index":943}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Inherent","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/plot/mod.rs","byte_start":164563,"byte_end":164571,"line_start":56,"line_end":56,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":946}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/profiler.rs","byte_start":254873,"byte_end":254889,"line_start":25,"line_end":25,"column_start":19,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":964},{"krate":0,"index":965}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Inherent","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/report.rs","byte_start":256396,"byte_end":256411,"line_start":45,"line_end":45,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1015},{"krate":0,"index":1016}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Inherent","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/report.rs","byte_start":258269,"byte_end":258280,"line_start":109,"line_end":109,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1020},{"krate":0,"index":1021},{"krate":0,"index":1022},{"krate":0,"index":1023},{"krate":0,"index":1024},{"krate":0,"index":1026},{"krate":0,"index":1029},{"krate":0,"index":1030}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/report.rs","byte_start":261874,"byte_end":261885,"line_start":226,"line_end":226,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1032}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/report.rs","byte_start":262016,"byte_end":262027,"line_start":231,"line_end":231,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1034}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/report.rs","byte_start":262729,"byte_end":262742,"line_start":256,"line_end":256,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1041}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/report.rs","byte_start":264134,"byte_end":264141,"line_start":302,"line_end":302,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1056}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/report.rs","byte_start":264255,"byte_end":264262,"line_start":307,"line_end":307,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1058},{"krate":0,"index":1059},{"krate":0,"index":1060},{"krate":0,"index":1061},{"krate":0,"index":1062},{"krate":0,"index":1063},{"krate":0,"index":1064},{"krate":0,"index":1065},{"krate":0,"index":1066}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/report.rs","byte_start":266400,"byte_end":266409,"line_start":388,"line_end":388,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1073},{"krate":0,"index":1074},{"krate":0,"index":1075},{"krate":0,"index":1076},{"krate":0,"index":1077},{"krate":0,"index":1078},{"krate":0,"index":1079},{"krate":0,"index":1080},{"krate":0,"index":1081}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/report.rs","byte_start":269111,"byte_end":269120,"line_start":498,"line_end":498,"column_start":17,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1085},{"krate":0,"index":1086},{"krate":0,"index":1087},{"krate":0,"index":1088},{"krate":0,"index":1089},{"krate":0,"index":1090},{"krate":0,"index":1091}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/report.rs","byte_start":278236,"byte_end":278249,"line_start":743,"line_end":743,"column_start":17,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1097},{"krate":0,"index":1098}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Inherent","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/routine.rs","byte_start":288108,"byte_end":288116,"line_start":172,"line_end":172,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1141}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/routine.rs","byte_start":288401,"byte_end":288409,"line_start":186,"line_end":186,"column_start":46,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1146},{"krate":0,"index":1148}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Inherent","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/bivariate/regression.rs","byte_start":299256,"byte_end":299261,"line_start":12,"line_end":12,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1157},{"krate":0,"index":1158}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Inherent","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/bivariate/resamples.rs","byte_start":300664,"byte_end":300673,"line_start":16,"line_end":16,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1176},{"krate":0,"index":1177}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/bivariate/mod.rs","byte_start":292868,"byte_end":292872,"line_start":21,"line_end":21,"column_start":25,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/bivariate/mod.rs","byte_start":292990,"byte_end":292994,"line_start":24,"line_end":24,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1202}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Inherent","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/bivariate/mod.rs","byte_start":293085,"byte_end":293089,"line_start":30,"line_end":30,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1207},{"krate":0,"index":1208}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Inherent","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/bivariate/mod.rs","byte_start":293381,"byte_end":293385,"line_start":45,"line_end":45,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1213},{"krate":0,"index":1214},{"krate":0,"index":1223},{"krate":0,"index":1224}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/bivariate/mod.rs","byte_start":295258,"byte_end":295263,"line_start":115,"line_end":115,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1235},{"krate":0,"index":1236}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Inherent","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/univariate/percentiles.rs","byte_start":316577,"byte_end":316588,"line_start":10,"line_end":10,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1337},{"krate":0,"index":1338},{"krate":0,"index":1339},{"krate":0,"index":1340},{"krate":0,"index":1341}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Inherent","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/univariate/resamples.rs","byte_start":318775,"byte_end":318784,"line_start":17,"line_end":17,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1358},{"krate":0,"index":1359}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Inherent","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/univariate/sample.rs","byte_start":322189,"byte_end":322195,"line_start":18,"line_end":18,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1377},{"krate":0,"index":1378},{"krate":0,"index":1380},{"krate":0,"index":1381},{"krate":0,"index":1384},{"krate":0,"index":1385},{"krate":0,"index":1387},{"krate":0,"index":1391},{"krate":0,"index":1392},{"krate":0,"index":1393},{"krate":0,"index":1394},{"krate":0,"index":1395},{"krate":0,"index":1399}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/univariate/sample.rs","byte_start":328999,"byte_end":329005,"line_start":249,"line_end":249,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1410},{"krate":0,"index":1411}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/univariate/kde/kernel.rs","byte_start":333168,"byte_end":333176,"line_start":18,"line_end":18,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1420}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Inherent","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/univariate/kde/mod.rs","byte_start":329441,"byte_end":329444,"line_start":21,"line_end":21,"column_start":16,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1437},{"krate":0,"index":1438},{"krate":0,"index":1439},{"krate":0,"index":1441}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Inherent","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/univariate/kde/mod.rs","byte_start":330734,"byte_end":330743,"line_start":72,"line_end":72,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1447}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Inherent","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/univariate/outliers/tukey.rs","byte_start":338729,"byte_end":338742,"line_start":66,"line_end":66,"column_start":13,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1480},{"krate":0,"index":1481},{"krate":0,"index":1482}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/univariate/outliers/tukey.rs","byte_start":339940,"byte_end":339953,"line_start":114,"line_end":114,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1486},{"krate":0,"index":1487}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/univariate/outliers/tukey.rs","byte_start":340141,"byte_end":340154,"line_start":126,"line_end":126,"column_start":30,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1491},{"krate":0,"index":1492}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/univariate/outliers/tukey.rs","byte_start":341285,"byte_end":341289,"line_start":178,"line_end":178,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1513},{"krate":0,"index":1514},{"krate":0,"index":1516}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Inherent","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/univariate/outliers/tukey.rs","byte_start":342357,"byte_end":342362,"line_start":224,"line_end":224,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1529},{"krate":0,"index":1530},{"krate":0,"index":1531},{"krate":0,"index":1532},{"krate":0,"index":1533}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Inherent","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/mod.rs","byte_start":290359,"byte_end":290371,"line_start":27,"line_end":27,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1579},{"krate":0,"index":1580},{"krate":0,"index":1581}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/mod.rs","byte_start":291787,"byte_end":291799,"line_start":77,"line_end":77,"column_start":19,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1586},{"krate":0,"index":1587}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Inherent","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":4598,"byte_end":4601,"line_start":157,"line_end":157,"column_start":25,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1658}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Inherent","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":9218,"byte_end":9227,"line_start":245,"line_end":245,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1661}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Inherent","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":11668,"byte_end":11675,"line_start":287,"line_end":287,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1673},{"krate":0,"index":1676},{"krate":0,"index":1678},{"krate":0,"index":1683},{"krate":0,"index":1688},{"krate":0,"index":1693},{"krate":0,"index":1699},{"krate":0,"index":1705}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":24729,"byte_end":24738,"line_start":690,"line_end":690,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1725}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Inherent","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":26713,"byte_end":26722,"line_start":745,"line_end":745,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1728},{"krate":0,"index":1730},{"krate":0,"index":1732},{"krate":0,"index":1733},{"krate":0,"index":1734},{"krate":0,"index":1735},{"krate":0,"index":1736},{"krate":0,"index":1737},{"krate":0,"index":1738},{"krate":0,"index":1739},{"krate":0,"index":1740},{"krate":0,"index":1741},{"krate":0,"index":1742},{"krate":0,"index":1743},{"krate":0,"index":1744},{"krate":0,"index":1745},{"krate":0,"index":1746},{"krate":0,"index":1749},{"krate":0,"index":1750},{"krate":0,"index":1751},{"krate":0,"index":1752},{"krate":0,"index":1764},{"krate":0,"index":1765}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Inherent","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":50710,"byte_end":50719,"line_start":1344,"line_end":1344,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1769},{"krate":0,"index":1771},{"krate":0,"index":1774},{"krate":0,"index":1777},{"krate":0,"index":1780}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":56927,"byte_end":56935,"line_start":1551,"line_end":1551,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1786}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":60038,"byte_end":60055,"line_start":1648,"line_end":1648,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1790}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Inherent","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":60196,"byte_end":60213,"line_start":1656,"line_end":1656,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1792}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":1696,"byte_end":1707,"line_start":68,"line_end":68,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":453}},{"kind":"Mod","span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":1727,"byte_end":1735,"line_start":70,"line_end":70,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":956}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark.rs","byte_start":78934,"byte_end":78956,"line_start":37,"line_end":37,"column_start":18,"column_end":40},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":1814},"to":{"krate":2,"index":1959}},{"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark.rs","byte_start":79336,"byte_end":79358,"line_start":52,"line_end":52,"column_start":6,"column_end":28},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":1814},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark.rs","byte_start":81036,"byte_end":81041,"line_start":95,"line_end":95,"column_start":59,"column_end":64},"kind":"SuperTrait","from":{"krate":2,"index":1976},"to":{"krate":0,"index":131}},{"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark.rs","byte_start":86964,"byte_end":86973,"line_start":239,"line_end":239,"column_start":9,"column_end":18},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":126},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark.rs","byte_start":88658,"byte_end":88667,"line_start":301,"line_end":301,"column_start":49,"column_end":58},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":126},"to":{"krate":0,"index":131}},{"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark.rs","byte_start":90467,"byte_end":90489,"line_start":360,"line_end":360,"column_start":12,"column_end":34},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":119},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark.rs","byte_start":93043,"byte_end":93065,"line_start":446,"line_end":446,"column_start":39,"column_end":61},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":119},"to":{"krate":0,"index":131}},{"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":98704,"byte_end":98718,"line_start":84,"line_end":84,"column_start":26,"column_end":40},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":180},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":107534,"byte_end":107548,"line_start":323,"line_end":323,"column_start":35,"column_end":49},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":180},"to":{"krate":2,"index":2166}},{"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":108707,"byte_end":108718,"line_start":357,"line_end":357,"column_start":6,"column_end":17},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":1841},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":111228,"byte_end":111239,"line_start":423,"line_end":423,"column_start":28,"column_end":39},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":1841},"to":{"krate":0,"index":228}},{"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":111280,"byte_end":111281,"line_start":424,"line_end":424,"column_start":38,"column_end":39},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":231},"to":{"krate":0,"index":228}},{"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":111411,"byte_end":111417,"line_start":428,"line_end":428,"column_start":37,"column_end":43},"kind":"SuperTrait","from":{"krate":0,"index":228},"to":{"krate":0,"index":232}},{"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":111494,"byte_end":111505,"line_start":431,"line_end":431,"column_start":26,"column_end":37},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":1841},"to":{"krate":0,"index":232}},{"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/benchmark_group.rs","byte_start":111619,"byte_end":111620,"line_start":436,"line_end":436,"column_start":43,"column_end":44},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":237},"to":{"krate":0,"index":232}},{"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/csv_report.rs","byte_start":112364,"byte_end":112379,"line_start":24,"line_end":24,"column_start":16,"column_end":31},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":251},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/csv_report.rs","byte_start":113754,"byte_end":113767,"line_start":61,"line_end":61,"column_start":6,"column_end":19},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":257},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/csv_report.rs","byte_start":114154,"byte_end":114167,"line_start":76,"line_end":76,"column_start":17,"column_end":30},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":257},"to":{"krate":0,"index":1043}},{"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/error.rs","byte_start":115079,"byte_end":115084,"line_start":25,"line_end":25,"column_start":23,"column_end":28},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":1875},"to":{"krate":2,"index":6320}},{"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/error.rs","byte_start":115773,"byte_end":115778,"line_start":43,"line_end":43,"column_start":19,"column_end":24},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":1875},"to":{"krate":1,"index":1690}},{"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/error.rs","byte_start":116404,"byte_end":116409,"line_start":62,"line_end":62,"column_start":25,"column_end":30},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":1875},"to":{"krate":2,"index":1889}},{"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/estimate.rs","byte_start":116911,"byte_end":116920,"line_start":16,"line_end":16,"column_start":23,"column_end":32},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":1891},"to":{"krate":2,"index":6320}},{"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/html/mod.rs","byte_start":124208,"byte_end":124227,"line_start":58,"line_end":58,"column_start":6,"column_end":25},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":1988},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/html/mod.rs","byte_start":124896,"byte_end":124900,"line_start":92,"line_end":92,"column_start":6,"column_end":10},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":2020},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/html/mod.rs","byte_start":125700,"byte_end":125710,"line_start":126,"line_end":126,"column_start":10,"column_end":20},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":2043},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/html/mod.rs","byte_start":127381,"byte_end":127395,"line_start":181,"line_end":181,"column_start":10,"column_end":24},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":2068},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/html/mod.rs","byte_start":130210,"byte_end":130214,"line_start":264,"line_end":264,"column_start":6,"column_end":10},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":392},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/html/mod.rs","byte_start":131067,"byte_end":131071,"line_start":284,"line_end":284,"column_start":17,"column_end":21},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":392},"to":{"krate":0,"index":1043}},{"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/html/mod.rs","byte_start":140473,"byte_end":140477,"line_start":544,"line_end":544,"column_start":6,"column_end":10},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":392},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/measurement.rs","byte_start":159784,"byte_end":159801,"line_start":107,"line_end":107,"column_start":6,"column_end":23},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":475},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/measurement.rs","byte_start":161190,"byte_end":161207,"line_start":148,"line_end":148,"column_start":25,"column_end":42},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":475},"to":{"krate":0,"index":460}},{"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/measurement.rs","byte_start":162446,"byte_end":162454,"line_start":190,"line_end":190,"column_start":22,"column_end":30},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":484},"to":{"krate":0,"index":466}},{"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/plot/gnuplot_backend/summary.rs","byte_start":203168,"byte_end":203177,"line_start":26,"line_end":26,"column_start":6,"column_end":15},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":2525},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/plot/gnuplot_backend/mod.rs","byte_start":167061,"byte_end":167064,"line_start":60,"line_end":60,"column_start":23,"column_end":26},"kind":{"Impl":{"id":44}},"from":{"krate":5,"index":4366},"to":{"krate":0,"index":734}},{"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/plot/gnuplot_backend/mod.rs","byte_start":167260,"byte_end":167267,"line_start":72,"line_end":72,"column_start":18,"column_end":25},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":2101},"to":{"krate":0,"index":947}},{"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/plot/plotters_backend/mod.rs","byte_start":212198,"byte_end":212213,"line_start":36,"line_end":36,"column_start":18,"column_end":33},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":2105},"to":{"krate":0,"index":947}},{"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/plot/mod.rs","byte_start":163537,"byte_end":163548,"line_start":19,"line_end":19,"column_start":10,"column_end":21},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":2109},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/plot/mod.rs","byte_start":164563,"byte_end":164571,"line_start":56,"line_end":56,"column_start":10,"column_end":18},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":2120},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/profiler.rs","byte_start":254873,"byte_end":254889,"line_start":25,"line_end":25,"column_start":19,"column_end":35},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":961},"to":{"krate":0,"index":958}},{"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/report.rs","byte_start":256396,"byte_end":256411,"line_start":45,"line_end":45,"column_start":10,"column_end":25},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1005},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/report.rs","byte_start":258269,"byte_end":258280,"line_start":109,"line_end":109,"column_start":6,"column_end":17},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":2148},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/report.rs","byte_start":261874,"byte_end":261885,"line_start":226,"line_end":226,"column_start":23,"column_end":34},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":2148},"to":{"krate":2,"index":6320}},{"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/report.rs","byte_start":262016,"byte_end":262027,"line_start":231,"line_end":231,"column_start":21,"column_end":32},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":2148},"to":{"krate":2,"index":6315}},{"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/report.rs","byte_start":262729,"byte_end":262742,"line_start":256,"line_end":256,"column_start":6,"column_end":19},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1036},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/report.rs","byte_start":264134,"byte_end":264141,"line_start":302,"line_end":302,"column_start":6,"column_end":13},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":1053},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/report.rs","byte_start":264255,"byte_end":264262,"line_start":307,"line_end":307,"column_start":17,"column_end":24},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":1053},"to":{"krate":0,"index":1043}},{"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/report.rs","byte_start":266400,"byte_end":266409,"line_start":388,"line_end":388,"column_start":6,"column_end":15},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":1067},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/report.rs","byte_start":269111,"byte_end":269120,"line_start":498,"line_end":498,"column_start":17,"column_end":26},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":1067},"to":{"krate":0,"index":1043}},{"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/report.rs","byte_start":278236,"byte_end":278249,"line_start":743,"line_end":743,"column_start":17,"column_end":30},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":1094},"to":{"krate":0,"index":1043}},{"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/routine.rs","byte_start":288108,"byte_end":288116,"line_start":172,"line_end":172,"column_start":28,"column_end":36},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1130},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/routine.rs","byte_start":288401,"byte_end":288409,"line_start":186,"line_end":186,"column_start":46,"column_end":54},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1130},"to":{"krate":0,"index":1119}},{"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/bivariate/regression.rs","byte_start":299256,"byte_end":299261,"line_start":12,"line_end":12,"column_start":9,"column_end":14},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":2221},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/bivariate/resamples.rs","byte_start":300664,"byte_end":300673,"line_start":16,"line_end":16,"column_start":16,"column_end":25},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1165},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/bivariate/mod.rs","byte_start":292868,"byte_end":292872,"line_start":21,"line_end":21,"column_start":25,"column_end":29},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1187},"to":{"krate":2,"index":1981}},{"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/bivariate/mod.rs","byte_start":292990,"byte_end":292994,"line_start":24,"line_end":24,"column_start":26,"column_end":30},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1187},"to":{"krate":2,"index":1669}},{"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/bivariate/mod.rs","byte_start":293085,"byte_end":293089,"line_start":30,"line_end":30,"column_start":16,"column_end":20},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1187},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/bivariate/mod.rs","byte_start":293381,"byte_end":293385,"line_start":45,"line_end":45,"column_start":16,"column_end":20},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":1187},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/bivariate/mod.rs","byte_start":295258,"byte_end":295263,"line_start":115,"line_end":115,"column_start":29,"column_end":34},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":1225},"to":{"krate":2,"index":5040}},{"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/tuple.rs","byte_start":301995,"byte_end":302000,"line_start":6,"line_end":6,"column_start":18,"column_end":23},"kind":"SuperTrait","from":{"krate":2,"index":1976},"to":{"krate":0,"index":1239}},{"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/tuple.rs","byte_start":302340,"byte_end":302345,"line_start":15,"line_end":15,"column_start":32,"column_end":37},"kind":"SuperTrait","from":{"krate":2,"index":1976},"to":{"krate":0,"index":1242}},{"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/tuple.rs","byte_start":302556,"byte_end":302561,"line_start":21,"line_end":21,"column_start":39,"column_end":44},"kind":"SuperTrait","from":{"krate":2,"index":1976},"to":{"krate":0,"index":1244}},{"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/univariate/percentiles.rs","byte_start":316577,"byte_end":316588,"line_start":10,"line_end":10,"column_start":9,"column_end":20},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1331},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/univariate/resamples.rs","byte_start":318775,"byte_end":318784,"line_start":17,"line_end":17,"column_start":13,"column_end":22},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1349},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/univariate/sample.rs","byte_start":322189,"byte_end":322195,"line_start":18,"line_end":18,"column_start":9,"column_end":15},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1371},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/univariate/sample.rs","byte_start":328999,"byte_end":329005,"line_start":249,"line_end":249,"column_start":24,"column_end":30},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1371},"to":{"krate":2,"index":2142}},{"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/univariate/kde/kernel.rs","byte_start":332953,"byte_end":332957,"line_start":6,"line_end":6,"column_start":22,"column_end":26},"kind":"SuperTrait","from":{"krate":2,"index":1981},"to":{"krate":0,"index":1415}},{"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/univariate/kde/kernel.rs","byte_start":332960,"byte_end":332964,"line_start":6,"line_end":6,"column_start":29,"column_end":33},"kind":"SuperTrait","from":{"krate":2,"index":1983},"to":{"krate":0,"index":1415}},{"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/univariate/kde/kernel.rs","byte_start":333168,"byte_end":333176,"line_start":18,"line_end":18,"column_start":23,"column_end":31},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":2233},"to":{"krate":0,"index":1415}},{"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/univariate/kde/mod.rs","byte_start":329441,"byte_end":329444,"line_start":21,"line_end":21,"column_start":16,"column_end":19},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":1426},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/univariate/kde/mod.rs","byte_start":330734,"byte_end":330743,"line_start":72,"line_end":72,"column_start":6,"column_end":15},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":1443},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/univariate/outliers/tukey.rs","byte_start":338729,"byte_end":338742,"line_start":66,"line_end":66,"column_start":13,"column_end":26},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":2238},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/univariate/outliers/tukey.rs","byte_start":339940,"byte_end":339953,"line_start":114,"line_end":114,"column_start":23,"column_end":36},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":2238},"to":{"krate":2,"index":2142}},{"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/univariate/outliers/tukey.rs","byte_start":340141,"byte_end":340154,"line_start":126,"line_end":126,"column_start":30,"column_end":43},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":2238},"to":{"krate":2,"index":2223}},{"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/univariate/outliers/tukey.rs","byte_start":341285,"byte_end":341289,"line_start":178,"line_end":178,"column_start":26,"column_end":30},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":1505},"to":{"krate":2,"index":5040}},{"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/univariate/outliers/tukey.rs","byte_start":342357,"byte_end":342362,"line_start":224,"line_end":224,"column_start":6,"column_end":11},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":1517},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/float.rs","byte_start":344229,"byte_end":344234,"line_start":10,"line_end":10,"column_start":12,"column_end":17},"kind":"SuperTrait","from":{"krate":47,"index":228},"to":{"krate":0,"index":1557}},{"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/float.rs","byte_start":344237,"byte_end":344241,"line_start":10,"line_end":10,"column_start":20,"column_end":24},"kind":"SuperTrait","from":{"krate":42,"index":12},"to":{"krate":0,"index":1557}},{"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/float.rs","byte_start":344266,"byte_end":344270,"line_start":10,"line_end":10,"column_start":49,"column_end":53},"kind":"SuperTrait","from":{"krate":42,"index":12},"to":{"krate":0,"index":1557}},{"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/float.rs","byte_start":344293,"byte_end":344297,"line_start":10,"line_end":10,"column_start":76,"column_end":80},"kind":"SuperTrait","from":{"krate":2,"index":1983},"to":{"krate":0,"index":1557}},{"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/float.rs","byte_start":344300,"byte_end":344304,"line_start":10,"line_end":10,"column_start":83,"column_end":87},"kind":"SuperTrait","from":{"krate":2,"index":1971},"to":{"krate":0,"index":1557}},{"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/mod.rs","byte_start":290359,"byte_end":290371,"line_start":27,"line_end":27,"column_start":9,"column_end":21},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":1573},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/stats/mod.rs","byte_start":291787,"byte_end":291799,"line_start":77,"line_end":77,"column_start":19,"column_end":31},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":1573},"to":{"krate":2,"index":2142}},{"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":4598,"byte_end":4601,"line_start":157,"line_end":157,"column_start":25,"column_end":28},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1650},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":9218,"byte_end":9227,"line_start":245,"line_end":245,"column_start":6,"column_end":15},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":2287},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":11668,"byte_end":11675,"line_start":287,"line_end":287,"column_start":26,"column_end":33},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1662},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":24729,"byte_end":24738,"line_start":690,"line_end":690,"column_start":18,"column_end":27},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1706},"to":{"krate":2,"index":1959}},{"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":26713,"byte_end":26722,"line_start":745,"line_end":745,"column_start":22,"column_end":31},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":1706},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":50710,"byte_end":50719,"line_start":1344,"line_end":1344,"column_start":9,"column_end":18},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":1706},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":56927,"byte_end":56935,"line_start":1551,"line_end":1551,"column_start":22,"column_end":30},"kind":{"Impl":{"id":93}},"from":{"krate":2,"index":32764},"to":{"krate":0,"index":1782}},{"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":60038,"byte_end":60055,"line_start":1648,"line_end":1648,"column_start":18,"column_end":35},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":2535},"to":{"krate":2,"index":1959}},{"span":{"file_name":"/Users/staniya/.cargo/registry/src/github.com-1ecc6299db9ec823/criterion-0.3.2/src/lib.rs","byte_start":60196,"byte_end":60213,"line_start":1656,"line_end":1656,"column_start":6,"column_end":23},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":2535},"to":{"krate":4294967295,"index":4294967295}}]}